<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>KNOWN. - Node</title><link href="/" rel="alternate"></link><link href="/feeds/node.atom.xml" rel="self"></link><id>/</id><updated>2018-11-01T00:00:00+08:00</updated><entry><title>Node Task Queue Research / Node 任务队列学习</title><link href="/Node_Task_Queue_Research.html" rel="alternate"></link><published>2018-11-01T00:00:00+08:00</published><updated>2018-11-01T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:None,2018-11-01:/Node_Task_Queue_Research.html</id><summary type="html">&lt;p class="first last"&gt;Node Task Queue Research&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;span id="node-task-rst"&gt;&lt;/span&gt;&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#queue-based-on-node-node" id="id1"&gt;Queue based on Node / 基于 Node 的队列&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#comparison" id="id2"&gt;Comparison / 对比&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#my-opinion" id="id3"&gt;My opinion / 个人观点&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#other-queues" id="id4"&gt;Other Queues / 其他可选的队列&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#rabbitmq" id="id5"&gt;RabbitMQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#saas-aws-simple-queue-service-saas-aws" id="id6"&gt;Saas -  AWS Simple Queue Service / Saas AWS 简单队列服务&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#saas-azure-service-bus" id="id7"&gt;Saas - Azure Service Bus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#queues-i-have-encountered" id="id8"&gt;Queues I have encountered  / 我遇到的队列&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="queue-based-on-node-node"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id1"&gt;Queue based on Node / 基于 Node 的队列&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="comparison"&gt;
&lt;h3&gt;1.1. &lt;a class="toc-backref" href="#id2"&gt;Comparison / 对比&lt;/a&gt;&lt;/h3&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="28%" /&gt;
&lt;col width="18%" /&gt;
&lt;col width="18%" /&gt;
&lt;col width="18%" /&gt;
&lt;col width="18%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Feature  / 功能&lt;/th&gt;
&lt;th class="head"&gt;Bull ☆3885&lt;/th&gt;
&lt;th class="head"&gt;Kue  ☆8007&lt;/th&gt;
&lt;th class="head"&gt;Bee  ☆1141&lt;/th&gt;
&lt;th class="head"&gt;Agenda ☆4637&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Backend / 后台支持&lt;/td&gt;
&lt;td&gt;redis&lt;/td&gt;
&lt;td&gt;redis&lt;/td&gt;
&lt;td&gt;redis&lt;/td&gt;
&lt;td&gt;mongo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Priorities / 优先级支持&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Concurrency / 并行&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Delayed jobs / 延迟任务&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Global events / 全局事件&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Rate Limiter / 速度控制&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Pause/Resume / 停止/恢复&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Sandboxed worker / 沙箱工作节点&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Repeatable jobs / 重复任务&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Atomic ops / 原子性操作&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Persistence / 持久性&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;UI&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;REST API&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Optimized for / 优化&lt;/td&gt;
&lt;td&gt;Jobs / Messages&lt;/td&gt;
&lt;td&gt;Jobs&lt;/td&gt;
&lt;td&gt;Messages&lt;/td&gt;
&lt;td&gt;Jobs&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="my-opinion"&gt;
&lt;h3&gt;1.2. &lt;a class="toc-backref" href="#id3"&gt;My opinion / 个人观点&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;After I've reviewed their documents, I listed my own opinion.&lt;/p&gt;
&lt;p&gt;在查看过介绍 和 使用文档后，有一些自己的心得:&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="20%" /&gt;
&lt;col width="80%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Products  / 产品&lt;/th&gt;
&lt;th class="head"&gt;Descriptions / 描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Bull&lt;/td&gt;
&lt;td&gt;&lt;div class="first last line-block"&gt;
&lt;div class="line"&gt;Job and Queue:&lt;/div&gt;
&lt;div class="line"&gt;One queue can contain one kind of job.&lt;/div&gt;
&lt;div class="line"&gt;每一个队列包含一种任务&lt;/div&gt;
&lt;div class="line"&gt;Every queue has its own Redis connection except for more configuration.&lt;/div&gt;
&lt;div class="line"&gt;每个队列需要一个Redis连接， 需要额外的配置才可以共享&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;Advantages:  / 好处&lt;/div&gt;
&lt;div class="line"&gt;Quicker and full functional.&lt;/div&gt;
&lt;div class="line"&gt;队列任务消除 相对较快，功能全面&lt;/div&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Kue&lt;/td&gt;
&lt;td&gt;&lt;div class="first last line-block"&gt;
&lt;div class="line"&gt;Job and Queue:&lt;/div&gt;
&lt;div class="line"&gt;One queue can contain multiple kinds of jobs.&lt;/div&gt;
&lt;div class="line"&gt;一个队列 包含多种类型的任务&lt;/div&gt;
&lt;div class="line"&gt;So one queue is enough and only 1 redis connection is needed.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;Speed: But the speed of time-consuming is not that fast from the benchmark test from Bee.&lt;/div&gt;
&lt;div class="line"&gt;队列任务消除缓慢， 而且维护较少&lt;/div&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Bee&lt;/td&gt;
&lt;td&gt;&lt;div class="first last line-block"&gt;
&lt;div class="line"&gt;Job and Queue:&lt;/div&gt;
&lt;div class="line"&gt;One queue can contain multiple kinds of jobs.&lt;/div&gt;
&lt;div class="line"&gt;每一个队列包含一种任务&lt;/div&gt;
&lt;div class="line"&gt;Every queue has its own Redis connection.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;Quicker and lighter. / 更快 也更轻量级&lt;/div&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Agenda&lt;/td&gt;
&lt;td&gt;&lt;div class="first last line-block"&gt;
&lt;div class="line"&gt;Advantages:&lt;/div&gt;
&lt;div class="line"&gt;Designed for Scheduler and Repeat Jobs.&lt;/div&gt;
&lt;div class="line"&gt;更偏向于 定期/周期任务&lt;/div&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Recommendation: &lt;code&gt;Bull&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;推荐使用 &lt;code&gt;Bull&lt;/code&gt; .&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="other-queues"&gt;
&lt;h2&gt;2. &lt;a class="toc-backref" href="#id4"&gt;Other Queues / 其他可选的队列&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;However, queues based on Node can satisfy us if the volume is OK.&lt;/p&gt;
&lt;p&gt;But if the number soars, we should seek help for other real messages queues.&lt;/p&gt;
&lt;p&gt;如果我们的任务量比较小，整个架构也不复杂的话，基于 Node 的队列基本可以满足要求。&lt;/p&gt;
&lt;p&gt;但是如果任务量大，构架复杂， 我们需要依赖于一些专业的标准化的队列服务。&lt;/p&gt;
&lt;div class="section" id="rabbitmq"&gt;
&lt;h3&gt;2.1. &lt;a class="toc-backref" href="#id5"&gt;RabbitMQ&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Implementation of AMQP (Advanced Message Queuing Protocol),&lt;/p&gt;
&lt;p&gt;an open standard application layer protocol for message-oriented middleware.&lt;/p&gt;
&lt;p&gt;是 AMQP 的一种实现。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Standard Protocol / 标准协议&lt;/li&gt;
&lt;li&gt;No Language Limitation / 不是基于某种语言&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="saas-aws-simple-queue-service-saas-aws"&gt;
&lt;h3&gt;2.2. &lt;a class="toc-backref" href="#id6"&gt;Saas -  AWS Simple Queue Service / Saas AWS 简单队列服务&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Reference: &lt;a class="reference external" href="https://aws.amazon.com/sqs/"&gt;https://aws.amazon.com/sqs/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The fee of first 1 million messages per mon is free.
每个月首个一百万条消息是免费的...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Standard Queues / 标准队列&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;Unlimited Throughput&lt;/li&gt;
&lt;li&gt;At-Least-Once Delivery&lt;/li&gt;
&lt;li&gt;Best-Effort Ordering&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;FIFO Queues / 先进先出队列&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;High Throughput&lt;/li&gt;
&lt;li&gt;Exactly-Once Processing&lt;/li&gt;
&lt;li&gt;First-In-First-Out Delivery&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="saas-azure-service-bus"&gt;
&lt;h3&gt;2.3. &lt;a class="toc-backref" href="#id7"&gt;Saas - Azure Service Bus&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Reference: &lt;a class="reference external" href="https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-queues-topics-subscriptions"&gt;https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-queues-topics-subscriptions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The fee of first 1000 brokered connections (744,000 messages) /per mon is free . (&lt;a class="reference external" href="https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-pricing-billing"&gt;https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-pricing-billing&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;每个月首个 74 万消息是免费的。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Queues: One to one&lt;/li&gt;
&lt;li&gt;Topics and subscriptions: One to many&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="queues-i-have-encountered"&gt;
&lt;h2&gt;3. &lt;a class="toc-backref" href="#id8"&gt;Queues I have encountered  / 我遇到的队列&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In TM, I used to be a member of CAS, we use two kind types of queues:&lt;/p&gt;
&lt;p&gt;在 TM CAS 团队(Saas 产品), 我们使用了两种类型的队列:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Azure Message Queue: Quite expensive&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;Azure 的Service Bus，Hook Email 之后会将Email事件存放在Queue 中，顺序处理， 也可以作为监控指标&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Queue designed by ourselves: / 自行设计的 Queue&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first"&gt;MS SQL backed, and every task are record. And micro services will get and handle them periodically.&lt;/p&gt;
&lt;p class="last"&gt;基于 MS SQL，周期性任务会存在在 MSSQL 中 每一步会去更新状态， 直到最终完成。&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Celery + RabbitMQ + Python&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;Python Web Service 有一些长期的异步任务需要实现，使用的是 Celery (&lt;a class="reference external" href="http://www.celeryproject.org/"&gt;http://www.celeryproject.org/&lt;/a&gt;) , 基于 RabbitMQ。&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Node"></category></entry></feed>