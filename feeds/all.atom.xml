<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>KNOWN</title><link href="https://brianshen1990.github.io/" rel="alternate"></link><link href="https://brianshen1990.github.io/feeds/all.atom.xml" rel="self"></link><id>https://brianshen1990.github.io/</id><updated>2019-03-05T00:00:00+08:00</updated><entry><title>TCP and TLS Handshaking</title><link href="https://brianshen1990.github.io/TCP_and_TLS_Handshaking.html" rel="alternate"></link><published>2019-03-05T00:00:00+08:00</published><updated>2019-03-05T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:brianshen1990.github.io,2019-03-05:/TCP_and_TLS_Handshaking.html</id><summary type="html">&lt;p class="first last"&gt;TCP and TLS Handshaking&lt;/p&gt;
</summary><content type="html">&lt;!-- TCP_and_TLS_Handshaking: --&gt;
&lt;div class="contents topic" id="contents"&gt;
&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#intro" id="id1"&gt;Intro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#tcp-handshaking" id="id2"&gt;TCP handshaking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#tls-handshaking" id="id3"&gt;TLS handshaking&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#basic-tls-handshake" id="id4"&gt;Basic TLS handshake&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#resumed-tls-handshake" id="id5"&gt;Resumed TLS handshake&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#reference" id="id6"&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="intro"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id1"&gt;Intro&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have a customer and they have a client which connects to our provided server. While others can connect to the server seamlessly, this client cannot connect in any way.&lt;/p&gt;
&lt;p&gt;So I told them to make sure that their client can ping, telnet and openssl to the server.
Everything seems OK. So it is time for me to take responsibility.&lt;/p&gt;
&lt;p&gt;I collected the client debug logs and reviewed the sever side debug logs. I found that client's logs suggested that &lt;code&gt;An existing connection was forcibly closed by the remote host&lt;/code&gt; , and the error number is &lt;code&gt;10054&lt;/code&gt; .
In the server side, the debug logs showed that a connection is broken.&lt;/p&gt;
&lt;p&gt;I searched in the Internet and found that there are many reasons for this error:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;You are sending malformed data to the application&lt;/li&gt;
&lt;li&gt;The network link between the client and server is going down for some reason&lt;/li&gt;
&lt;li&gt;You have triggered a bug in the third-party application that caused it to crash&lt;/li&gt;
&lt;li&gt;The third-party application has exhausted system resources&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;However, I don't think any of these cause my situation because all things seemed work OK.&lt;/p&gt;
&lt;p&gt;In the end, I had to seek help from lower layer information. I used TCPDUMP to collection some information.
Luckily, after comparing the broken connection and correct ones, I found something quite strange.&lt;/p&gt;
&lt;p&gt;Usually, after three steps' handshaking, a client will send a client hello to the server, like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Client -&amp;gt; Server &lt;span class="o"&gt;[&lt;/span&gt;SYN&lt;span class="o"&gt;]&lt;/span&gt;
Client &amp;lt;- Server &lt;span class="o"&gt;[&lt;/span&gt;SYN, ACK&lt;span class="o"&gt;]&lt;/span&gt;
Client -&amp;gt; Server &lt;span class="o"&gt;[&lt;/span&gt;ACK&lt;span class="o"&gt;]&lt;/span&gt;
Client -&amp;gt; Server &lt;span class="o"&gt;[&lt;/span&gt;PSH, ACK&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;sends SSL Client Hello&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But for the broken ones, client will send [RST ACK] after the basic three steps' handshaking.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Client -&amp;gt; Server &lt;span class="o"&gt;[&lt;/span&gt;SYN&lt;span class="o"&gt;]&lt;/span&gt;
Client &amp;lt;- Server &lt;span class="o"&gt;[&lt;/span&gt;SYN, ACK&lt;span class="o"&gt;]&lt;/span&gt;
Client -&amp;gt; Server &lt;span class="o"&gt;[&lt;/span&gt;ACK&lt;span class="o"&gt;]&lt;/span&gt;
Client -&amp;gt; Server &lt;span class="o"&gt;[&lt;/span&gt;RST, ACK&lt;span class="o"&gt;]&lt;/span&gt;  &lt;span class="o"&gt;(&lt;/span&gt;connection closes&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Quite strange. Most situations in the internet are like this: &lt;code&gt;the connection is closed or reseted by the server&lt;/code&gt; . So when a client chose to close the connection, it is quite abnormal.&lt;/p&gt;
&lt;p&gt;I seek help from my network colleagues. And she suggested me that, from the &lt;code&gt;pcap&lt;/code&gt; file, it shows that the TCP connection is OK, but when it comes to application protocol, it gets wrong. There maybe some security policy in the client side, for example, URL blocking. So when the three steps' handshaking is been done, the connection will be closed immediately.&lt;/p&gt;
&lt;p&gt;I verified it by putting a URL blocking device in front or the client, and the connection is reseted after handshaking, that's wonderful!&lt;/p&gt;
&lt;p&gt;So next I will have some notes about what happens during TCP and TLS handshaking.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="tcp-handshaking"&gt;
&lt;h2&gt;2. &lt;a class="toc-backref" href="#id2"&gt;TCP handshaking&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Quite simple:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Client -&amp;gt; Server &lt;span class="o"&gt;[&lt;/span&gt;SYN X&lt;span class="o"&gt;]&lt;/span&gt;
Client &amp;lt;- Server &lt;span class="o"&gt;[&lt;/span&gt;SYN Y, ACK X+1&lt;span class="o"&gt;]&lt;/span&gt;
Client -&amp;gt; Server &lt;span class="o"&gt;[&lt;/span&gt;ACK Y+1&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;The first host (Client) sends the second host (Server) a &amp;quot;synchronize&amp;quot; (SYN) message with its own sequence number x, which Server receives.&lt;/li&gt;
&lt;li&gt;Server replies with a synchronize-acknowledgment (SYN-ACK) message with its own sequence number y and acknowledgement number x+1, which Client receives.&lt;/li&gt;
&lt;li&gt;Client replies with an acknowledgment (ACK) message with acknowledgement number y+1, which Server receives and to which he doesn't need to reply.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/web/handshaking01.png" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="tls-handshaking"&gt;
&lt;h2&gt;3. &lt;a class="toc-backref" href="#id3"&gt;TLS handshaking&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;TLS is an application layer protocol, it is beyond TCP. So everything related to TLS are happened after basic TCP handshaking.&lt;/p&gt;
&lt;div class="section" id="basic-tls-handshake"&gt;
&lt;h3&gt;3.1. &lt;a class="toc-backref" href="#id4"&gt;Basic TLS handshake&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Client -&amp;gt; Server &lt;span class="o"&gt;[&lt;/span&gt;Client Hello&lt;span class="o"&gt;]&lt;/span&gt;
Client &amp;lt;- Server &lt;span class="o"&gt;[&lt;/span&gt;Server Hello&lt;span class="o"&gt;]&lt;/span&gt;
Client &amp;lt;- Server &lt;span class="o"&gt;[&lt;/span&gt;Certificate&lt;span class="o"&gt;]&lt;/span&gt;
Client &amp;lt;- Server &lt;span class="o"&gt;[&lt;/span&gt;ServerKeyExchange&lt;span class="o"&gt;]&lt;/span&gt;
Client &amp;lt;- Server &lt;span class="o"&gt;[&lt;/span&gt;ServerHelloDone&lt;span class="o"&gt;]&lt;/span&gt;
Client -&amp;gt; Server &lt;span class="o"&gt;[&lt;/span&gt;ClientKeyExchange&lt;span class="o"&gt;]&lt;/span&gt;

Client -&amp;gt; Server &lt;span class="o"&gt;[&lt;/span&gt;ChangeCipherSpec&lt;span class="o"&gt;]&lt;/span&gt;

Client &amp;lt;- Server &lt;span class="o"&gt;[&lt;/span&gt;ChangeCipherSpec&lt;span class="o"&gt;]&lt;/span&gt;

Client &amp;lt;-&amp;gt; Server &lt;span class="o"&gt;[&lt;/span&gt;Application&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Negotiation phase:&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A client sends a ClientHello message specifying &lt;strong&gt;the highest TLS protocol version it supports, a random number, a list of suggested cipher suites and suggested compression methods&lt;/strong&gt; . If the client is attempting to perform a resumed handshake, it may send a session ID. If the client can use Application-Layer Protocol Negotiation, it may include a list of supported application protocols, such as HTTP/2.&lt;/li&gt;
&lt;li&gt;The server responds with a ServerHello message, containing &lt;strong&gt;the chosen protocol version, a random number, CipherSuite and compression method from the choices offered by the client&lt;/strong&gt; . To confirm or allow resumed handshakes the server may send a session ID. The chosen protocol version should be the highest that both the client and server support. For example, if the client supports TLS version 1.1 and the server supports version 1.2, version 1.1 should be selected; version 1.2 should not be selected.&lt;/li&gt;
&lt;li&gt;The server sends its Certificate message (depending on the selected cipher suite, this may be omitted by the server).&lt;/li&gt;
&lt;li&gt;The server sends its ServerKeyExchange message (depending on the selected cipher suite, this may be omitted by the server). This message is sent for all DHE and DH_anon ciphersuites.&lt;/li&gt;
&lt;li&gt;The server sends a ServerHelloDone message, indicating it is done with handshake negotiation.&lt;/li&gt;
&lt;li&gt;The client responds with a ClientKeyExchange message, which may contain a PreMasterSecret, public key, or nothing. (Again, this depends on the selected cipher.) This PreMasterSecret is encrypted using the public key of the server certificate.&lt;/li&gt;
&lt;li&gt;The client and server then &lt;strong&gt;use the random numbers and PreMasterSecret to compute a common secret&lt;/strong&gt; , called the &amp;quot;master secret&amp;quot;. All other key data for this connection is derived from this master secret (and the client- and server-generated random values), which is passed through a carefully designed pseudorandom function.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;The client now sends a ChangeCipherSpec record, essentially telling the server, &amp;quot;Everything I tell you from now on will be authenticated (and encrypted if encryption parameters were present in the server certificate).&amp;quot; The ChangeCipherSpec is itself a record-level protocol with content type of 20.&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Finally, the client sends an authenticated and encrypted Finished message, containing a hash and MAC over the previous handshake messages.&lt;/li&gt;
&lt;li&gt;The server will attempt to decrypt the client's Finished message and verify the hash and MAC. If the decryption or verification fails, the handshake is considered to have failed and the connection should be torn down.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;Finally, the server sends a ChangeCipherSpec, telling the client, &amp;quot;Everything I tell you from now on will be authenticated (and encrypted, if encryption was negotiated).&amp;quot;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The server sends its authenticated and encrypted Finished message.&lt;/li&gt;
&lt;li&gt;The client performs the same decryption and verification procedure as the server did in the previous step.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ol class="arabic simple" start="4"&gt;
&lt;li&gt;Application phase:&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
at this point, the &amp;quot;handshake&amp;quot; is complete and the application protocol is enabled, with content type of 23. Application messages exchanged between client and server will also be authenticated and optionally encrypted exactly like in their Finished message. Otherwise, the content type will return 25 and the client will not authenticate.&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="resumed-tls-handshake"&gt;
&lt;h3&gt;3.2. &lt;a class="toc-backref" href="#id5"&gt;Resumed TLS handshake&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Public key operations (e.g., RSA) are relatively expensive in terms of computational power. TLS provides a secure shortcut in the handshake mechanism to avoid these operations: resumed sessions. Resumed sessions are implemented using session IDs or session tickets.&lt;/p&gt;
&lt;p&gt;Apart from the performance benefit, resumed sessions can also be used for single sign-on, as it guarantees that both the original session and any resumed session originate from the same client. This is of particular importance for the FTP over TLS/SSL protocol, which would otherwise suffer from a man-in-the-middle attack in which an attacker could intercept the contents of the secondary data connections.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Session IDs&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In an ordinary full handshake, the server sends a session id as part of the ServerHello message. The client associates this session id with the server's IP address and TCP port, so that when the client connects again to that server, it can use the session id to shortcut the handshake. In the server, the session id maps to the cryptographic parameters previously negotiated, specifically the &amp;quot;master secret&amp;quot;. Both sides must have the same &amp;quot;master secret&amp;quot; or the resumed handshake will fail (this prevents an eavesdropper from using a session id). The random data in the ClientHello and ServerHello messages virtually guarantee that the generated connection keys will be different from in the previous connection. In the RFCs, this type of handshake is called an abbreviated handshake. It is also described in the literature as a restart handshake.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Client -&amp;gt; Server &lt;span class="o"&gt;[&lt;/span&gt;Client Hello With Session ID&lt;span class="o"&gt;]&lt;/span&gt;
Client &amp;lt;- Server &lt;span class="o"&gt;[&lt;/span&gt;Server Hello With Session ID&lt;span class="o"&gt;]&lt;/span&gt;

Client &amp;lt;- Server &lt;span class="o"&gt;[&lt;/span&gt;ChangeCipherSpec&lt;span class="o"&gt;]&lt;/span&gt;

Client -&amp;gt; Server &lt;span class="o"&gt;[&lt;/span&gt;ChangeCipherSpec&lt;span class="o"&gt;]&lt;/span&gt;

Client &amp;lt;-&amp;gt; Server &lt;span class="o"&gt;[&lt;/span&gt;Application&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Negotiation phase:&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A client sends a ClientHello message specifying the highest TLS protocol version it supports, a random number, a list of suggested cipher suites and compression methods. Included in the message is the &lt;strong&gt;session id&lt;/strong&gt; from the previous TLS connection.&lt;/li&gt;
&lt;li&gt;The server responds with a ServerHello message, containing the chosen protocol version, a random number, cipher suite and compression method from the choices offered by the client. If the server recognizes the session id sent by the client, it responds with the same session id. The client uses this to recognize that a resumed handshake is being performed. If the server does not recognize the session id sent by the client, it sends a different value for its session id. This tells the client that a resumed handshake will not be performed. At this point, both the client and server have the &amp;quot;master secret&amp;quot; and random data to generate the key data to be used for this connection.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;The server now sends a ChangeCipherSpec record, essentially telling the client, &amp;quot;Everything I tell you from now on will be encrypted.&amp;quot; The ChangeCipherSpec is itself a record-level protocol and has type 20 and not 22.&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Finally, the server sends an encrypted Finished message, containing a hash and MAC over the previous handshake messages.&lt;/li&gt;
&lt;li&gt;The client will attempt to decrypt the server's Finished message and verify the hash and MAC. If the decryption or verification fails, the handshake is considered to have failed and the connection should be torn down.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;Finally, the client sends a ChangeCipherSpec, telling the server, &amp;quot;Everything I tell you from now on will be encrypted. &amp;quot;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The client sends its own encrypted Finished message.&lt;/li&gt;
&lt;li&gt;The server performs the same decryption and verification procedure as the client did in the previous step.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ol class="arabic simple" start="4"&gt;
&lt;li&gt;Application phase: at this point, the &amp;quot;handshake&amp;quot; is complete and the application protocol is enabled, with content type of 23. Application messages exchanged between client and server will also be encrypted exactly like in their Finished message.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/web/handshaking02.png" /&gt;
&lt;/div&gt;
&lt;p&gt;In this Pcap recorded from visiting Github, it demos this steps.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="reference"&gt;
&lt;h3&gt;3.3. &lt;a class="toc-backref" href="#id6"&gt;Reference&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://stackoverflow.com/questions/34185716/tcp-client-sends-rst-ack-immediately-after-sending-ack-to-server"&gt;https://stackoverflow.com/questions/34185716/tcp-client-sends-rst-ack-immediately-after-sending-ack-to-server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://stackoverflow.com/questions/2582036/an-existing-connection-was-forcibly-closed-by-the-remote-host"&gt;https://stackoverflow.com/questions/2582036/an-existing-connection-was-forcibly-closed-by-the-remote-host&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Handshaking"&gt;https://en.wikipedia.org/wiki/Handshaking&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Transport_Layer_Security#TLS_handshake"&gt;https://en.wikipedia.org/wiki/Transport_Layer_Security#TLS_handshake&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="TCP"></category><category term="TLS"></category><category term="Handshaking"></category></entry><entry><title>Web Security 08 - Sniff</title><link href="https://brianshen1990.github.io/Web_Security_07_MIME_Sniff.html" rel="alternate"></link><published>2019-02-28T00:00:00+08:00</published><updated>2019-02-28T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:brianshen1990.github.io,2019-02-28:/Web_Security_07_MIME_Sniff.html</id><summary type="html">&lt;p class="first last"&gt;Web Security 08 - MIME Sniff&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;span id="web-security-07-mime-sniff"&gt;&lt;/span&gt;&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#what-is-mime-type" id="id1"&gt;What is MIME Type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#what-s-mime-sniffing" id="id2"&gt;What's MIME sniffing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#sample" id="id3"&gt;Sample&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#how-to-fix" id="id4"&gt;How to fix&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;All the sample code is in &lt;a class="reference external" href="https://github.com/brianshen1990/WebSecurity"&gt;https://github.com/brianshen1990/WebSecurity&lt;/a&gt; .&lt;/p&gt;
&lt;div class="section" id="what-is-mime-type"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id1"&gt;What is MIME Type&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A Multipurpose Internet Mail Extensions (MIME) type is a standard that indicates the nature and format of a document, file, or assortment of bytes.&lt;/p&gt;
&lt;p&gt;Browsers use the MIME type, not the file extension, to determine how to process a URL, so it's important that web servers send the correct MIME type in the response's Content-Type header. If this is not correctly configured, browsers are likely to misinterpret the contents of files and sites will not work correctly, and downloaded files may be mishandled.&lt;/p&gt;
&lt;p&gt;General Types:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;applicationList (application/octet-stream, application/pdf, application/pkcs8, and application/zip)&lt;/li&gt;
&lt;li&gt;audio (audio/mpeg, audio/vorbis)&lt;/li&gt;
&lt;li&gt;font (font/woff, font/ttf, and font/otf)&lt;/li&gt;
&lt;li&gt;image (image/jpeg, image/png, image/gif, and image/svg+xml)&lt;/li&gt;
&lt;li&gt;model (model/3mf and model/vml)&lt;/li&gt;
&lt;li&gt;text (text/html, text/plain, text/html, text/javascript, text/css)&lt;/li&gt;
&lt;li&gt;video (video/mp4)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="what-s-mime-sniffing"&gt;
&lt;h2&gt;2. &lt;a class="toc-backref" href="#id2"&gt;What's MIME sniffing&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In the absence of a MIME type, or in certain cases where browsers believe they are incorrect, browsers may perform MIME sniffing — guessing the correct MIME type by looking at the bytes of the resource.&lt;/p&gt;
&lt;p&gt;Each browser performs MIME sniffing differently and under different circumstances. (For example, Safari will look at the file extension in the URL if the sent MIME type is unsuitable.) There are security concerns as some MIME types represent executable content. Servers can prevent MIME sniffing by sending the X-Content-Type-Options header.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sample"&gt;
&lt;h2&gt;3. &lt;a class="toc-backref" href="#id3"&gt;Sample&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Let's see what happened in our blog system:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/security/WebSecurity23.png" /&gt;
&lt;/div&gt;
&lt;div class="warning"&gt;
&lt;p class="first admonition-title"&gt;Warning&lt;/p&gt;
&lt;p class="last"&gt;If a file is cached in our browser, then we cannot see the content type in DevTools.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Let's modifying our system ( &lt;code&gt;index.html&lt;/code&gt; ):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;./userImage.txt&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;userImage.txt&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I take over the browser!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And run our system:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;node index.js
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It seems that the &lt;code&gt;txt&lt;/code&gt; plain file is being executed!&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/security/WebSecurity24.png" /&gt;
&lt;/div&gt;
&lt;p&gt;What if our system allows users to upload txt file types, and some bad guys upload a txt file full of scripts, and in the blog content, they somehow import this scripts, then XSS attack can be happened.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="how-to-fix"&gt;
&lt;h2&gt;4. &lt;a class="toc-backref" href="#id4"&gt;How to fix&lt;/a&gt;&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Stop browser performing MIME sniffing&lt;/li&gt;
&lt;li&gt;Send the correct MIME Type&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now let's build a safe website &lt;code&gt;indexSafe.js&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;helmet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;noSniff&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And run our system:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;node indexSafe.js
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/security/WebSecurity25.png" /&gt;
&lt;/div&gt;
&lt;p&gt;The plain txt file won't be executed any more.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types"&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="Security"></category><category term="Web"></category><category term="MIME Sniff"></category><category term="Web Security"></category></entry><entry><title>Web Security 07 - XSS Protection</title><link href="https://brianshen1990.github.io/Web_Security_07_XSS_Protection.html" rel="alternate"></link><published>2019-02-26T00:00:00+08:00</published><updated>2019-02-26T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:brianshen1990.github.io,2019-02-26:/Web_Security_07_XSS_Protection.html</id><summary type="html">&lt;p class="first last"&gt;Web Security 07 - XSS Protection&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;span id="id1"&gt;&lt;/span&gt;&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#what-is-xss" id="id2"&gt;What is XSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#sample" id="id3"&gt;Sample&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#how-chrome-xss-auditor-works" id="id4"&gt;How Chrome XSS Auditor works?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#how-to-fix" id="id5"&gt;How to fix&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;All the sample code is in &lt;a class="reference external" href="https://github.com/brianshen1990/WebSecurity"&gt;https://github.com/brianshen1990/WebSecurity&lt;/a&gt; .&lt;/p&gt;
&lt;div class="section" id="what-is-xss"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id2"&gt;What is XSS&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Cross-site scripting, abbreviated to “XSS”, is a way attackers can take over webpages.
One may wonder the abbreviation should be &amp;quot;CSS&amp;quot;, but CSS is actually Cascaded Style Sheet.&lt;/p&gt;
&lt;p&gt;The goal of an XSS attack is to gain control of JavaScript in the victim’s browser. Once a hacker has done that, there’s a lot of nasty stuff they can do: log your actions, impersonate you, steal your authentication cookies, and much more.&lt;/p&gt;
&lt;p&gt;XSS attacks can generally be categorized into two categories: stored and reflected.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Stored XSS Attacks&lt;/p&gt;
&lt;p&gt;Stored attacks are those where the injected script is permanently stored on the target servers, such as in a database, in a message forum, visitor log, comment field, etc. The victim then retrieves the malicious script from the server when it requests the stored information. Stored XSS is also sometimes referred to as Persistent or Type-I XSS.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Reflected XSS Attacks&lt;/p&gt;
&lt;p&gt;Reflected attacks are those where the injected script is reflected off the web server, such as in an error message, search result, or any other response that includes some or all of the input sent to the server as part of the request. Reflected attacks are delivered to victims via another route, such as in an e-mail message, or on some other website. When a user is tricked into clicking on a malicious link, submitting a specially crafted form, or even just browsing to a malicious site, the injected code travels to the vulnerable web site, which reflects the attack back to the user’s browser. The browser then executes the code because it came from a &amp;quot;trusted&amp;quot; server. Reflected XSS is also sometimes referred to as Non-Persistent or Type-II XSS.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="sample"&gt;
&lt;h2&gt;2. &lt;a class="toc-backref" href="#id3"&gt;Sample&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This section, we will give a sample of reflected XSS Attacks. Since we have a blog system, sometimes a user has to search for some blogs. But suppose that we allow users to input anything without filtering.&lt;/p&gt;
&lt;p&gt;This is the search page &lt;code&gt;__viewPage.html&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;jquery-3.3.1.min.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;testXss&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
      &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;?search=&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#xssId&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
XSS Tested:
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;xssId&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="ni"&gt;&amp;amp;nbsp;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;button&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;onclick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;testXss()&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Search&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  You searched: &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;xssReflected&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To demo the &lt;code&gt;X-XSS-Protection&lt;/code&gt; flag, we will send client the raw content, instead of a file &lt;code&gt;index.js&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/viewPage.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;tempVal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;search&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tempVal&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sb"&gt;`&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="sb"&gt;  &amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class="sb"&gt;    &amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;jquery-3.3.1.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="sb"&gt;    &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="sb"&gt;      const testXss = function(){&lt;/span&gt;
&lt;span class="sb"&gt;        window.location = &amp;quot;?search=&amp;quot; + $(&amp;quot;#xssId&amp;quot;).val();&lt;/span&gt;
&lt;span class="sb"&gt;      }&lt;/span&gt;
&lt;span class="sb"&gt;    &amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="sb"&gt;  &amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="sb"&gt;  &amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class="sb"&gt;  &amp;lt;br&amp;gt;&lt;/span&gt;
&lt;span class="sb"&gt;  XSS Tested:&lt;/span&gt;
&lt;span class="sb"&gt;  &amp;lt;input type=&amp;quot;text&amp;quot; id=&amp;quot;xssId&amp;quot; &amp;gt; &amp;amp;nbsp; &amp;lt;input type=&amp;quot;button&amp;quot; onclick=&amp;quot;testXss()&amp;quot; value=&amp;quot;Search&amp;quot; /&amp;gt;&lt;/span&gt;
&lt;span class="sb"&gt;  &amp;lt;div&amp;gt;&lt;/span&gt;
&lt;span class="sb"&gt;    You searched: &amp;lt;span id=&amp;quot;xssReflected&amp;quot;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;tempVal&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class="sb"&gt;  &amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="sb"&gt;  &amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="sb"&gt;  &amp;lt;/html&amp;gt;`&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now let's start our website:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;node index.js
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In our browser, input &lt;code&gt;localhost:8888/viewPage.html&lt;/code&gt; . If we search &lt;code&gt;node&lt;/code&gt; , then our website will return a page with the search keywords.&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/security/WebSecurity19.png" /&gt;
&lt;/div&gt;
&lt;p&gt;However, if we input something malicious like &lt;code&gt;&amp;lt;script&amp;gt;alert(&amp;quot;I take over the browser now!&amp;quot;)&amp;lt;/script&amp;gt;&lt;/code&gt; :&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/security/WebSecurity20.png" /&gt;
&lt;/div&gt;
&lt;p&gt;Look, chrome just blocks the scripts and refuses to load the page. But actually, there is no XSS header at all.&lt;/p&gt;
&lt;p&gt;Because for Chrome, XSS Auditor blocks by default. (&lt;a class="reference external" href="https://www.chromestatus.com/feature/5748927282282496"&gt;https://www.chromestatus.com/feature/5748927282282496&lt;/a&gt;) .&lt;/p&gt;
&lt;p&gt;However, if we force chrome to disable XSS Auditor &lt;code&gt;index.js&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/html&amp;gt;` ;&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;X-XSS-Protection&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and start again:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;node index.js
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/security/WebSecurity21.png" /&gt;
&lt;/div&gt;
&lt;p&gt;Scripts can be executed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="how-chrome-xss-auditor-works"&gt;
&lt;h2&gt;3. &lt;a class="toc-backref" href="#id4"&gt;How Chrome XSS Auditor works?&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.chromium.org/developers/design-documents/xss-auditor"&gt;https://www.chromium.org/developers/design-documents/xss-auditor&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The XSS Auditor works by matching request data to data in a response page.&lt;/p&gt;
&lt;p&gt;So by comparing our URL and the page content, if there are some scripts and the content is same, then there is a possibility that the page may contains XSS attack.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="how-to-fix"&gt;
&lt;h2&gt;4. &lt;a class="toc-backref" href="#id5"&gt;How to fix&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The HTTP X-XSS-Protection response header is a feature of Internet Explorer, Chrome and Safari that stops pages from loading when they detect reflected cross-site scripting (XSS) attacks. Although these protections are largely unnecessary in modern browsers when sites implement a strong Content-Security-Policy that disables the use of inline JavaScript ('unsafe-inline'), they can still provide protections for users of older web browsers that don't yet support CSP.&lt;/p&gt;
&lt;p&gt;Let's do a little modification to our &lt;code&gt;indexSafe.js&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;app.use&lt;span class="o"&gt;(&lt;/span&gt;helmet.xssFilter&lt;span class="o"&gt;())&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and run :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;node indexSafe.js
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, it won't be loaded again:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/security/WebSecurity22.png" /&gt;
&lt;/div&gt;
&lt;p&gt;(If any step fails, please use incognito window to open it.)&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.owasp.org/index.php/Cross-site_Scripting_(XSS"&gt;https://www.owasp.org/index.php/Cross-site_Scripting_(XSS&lt;/a&gt;)
&lt;a class="reference external" href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection"&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="Security"></category><category term="Web"></category><category term="XSS Protection"></category><category term="Web Security"></category></entry><entry><title>Web Security 06 CSP</title><link href="https://brianshen1990.github.io/Web_Security_06_CSP.html" rel="alternate"></link><published>2019-02-21T00:00:00+08:00</published><updated>2019-02-21T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:brianshen1990.github.io,2019-02-21:/Web_Security_06_CSP.html</id><summary type="html">&lt;p class="first last"&gt;Web Security 06 - CSP&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;span id="id1"&gt;&lt;/span&gt;&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#what-is-content-security-policy" id="id2"&gt;What is Content Security Policy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#sample" id="id3"&gt;Sample&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#how-to-fix" id="id4"&gt;How to fix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#reference" id="id5"&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;All the sample code is in &lt;a class="reference external" href="https://github.com/brianshen1990/WebSecurity"&gt;https://github.com/brianshen1990/WebSecurity&lt;/a&gt; .&lt;/p&gt;
&lt;div class="section" id="what-is-content-security-policy"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id2"&gt;What is Content Security Policy&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The HTTP Content-Security-Policy response header allows web site administrators to control resources the user agent is allowed to load for a given page. With a few exceptions, policies mostly involve specifying server origins and script endpoints. This helps guard against cross-site scripting attacks (XSS).&lt;/p&gt;
&lt;p&gt;For example, if I open my github blog, it will load resources from Google. I trust google, so It's OK that some google scripts are in my site.&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/security/WebSecurity16.png" /&gt;
&lt;/div&gt;
&lt;p&gt;But what if my site load some resource from other site that I don't trust? So CSP is very important in this situation.&lt;/p&gt;
&lt;p&gt;The syntax of CSP is simple, but we can define complex situations.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Content-Security-Policy: &amp;lt;policy-directive&amp;gt;; &amp;lt;policy-directive&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Content-Security-Policy: default-src &lt;span class="s1"&gt;&amp;#39;self&amp;#39;&lt;/span&gt; http://example.com&lt;span class="p"&gt;;&lt;/span&gt;
                         script-src http://example.com/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This definition means all resources can be only loaded from the current site and &lt;a class="reference external" href="http://example.com"&gt;http://example.com&lt;/a&gt;, but scripts can be only loaded from &lt;a class="reference external" href="http://example.com/"&gt;http://example.com/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are many kinds of source:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;child-src&lt;/li&gt;
&lt;li&gt;connect-src&lt;/li&gt;
&lt;li&gt;font-src&lt;/li&gt;
&lt;li&gt;frame-src&lt;/li&gt;
&lt;li&gt;img-src&lt;/li&gt;
&lt;li&gt;manifest-src&lt;/li&gt;
&lt;li&gt;media-src&lt;/li&gt;
&lt;li&gt;object-src&lt;/li&gt;
&lt;li&gt;prefetch-src&lt;/li&gt;
&lt;li&gt;script-src&lt;/li&gt;
&lt;li&gt;style-src&lt;/li&gt;
&lt;li&gt;worker-src&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="sample"&gt;
&lt;h2&gt;2. &lt;a class="toc-backref" href="#id3"&gt;Sample&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Let's assume one  bad user in our blog system post a blog. The content includes some malicious scripts.&lt;/p&gt;
&lt;p&gt;And when other users read his article, the page will load like this &lt;code&gt;staticFile/blogView.html&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;jquery-3.3.1.min.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h5&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Blog Title: Sample CSP&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h5&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;blogContent&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;This is the content of my blog.&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://localhost:8889/hackCSP.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;And I will show you how dangerous if we do not use CSP.&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To make the demo more simple, let assume that we do not set httpOnly to our cookies &lt;code&gt;index.js&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="nx"&gt;secret&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;our apps little secret&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;resave&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;saveUninitialized&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;maxAge&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;60000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;httpOnly&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since we load scripts from 8889, so let's add a malicious script &lt;code&gt;staticHack/hackCSP.js&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;ready&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;xxx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I got cookie:&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;xxx&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;now let's begin:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;node index.js
node indexHack.js
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Open &lt;a class="reference external" href="http://localhost:8888"&gt;http://localhost:8888&lt;/a&gt; to login, and then open &lt;a class="reference external" href="http://localhost:8888/blogView.html"&gt;http://localhost:8888/blogView.html&lt;/a&gt; :&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/security/WebSecurity17.png" /&gt;
&lt;/div&gt;
&lt;p&gt;Now we get the cookie, and we can use it to do anything.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="how-to-fix"&gt;
&lt;h2&gt;3. &lt;a class="toc-backref" href="#id4"&gt;How to fix&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Actually, there are many ways to fix this problem:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Cookie httpOnly&lt;/li&gt;
&lt;li&gt;User Content Filter&lt;/li&gt;
&lt;li&gt;Content Security Policy&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We will use Content Security Policy to solve this problem. So let's do a little modification to our safe site &lt;code&gt;indexSafe.js&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;helmet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contentSecurityPolicy&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="nx"&gt;directives&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;defaultSrc&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;#39;self&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and run again:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;node indexSafe.js
node indexHack.js
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/security/WebSecurity18.png" /&gt;
&lt;/div&gt;
&lt;p&gt;We can see from the console that the resources from 8889 are refused to load.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="reference"&gt;
&lt;h2&gt;4. &lt;a class="toc-backref" href="#id5"&gt;Reference&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy"&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="Security"></category><category term="Web"></category><category term="CSP"></category><category term="Web Security"></category></entry><entry><title>Web Security 05 - X-Frame-Options</title><link href="https://brianshen1990.github.io/Web_Security_05_X_Frame_Options.html" rel="alternate"></link><published>2019-02-20T00:00:00+08:00</published><updated>2019-02-20T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:brianshen1990.github.io,2019-02-20:/Web_Security_05_X_Frame_Options.html</id><summary type="html">&lt;p class="first last"&gt;Web Security 05 - X-Frame-Options&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;span id="id1"&gt;&lt;/span&gt;&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#what-is-x-frame-options" id="id2"&gt;What is X-Frame-Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#how-to-fix" id="id3"&gt;How to fix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#sample-clickjacking" id="id4"&gt;Sample clickjacking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#reference" id="id5"&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;All the sample code is in &lt;a class="reference external" href="https://github.com/brianshen1990/WebSecurity"&gt;https://github.com/brianshen1990/WebSecurity&lt;/a&gt; .&lt;/p&gt;
&lt;div class="section" id="what-is-x-frame-options"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id2"&gt;What is X-Frame-Options&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The X-Frame-Options HTTP response header can be used to indicate whether or not a browser should be allowed to render a page in a &lt;code&gt;&amp;lt;frame&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;embed&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt; . Sites can use this to avoid clickjacking attacks, by ensuring that their content is not embedded into other sites.&lt;/p&gt;
&lt;p&gt;There are mainly three types of options:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;X-Frame-Options: deny
X-Frame-Options: sameorigin
X-Frame-Options: allow-from https://example.com/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So what will happen is I don't set any value?&lt;/p&gt;
&lt;p&gt;Let's have a test:&lt;/p&gt;
&lt;p&gt;Modify the &lt;code&gt;staticHack/index.html&lt;/code&gt; to add a iframe load our blog site:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h5&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Hack&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h5&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;http://localhost:8888/api/transferPoints?dstUser=user02&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Click and you can get some discount in Amazon!&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;hr&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;iframe&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://localhost:8888&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;iframe&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now start:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;node index.js
node indexHack.js
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/security/WebSecurity11.png" /&gt;
&lt;/div&gt;
&lt;p&gt;Wow, our 8889 site can load 8888 site's content. That's not what we are expecting.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="how-to-fix"&gt;
&lt;h2&gt;2. &lt;a class="toc-backref" href="#id3"&gt;How to fix&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Quite easy, all we need to do is to set the options to &lt;code&gt;deny&lt;/code&gt; so that our blog site won't be embed in any other site.&lt;/p&gt;
&lt;p&gt;In &lt;code&gt;indexSafe.js&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;disable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;x-powered-by&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;helmet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;frameguard&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;deny&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;}));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now start again:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;node indexSafe.js
node indexHack.js
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/security/WebSecurity12.png" /&gt;
&lt;/div&gt;
&lt;p&gt;We can see that our blog system won't be loaded in another site anymore.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sample-clickjacking"&gt;
&lt;h2&gt;3. &lt;a class="toc-backref" href="#id4"&gt;Sample clickjacking&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Let's talk something more about clickjacking.&lt;/p&gt;
&lt;p&gt;Let's add another static page &lt;code&gt;staticFile/hijack.html&lt;/code&gt; in our blog system.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;hiJack&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
      &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Secrets 12345678 from 8888 blog system&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;logon&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;button&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;onclick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hiJack()&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Secret From 8888&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And in the hack site, we also add an static page &lt;code&gt;staticHack/hijack.html&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;iframe&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://localhost:8888/hijack.html&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;iframe&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And run sample:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;node index.js
node indexHack.js
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/security/WebSecurity13.png" /&gt;
&lt;/div&gt;
&lt;p&gt;OK, if we are a user from blog system, then we know this will popup our secret, so we won't click the button at all.&lt;/p&gt;
&lt;p&gt;But if we hide the iframe and put something interesting content above it to attract user to click the exactly position, then, we can luckily popup the secret.&lt;/p&gt;
&lt;p&gt;So let's have a small change to our hack static page &lt;code&gt;staticHack/hijack.html&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;image&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;width: 180px; height: 60px; position: absolute;&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;./hijack.png&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;image&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;iframe&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://localhost:8888/hijack.html&amp;quot;&lt;/span&gt;
      &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;width: 300px; height: 150px; border: 0; border: none; position: absolute; opacity: 0.1;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;iframe&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The picture we use:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/security/WebSecurity14.png" /&gt;
&lt;/div&gt;
&lt;p&gt;Now run the demo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;node index.js
node indexHack.js
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and the results:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/security/WebSecurity15.png" /&gt;
&lt;/div&gt;
&lt;p&gt;As we can see, when we want to click &lt;code&gt;Movies&lt;/code&gt; button faked by a picture, we actually click the iframe's button from 8888.&lt;/p&gt;
&lt;p&gt;And the event in 8888 is triggered.&lt;/p&gt;
&lt;p&gt;Actually, in reality, we would set &lt;code&gt;opacity&lt;/code&gt; to 0 so that the iframe won't display at all.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="reference"&gt;
&lt;h2&gt;4. &lt;a class="toc-backref" href="#id5"&gt;Reference&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options"&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="Security"></category><category term="Web"></category><category term="X-Frame-Options"></category><category term="Web Security"></category></entry><entry><title>Web Security 03 - X Powered By / Server</title><link href="https://brianshen1990.github.io/Web_Security_03_X_Powered_By.html" rel="alternate"></link><published>2019-02-14T00:00:00+08:00</published><updated>2019-02-14T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:brianshen1990.github.io,2019-02-14:/Web_Security_03_X_Powered_By.html</id><summary type="html">&lt;p class="first last"&gt;Web Security 03 - X Powered By&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;span id="web-security-03-x-powered-by"&gt;&lt;/span&gt;&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#what-is-x-powered-by-server" id="id1"&gt;What is X-Powered-By / Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#how-to-fix" id="id2"&gt;How to fix&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;All the sample code is in &lt;a class="reference external" href="https://github.com/brianshen1990/WebSecurity"&gt;https://github.com/brianshen1990/WebSecurity&lt;/a&gt; .&lt;/p&gt;
&lt;div class="section" id="what-is-x-powered-by-server"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id1"&gt;What is X-Powered-By / Server&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Many of us may not notice this http header until we use a security scan tool to scan our website. And we notice that those tools often suggest us to remove this kind of header, for 2 reasons:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Make http header more slight&lt;/li&gt;
&lt;li&gt;Avoid potential vulnerability.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So let's have a look at this header.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;node index.js
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/security/WebSecurity07.png" /&gt;
&lt;/div&gt;
&lt;p&gt;This header suggests that our backend is supported by Express.&lt;/p&gt;
&lt;p&gt;Other sample:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/security/WebSecurity08.png" /&gt;
&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/security/WebSecurity09.png" /&gt;
&lt;/div&gt;
&lt;p&gt;Those can leak the backend server information. As we know, for Apache, IIS, there are some special security bugs. If a hacker knows which server a website is using and potential bugs of this kind of server, some attacks may be taken.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="how-to-fix"&gt;
&lt;h2&gt;2. &lt;a class="toc-backref" href="#id2"&gt;How to fix&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;How can we remove this kind of http header then?&lt;/p&gt;
&lt;p&gt;Different backends have different configurations. Here we only cover our sample: Express.&lt;/p&gt;
&lt;p&gt;In Express, we also use Helmet.&lt;/p&gt;
&lt;p&gt;In &lt;code&gt;indexSafe.js&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bodyParser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;urlencoded&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="nx"&gt;extended&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="p"&gt;}));&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bodyParser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;helmet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;referrerPolicy&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;policy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;same-origin&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;}));&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;disable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;x-powered-by&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now start again:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;node indexSafe.js
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/security/WebSecurity10.png" /&gt;
&lt;/div&gt;
&lt;p&gt;There will be no server information any more.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Security"></category><category term="Web"></category><category term="XPoweredBy"></category><category term="Web Security"></category></entry><entry><title>Web Security 02 - Referrer</title><link href="https://brianshen1990.github.io/Web_Security_02_Referrer.html" rel="alternate"></link><published>2019-02-13T00:00:00+08:00</published><updated>2019-02-13T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:brianshen1990.github.io,2019-02-13:/Web_Security_02_Referrer.html</id><summary type="html">&lt;p class="first last"&gt;Web Security 02 - Referrer&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;span id="web-security-02-referrer-rst"&gt;&lt;/span&gt;&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#definition-of-referrer" id="id2"&gt;Definition of Referrer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#security-check-referrer" id="id3"&gt;Security - Check Referrer&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#sample" id="id4"&gt;Sample&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#how-to-fix" id="id5"&gt;How to fix&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#security-referrer-policy" id="id6"&gt;Security - Referrer Policy&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id1" id="id7"&gt;Sample&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#how-to-fix-it" id="id8"&gt;How to fix it&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;All the sample code is in &lt;a class="reference external" href="https://github.com/brianshen1990/WebSecurity"&gt;https://github.com/brianshen1990/WebSecurity&lt;/a&gt; .&lt;/p&gt;
&lt;div class="section" id="definition-of-referrer"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id2"&gt;Definition of Referrer&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Referrer request header contains the address of the previous web page from which a link to the currently requested page was followed. The Referrer header allows servers to identify where people are visiting them from and may use that data for analytics, logging, or optimized caching, for example.&lt;/p&gt;
&lt;p&gt;A Referrer header is not sent by browsers if:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The referring resource is a local &amp;quot;file&amp;quot; or &amp;quot;data&amp;quot; URI.&lt;/li&gt;
&lt;li&gt;An unsecured HTTP request is used and the referring page was received with a secure protocol (HTTPS).&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer"&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer&lt;/a&gt;
&lt;a class="reference external" href="https://developer.mozilla.org/en-US/docs/Web/Security/Referer_header:_privacy_and_security_concerns"&gt;https://developer.mozilla.org/en-US/docs/Web/Security/Referer_header:_privacy_and_security_concerns&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="security-check-referrer"&gt;
&lt;h2&gt;2. &lt;a class="toc-backref" href="#id3"&gt;Security - Check Referrer&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If we do not check Referrer, API can be called from anyplace, which may cause security problems.&lt;/p&gt;
&lt;div class="section" id="sample"&gt;
&lt;h3&gt;2.1. &lt;a class="toc-backref" href="#id4"&gt;Sample&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Let's use the Website in the prepare session, and then, we will fake another website, which contains a malicious link to attract user to click. This malicious link is the transfer points link.&lt;/p&gt;
&lt;p&gt;Backend code:&lt;cite&gt;indexHack.js&lt;/cite&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;express&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;session&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;express-session&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kr"&gt;static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;staticHack&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8889&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Example app listening on port 8889!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;HTML &lt;code&gt;staticHack/index.html&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;jquery-3.3.1.min.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;test.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h5&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Hack&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h5&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;http://localhost:8888/api/transferPoints?dstUser=user02&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Click and you can get some discount in Amazon!&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now start the two websites:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;node index.js
node indexHack.js
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is the Malicious website:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/security/WebSecurity03.png" /&gt;
&lt;/div&gt;
&lt;p&gt;When we click the URL, the authentication will fail. A message like this will appear &lt;code&gt;{&amp;quot;messgae&amp;quot;:&amp;quot;auth broken!&amp;quot;}&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;This is because we haven't login yet. But what if we've opened our Blog System and already login?&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/security/WebSecurity04.png" /&gt;
&lt;/div&gt;
&lt;p&gt;Now, we jump to the malicious website, and click the link, successful message will appear &lt;code&gt;{&amp;quot;message&amp;quot;:&amp;quot;success!&amp;quot;}&lt;/code&gt; . and user01 will transfer his points to user02, unconsciously.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="how-to-fix"&gt;
&lt;h3&gt;2.2. &lt;a class="toc-backref" href="#id5"&gt;How to fix&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As we can see, this is totally something we are not expecting: how can a user from another site, calls API in this site?&lt;/p&gt;
&lt;p&gt;This is something what Referrer does: APIs should be only called from the same site. Calls from other sites should be rejected.&lt;/p&gt;
&lt;p&gt;Now, let's add some Referrer check functions (in &lt;code&gt;indexSafe.js&lt;/code&gt; , same content with security implementation):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;REFERES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;http://localhost:8888&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;refererCheck&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;refer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;referer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;refer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;refer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;messgae&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;referer check failure!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;found&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;REFERES&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;refer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;found&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;found&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;messgae&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;referer check failure!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/api/addUser&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;refererCheck&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/api/login&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;refererCheck&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/api/getPoints&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;refererCheck&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/api/transferPoints&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;refererCheck&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When we start this website again,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;node indexSafe.js
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A Referrer check failure message will appear: &lt;code&gt;{&amp;quot;messgae&amp;quot;:&amp;quot;referer check failure!&amp;quot;}&lt;/code&gt; .&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="security-referrer-policy"&gt;
&lt;h2&gt;3. &lt;a class="toc-backref" href="#id6"&gt;Security - Referrer Policy&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;While Referrer check is very important, some users don't want to expose their Referrer at all.&lt;/p&gt;
&lt;p&gt;For example, if we are surfing &lt;code&gt;http://localhost:8888/&lt;/code&gt; , then, we type &lt;code&gt;http://localhost:8889/&lt;/code&gt; in the browser address column, it will go to 8889 website. But, we don't want 8889 to know where do I come from. I want to hide my Referrer when I go to another website.&lt;/p&gt;
&lt;p&gt;That is the Referrer Policy.&lt;/p&gt;
&lt;p&gt;There are many types of Referrer policy (&lt;a class="reference external" href="https://www.w3.org/TR/referrer-policy/#referrer-policies"&gt;https://www.w3.org/TR/referrer-policy/#referrer-policies&lt;/a&gt;).&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&amp;quot;no-referrer&amp;quot;:
no referrer information is to be sent along with requests made from a particular request client to any origin. The header will be omitted entirely.&lt;/li&gt;
&lt;li&gt;&amp;quot;no-referrer-when-downgrade&amp;quot; :
The &amp;quot;no-referrer-when-downgrade&amp;quot; policy sends a full URL along with requests from a TLS-protected environment settings object to a potentially trustworthy URL, and requests from clients which are not TLS-protected to any origin.&lt;/li&gt;
&lt;li&gt;&amp;quot;same-origin&amp;quot; :
a full URL, stripped for use as a referrer, is sent as referrer information when making same-origin requests from a particular client.&lt;/li&gt;
&lt;li&gt;&amp;quot;origin&amp;quot; :
only the ASCII serialization of the origin of the request client is sent as referrer information when making both same-origin requests and cross-origin requests from a particular client.&lt;/li&gt;
&lt;li&gt;&amp;quot;strict-origin&amp;quot; :
The &amp;quot;strict-origin&amp;quot; policy sends the ASCII serialization of the origin of the request client when making requests:&lt;ul&gt;
&lt;li&gt;from a TLS-protected environment settings object to a potentially trustworthy URL, and&lt;/li&gt;
&lt;li&gt;from non-TLS-protected environment settings objects to any origin.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;quot;origin-when-cross-origin&amp;quot; :
a full URL, stripped for use as a referrer, is sent as referrer information when making same-origin requests from a particular request client, and only the ASCII serialization of the origin of the request client is sent as referrer information when making cross-origin requests from a particular client.&lt;/li&gt;
&lt;li&gt;&amp;quot;strict-origin-when-cross-origin&amp;quot; :
a full URL, stripped for use as a referrer, is sent as referrer information when making same-origin requests from a particular request client, and only the ASCII serialization of the origin of the request client when making cross-origin requests:&lt;ul&gt;
&lt;li&gt;from a TLS-protected environment settings object to a potentially trustworthy URL, and&lt;/li&gt;
&lt;li&gt;from non-TLS-protected environment settings objects to any origin.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;quot;unsafe-url&amp;quot; :
a full URL, stripped for use as a referrer, is sent along with both cross-origin requests and same-origin requests made from a particular client.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So many definitions, but mainly we will use &lt;code&gt;same-origin&lt;/code&gt; .&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;3.1. &lt;a class="toc-backref" href="#id7"&gt;Sample&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Let's make a little change to our code. Add a link in html page &lt;code&gt;staticFile/index.html&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;http://localhost:8889&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Go To 8889&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Start our application:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;node index.js
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When we click the link, it will get 8889's index.html with referrer 8888:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/security/WebSecurity05.png" /&gt;
&lt;/div&gt;
&lt;p&gt;Sometimes, it can leak our information.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="how-to-fix-it"&gt;
&lt;h3&gt;3.2. &lt;a class="toc-backref" href="#id8"&gt;How to fix it&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Let's add some referrer policy:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;helmet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;helmet&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
...
app.use&lt;span class="o"&gt;(&lt;/span&gt;helmet.referrerPolicy&lt;span class="o"&gt;({&lt;/span&gt; policy: &lt;span class="s1"&gt;&amp;#39;same-origin&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;}))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, let check our websites again:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;node indexSafe.js
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/security/WebSecurity06.png" /&gt;
&lt;/div&gt;
&lt;p&gt;There will be no referrer at all.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="Security"></category><category term="Web"></category><category term="Referrer"></category><category term="Web Security"></category></entry><entry><title>Node Event Loop From The Inside Out</title><link href="https://brianshen1990.github.io/Node_Event_Loop_From_The_Inside_Out.html" rel="alternate"></link><published>2019-02-12T00:00:00+08:00</published><updated>2019-02-12T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:brianshen1990.github.io,2019-02-12:/Node_Event_Loop_From_The_Inside_Out.html</id><summary type="html">&lt;p class="first last"&gt;Node Event Loop From The Inside Out&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;span id="node-event-loop-from-the-inside-out-rst"&gt;&lt;/span&gt;&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#linux-unix-programer" id="id4"&gt;Linux/Unix Programer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#what-is-node-event-loop" id="id5"&gt;What is Node Event Loop?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#when-does-node-exit" id="id6"&gt;When does Node exit?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#can-everything-be-async" id="id7"&gt;can everything be async?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#details" id="id8"&gt;Details&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#important-notes-about-the-uv-thread-pool" id="id9"&gt;Important notes about the UV thread pool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#linux-unix" id="id10"&gt;Linux/Unix 程序员问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#node" id="id11"&gt;什么是 Node 事件循环&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id1" id="id12"&gt;Node什么时候退出？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id13"&gt;所有事件都可以异步么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id3" id="id14"&gt;详情&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#uv" id="id15"&gt;关于 UV 进程池的重要信息&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="linux-unix-programer"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id4"&gt;Linux/Unix Programer&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Scale Problem&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;accept&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
  &lt;span class="n"&gt;pthread_create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Old system can only handle about hundreds threads. So it doesn't scale out.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Scale solution: epoll - setup&lt;/p&gt;
&lt;p&gt;epoll -&amp;gt; Linux
KQ -&amp;gt; Mac&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="c1"&gt;// like before&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;evetfd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;epoll_create1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;epoll_event&lt;/span&gt; &lt;span class="n"&gt;ev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;EPOLLIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;epoll_ctl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;epollfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;EPOLL_CTL_ADD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ev&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;epoll_event&lt;/span&gt; &lt;span class="n"&gt;events&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;epoll_wait&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;eventfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;events&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Server socket has connection!&lt;/span&gt;
      &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;accept&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;ev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;events&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;EPOLLIN&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="n"&gt;ev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="n"&gt;epoll_ctl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;EPOLL_CTL_ADD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ev&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// connection socket has data&lt;/span&gt;
      &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
      &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="what-is-node-event-loop"&gt;
&lt;h2&gt;2. &lt;a class="toc-backref" href="#id5"&gt;What is Node Event Loop?&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A semi-infinite loop, polling and blocking on the O/S until in a set of file descriptors are ready.&lt;/p&gt;
&lt;p&gt;Something interesting happened, and node will pass it to JavaScript.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;event&lt;/li&gt;
&lt;li&gt;callback&lt;/li&gt;
&lt;li&gt;fs thing&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="when-does-node-exit"&gt;
&lt;h2&gt;3. &lt;a class="toc-backref" href="#id6"&gt;When does Node exit?&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It exits when it no longer had any events to wait for, at which points the loop must complete.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="can-everything-be-async"&gt;
&lt;h2&gt;4. &lt;a class="toc-backref" href="#id7"&gt;can everything be async?&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Can we poll for all system activity Node.js wants to be notified of? In other words, can everything be async?&lt;/p&gt;
&lt;p&gt;Yes and no? There are basically three cases of things:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Pollable file descriptors: can be directly waited on&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
sockets (net/dgram/http/tls/https/child_process pipes/stdin,out,err)
classic, well supported&lt;/blockquote&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;Time: next timeout can be directly wait on&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;(timeouts and intervals)
poll(..., int timeout)
kqueue(..., struct timespec * timeout)
epoll_wait(..., int timeout, ...)&lt;/p&gt;
&lt;p&gt;timeout resolution is milliseconds, timespec is nanoseconds, but both are rounded up to system clock granularity.&lt;/p&gt;
&lt;p&gt;Only one timeout at a time can be waited on, but Node.js keeps all timeout sorted, and sets the timeout value to the next one.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;Everything else: must happen off loop, and signal back to the loop when done.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="details"&gt;
&lt;h2&gt;5. &lt;a class="toc-backref" href="#id8"&gt;Details&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Not pollable: file system&lt;/p&gt;
&lt;p&gt;Everything in fs.* uses uv thread poll (unless they are sync).
The blocking call is made by a thread, and when it completes, readiness is signaled back to the event loop using either an eventfd or a self pipe.&lt;/p&gt;
&lt;div class="tip"&gt;
&lt;p class="first admonition-title"&gt;Tip&lt;/p&gt;
&lt;p class="last"&gt;self-pipe:
A pipe, where one end is written to by a thread or a signal handler, and the other end is polled in the loop. Traditional way to &amp;quot;wake up&amp;quot; a polling loop when the event to wait for is not directly representable as a file descriptor.&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Sometimes pollable: dns&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;code&gt;dns.lookup()&lt;/code&gt; calls &lt;code&gt;getaddrinfo()&lt;/code&gt; , a function in the system resolver library that makes blocking socket calls and cannot be integrated into a polling loop. Like fs.*, it's called in the thread pool.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dns.&amp;lt;everything else&amp;gt;&lt;/code&gt; calls functions in c-ares, a non-blocking DNS resolver, and integrates with the loop, not the thread poll.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Docs bend over backwards to explain how these two differ, but now that you know that blocking library calls must be shunted off to the thread pool, whereas DNS queries use TCP/UDP and can integrate into the event loop, the distinction should be clear.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Pollable: signals&lt;/p&gt;
&lt;p&gt;The ultimate async... uses the self-pipe pattern to write the signal number to the loop.&lt;/p&gt;
&lt;p&gt;Note that listening for signals doesn't &amp;quot;ref&amp;quot; the event loop, which is consistent with signal usage as &amp;quot;probably won't happen&amp;quot; IPC mechanism.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Pollable: child processes&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Unix signals child process termination with SIGCHILD.&lt;/li&gt;
&lt;li&gt;Pipes between the parent and child are pollable.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Sometimes pollable: C++ addons&lt;/p&gt;
&lt;p&gt;Addons should use the UV thread pool or integrate with the loop, but can do anything, including making loop-blocking system calls (perhaps unintentionally).&lt;/p&gt;
&lt;p&gt;Hints:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Review addon code&lt;/li&gt;
&lt;li&gt;Track loop metrics&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="important-notes-about-the-uv-thread-pool"&gt;
&lt;h2&gt;6. &lt;a class="toc-backref" href="#id9"&gt;Important notes about the UV thread pool&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It is shared by:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;fs&lt;/li&gt;
&lt;li&gt;dns (only dns.lookup(), rest is fine)&lt;/li&gt;
&lt;li&gt;crypto (only crypto.randomBytes() and crypto.pbkdf2())&lt;/li&gt;
&lt;li&gt;http,get/request() (if called with a name, dns.lookup() is used)&lt;/li&gt;
&lt;li&gt;any C++ addons that use it&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Default number of threads is 4, significantly parallel users of the above should increase the size.&lt;/p&gt;
&lt;p&gt;Hints:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Resolve DNS names yourself, using the direct APIs to avoid dns.lookup(), and stay out of the thread pool&lt;/li&gt;
&lt;li&gt;Increase the thread pool size with UV_THREADPOOL_SIZE&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You should now be able to describe:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What is the event loop&lt;/li&gt;
&lt;li&gt;When is node multi-threaded&lt;/li&gt;
&lt;li&gt;Why it &amp;quot;scales well&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="linux-unix"&gt;
&lt;h2&gt;7. &lt;a class="toc-backref" href="#id10"&gt;Linux/Unix 程序员问题&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;扩展问题&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;accept&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
  &lt;span class="n"&gt;pthread_create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;像这样为每一个连接创建一个进程，非常的耗费系统资源。老旧的系统只能处理几百个进程，所以这样的设计思想是不能扩展的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;扩展问题解决方案 epoll&lt;/p&gt;
&lt;p&gt;epoll -&amp;gt; Linux
KQ -&amp;gt; Mac&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="c1"&gt;// like before&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;evetfd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;epoll_create1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;epoll_event&lt;/span&gt; &lt;span class="n"&gt;ev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;EPOLLIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;epoll_ctl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;epollfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;EPOLL_CTL_ADD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ev&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;epoll_event&lt;/span&gt; &lt;span class="n"&gt;events&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;epoll_wait&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;eventfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;events&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Server socket has connection!&lt;/span&gt;
      &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;accept&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;ev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;events&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;EPOLLIN&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="n"&gt;ev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="n"&gt;epoll_ctl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;EPOLL_CTL_ADD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ev&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// connection socket has data&lt;/span&gt;
      &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
      &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="node"&gt;
&lt;h2&gt;8. &lt;a class="toc-backref" href="#id11"&gt;什么是 Node 事件循环&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;一个近似无限的循环，轮询并且阻塞系统，直到一系列的文件句柄准备完成。&lt;/p&gt;
&lt;p&gt;当一些Node感兴趣的事件发生时，Node会将这些事件转发给 JavaScript。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;事件&lt;/li&gt;
&lt;li&gt;回调&lt;/li&gt;
&lt;li&gt;文件操作相关&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;9. &lt;a class="toc-backref" href="#id12"&gt;Node什么时候退出？&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;当不在有等待的事件时，循环就完成了，不再继续执行。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;10. &lt;a class="toc-backref" href="#id13"&gt;所有事件都可以异步么？&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;我们能够轮询所有Node想知道的系统活动么？所有的事件都可以是异步的么？&lt;/p&gt;
&lt;p&gt;有的可以，有的不可以。基本来说，有 3 中事件：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;可轮询的文件句柄：能够被直接等待&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
sockets (net/dgram/http/tls/https/child_process pipes/stdin,out,err)
经典的，支持的很好&lt;/blockquote&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;定时器：下一个超时时间能够被直接等待&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;(timeouts and intervals)
poll(..., int timeout)
kqueue(..., struct timespec * timeout)
epoll_wait(..., int timeout, ...)&lt;/p&gt;
&lt;p&gt;timeout的精度是 毫秒， timespec 是纳秒。 但是两者都会按照系统时钟刻度去近似。&lt;/p&gt;
&lt;p&gt;只能等待一个超时，所以 Node.js 会将所有的超时排序，并且每次都等待最近的一个。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;其他： 一定要在循环外部发生，并且完成时发送信号给循环。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;11. &lt;a class="toc-backref" href="#id14"&gt;详情&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;不可轮询： 文件系统&lt;/p&gt;
&lt;p&gt;所有的 fs.* 相关的，都会使用 uv 进程池（除非调用是同步的）。
这些阻塞调用是由单独一个进程调用的，当动作完成时，可读信号会被发送给循环，通过 eventfd 或者 self pipe。&lt;/p&gt;
&lt;div class="tip"&gt;
&lt;p class="first admonition-title"&gt;Tip&lt;/p&gt;
&lt;p class="last"&gt;self pipe :
一种管道，一端是由一个进程 或者 信号处理写入，另一端是循环读取。
如果等待的事件不能被直接的表示为一个文件句柄，传统的方式是叫醒事件循环。&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;有时可轮询 : dns&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;code&gt;dns.lookup()&lt;/code&gt; 会调用 &lt;code&gt;getaddrinfo()&lt;/code&gt; , 这个函数会调用阻塞的套接字，素以不能够被集成到循环中。像 fs.* 一样，他是在进程池中被调用的。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dns.&amp;lt;everything else&amp;gt;&lt;/code&gt; 调用是非阻塞的，可以集成进循环，不是在进程池中执行的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这两者是有区别的，但是你现在可以知道，阻塞的库调用必须在进程池中调用，而DNS 查找等可以被集成到事件循环中。一定要清楚这些区别。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;可轮询: 信号&lt;/p&gt;
&lt;p&gt;最终的异步 使用 self pipe 向循环中写入信号量标号。&lt;/p&gt;
&lt;p&gt;请注意 监听信号 并不被推荐在事件循环中，因为他们有可能不会发生。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;可轮询 : 子进程&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Unix 子进程结束时会发出 SIGCHILD.&lt;/li&gt;
&lt;li&gt;父子管道直接是可以轮询的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;有时可轮询 :  C++ addons&lt;/p&gt;
&lt;p&gt;插件应该使用 UV 的进程池 或者 和 循环集成，但是实际上他是可以做任何事情的，包括调用 阻塞循环的系统调用。&lt;/p&gt;
&lt;p&gt;使用插件时要注意:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;审核插件代码&lt;/li&gt;
&lt;li&gt;追踪循环指标&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="uv"&gt;
&lt;h2&gt;12. &lt;a class="toc-backref" href="#id15"&gt;关于 UV 进程池的重要信息&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;他是被以下共享的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;fs&lt;/li&gt;
&lt;li&gt;dns (only dns.lookup(), rest is fine)&lt;/li&gt;
&lt;li&gt;crypto (only crypto.randomBytes() and crypto.pbkdf2())&lt;/li&gt;
&lt;li&gt;http,get/request() (if called with a name, dns.lookup() is used)&lt;/li&gt;
&lt;li&gt;any C++ addons that use it&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;默认情况下，进程数是 4， 大量使用以上功能的，需要扩大这个大小。&lt;/p&gt;
&lt;p&gt;一些技巧:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;自行解析 DNS名称，避免调用 dns.lookup()&lt;/li&gt;
&lt;li&gt;使用 UV_THREADPOOL_SIZE 扩大进程池大小&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;你现在应该能够知道：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;什么是事件循环&lt;/li&gt;
&lt;li&gt;什么时候 Node 是多进程的&lt;/li&gt;
&lt;li&gt;为什么，它能够很好的扩展&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Node"></category><category term="Event Loop"></category></entry><entry><title>Web Security 01 - Prepare</title><link href="https://brianshen1990.github.io/Web_Security_01_Prepare.html" rel="alternate"></link><published>2019-02-12T00:00:00+08:00</published><updated>2019-02-12T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:brianshen1990.github.io,2019-02-12:/Web_Security_01_Prepare.html</id><summary type="html">&lt;p class="first last"&gt;Web Security 01 - Prepare&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;span id="web-security-01-prepare-rst"&gt;&lt;/span&gt;&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#intro" id="id1"&gt;Intro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#assume-a-situation" id="id2"&gt;Assume a situation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;All the sample code is in &lt;a class="reference external" href="https://github.com/brianshen1990/WebSecurity"&gt;https://github.com/brianshen1990/WebSecurity&lt;/a&gt; .&lt;/p&gt;
&lt;div class="section" id="intro"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id1"&gt;Intro&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In this series, I will talk about the web security problems and how to prevent them.
Security is becoming more and more important, especially in a world where all users are surfing the internet, and a world any programmer can expose a service. It seems that many websites we visit, many services we use, are not that secure enough. But since we enjoy the free services, sometimes we think a little privacy and insecure is acceptable. A quite strange era.&lt;/p&gt;
&lt;p&gt;However, whether those services are safe or not, when we ourselves provide a service to our customer, free or charge, I think we should always try to protect a user's information, and try to guarantee a safe digital world to them. Maybe it will costs many time, but, it worths.&lt;/p&gt;
&lt;p&gt;All those problems are summarized from my experience. It will cover the following topics:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Referer&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Only for my reference, so if there is any problem, you can kindly point out.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="assume-a-situation"&gt;
&lt;h2&gt;2. &lt;a class="toc-backref" href="#id2"&gt;Assume a situation&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In order to provide some examples, I will assume that I provide some services to my customer.
Here is the situation, we will create a blog system, and there is a point sub system in it. Every registered user will have 200 points. And if he or she publishes blogs and makes comments, additional points will be rewarded.&lt;/p&gt;
&lt;p&gt;And those points can be transferred to other users.&lt;/p&gt;
&lt;p&gt;So let's use Express to hold such a website.&lt;/p&gt;
&lt;p&gt;Four services are provided:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;register&lt;/li&gt;
&lt;li&gt;login&lt;/li&gt;
&lt;li&gt;get points&lt;/li&gt;
&lt;li&gt;transfer points (through get method)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To make the example simple enough, we won't use any database here. All we need to do is to store user information in a JSON file.&lt;/p&gt;
&lt;p&gt;So this is our express backend, providing 4 APIs:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;code&gt;/api/addUser&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/api/login&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/api/getPoints&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/api/transferPoints&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Code detail:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;express&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;session&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;express-session&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bodyParser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;body-parser&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;fs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;crypto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;crypto&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;UserInfoFile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;./data/userInfo.json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;UserInfo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;UserInfoFile&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;saveUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;writeFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;UserInfoFile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;UserInfo&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="nx"&gt;secret&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;our apps little secret&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;resave&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;saveUninitialized&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;cookie&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;maxAge&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;60000&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}))&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bodyParser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;urlencoded&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="nx"&gt;extended&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="p"&gt;}));&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bodyParser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;


&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/api/addUser&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;passwd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;UserInfo&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;402&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;messgae&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;name exists!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;derivedKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;crypto&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createHash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;md5&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;passwd&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;digest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hex&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;UserInfo&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;passwd&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;derivedKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;
      &lt;span class="nx"&gt;saveUser&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;messgae&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;success!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;messgae&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Internal server error!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;402&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;messgae&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;body broken!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/api/login&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;passwd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;UserInfo&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;401&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;messgae&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;name or password error!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;derivedKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;crypto&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createHash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;md5&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;passwd&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;digest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hex&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;UserInfo&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;passwd&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;derivedKey&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;login&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;messgae&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;success!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;login&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;401&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;messgae&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;name or password error!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;402&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;messgae&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;body broken!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;auth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;UserInfo&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;401&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;messgae&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;user not exists!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;402&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;messgae&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;auth broken!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/api/getPoints&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;UserInfo&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/api/transferPoints&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;UserInfo&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dstUser&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;UserInfo&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;points&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;UserInfo&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;points&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;UserInfo&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dstUser&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;points&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;UserInfo&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dstUser&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;points&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;saveUser&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;success!&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Internal Server error!&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;401&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;messgae&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;user not exists!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/api/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Hello World!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kr"&gt;static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;staticFile&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8888&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Example app listening on port 8888!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And this is our UI code:&lt;/p&gt;
&lt;p&gt;HTML (Simplest jQuery):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;jquery-3.3.1.min.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;test.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;logon&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h5&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Logon&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h5&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;name&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;nbsp;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;passwd&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;nbsp;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;button&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;onclick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;logon()&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Logon&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;main&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h5&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Points&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h5&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;points&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;nbsp;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;button&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;onclick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;getPoints()&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;getpoints&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;dstUser&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;nbsp;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;button&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;onclick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;transfer()&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Transfer&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;JS:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;logon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;passwd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#passwd&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;POST&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;./api/login&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;passwd&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;passwd&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#logon&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;hide&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#main&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;show&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getPoints&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;GET&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;./api/getPoints&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#points&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;transfer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#dstUser&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;GET&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;./api/transferPoints?dstUser=&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;getPoints&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;ready&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#logon&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;show&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#main&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;hide&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And the results:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/security/WebSecurity01.png" /&gt;
&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/security/WebSecurity02.png" /&gt;
&lt;/div&gt;
&lt;p&gt;OK, our prepare work has been done!&lt;/p&gt;
&lt;/div&gt;
</content><category term="Security"></category><category term="Web"></category><category term="Web Security"></category></entry><entry><title>Easy profiling for Node.js Applications</title><link href="https://brianshen1990.github.io/easy_profiling_for_node_js_applications.html" rel="alternate"></link><published>2019-02-05T00:00:00+08:00</published><updated>2019-02-05T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:brianshen1990.github.io,2019-02-05:/easy_profiling_for_node_js_applications.html</id><summary type="html">&lt;p class="first last"&gt;Easy profiling for Node.js Applications&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;span id="easy-profiling-for-node-js-applications-rst"&gt;&lt;/span&gt;&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#intro" id="id1"&gt;Intro&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="intro"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id1"&gt;Intro&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Reference:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://nodejs.org/en/docs/guides/simple-profiling/"&gt;https://nodejs.org/en/docs/guides/simple-profiling/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;有很多的第三方工具可以来分析 Node.js 应用程序，但是，在许多情况下，最简单的选项是使用 Node.js 自带的分析器。自带的分析器使用V8 内部的分析器，在程序执行期间定时的采样程序状态。然后记录这些采样的结果以及诸如jit 编译，呈现为以下一系列的刻度。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;code-creation,LazyCompile,0,0x2d5000a337a0,396,&lt;span class="s2"&gt;&amp;quot;bp native array.js:1153:16&amp;quot;&lt;/span&gt;,0x289f644df68,~
code-creation,LazyCompile,0,0x2d5000a33940,716,&lt;span class="s2"&gt;&amp;quot;hasOwnProperty native v8natives.js:198:30&amp;quot;&lt;/span&gt;,0x289f64438d0,~
code-creation,LazyCompile,0,0x2d5000a33c20,284,&lt;span class="s2"&gt;&amp;quot;ToName native runtime.js:549:16&amp;quot;&lt;/span&gt;,0x289f643bb28,~
code-creation,Stub,2,0x2d5000a33d40,182,&lt;span class="s2"&gt;&amp;quot;DoubleToIStub&amp;quot;&lt;/span&gt;
code-creation,Stub,2,0x2d5000a33e00,507,&lt;span class="s2"&gt;&amp;quot;NumberToStringStub&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在过去，你需要V8的源代码才能够中断刻度，幸运的是，在 Node.js 4.4.0 中引入了新的工具，使得不需要 V8的原始代码， 就能获得这些消耗信息。我们看看 内置的 分析器 如何帮助提供 应用程序的性能概览。&lt;/p&gt;
&lt;p&gt;为了示例 刻度分析器，我们将会使用一个简单的 Express 应用程序。 我们的应用程序有两个处理函数，一个是为了添加用户到我们的系统：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/newUser&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/[!@#$%^&amp;amp;*]/g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;salt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;crypto&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;randomBytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;base64&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;crypto&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pbkdf2Sync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;salt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;512&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;sha512&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;salt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;另一个是验证用户授权尝试：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/auth&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/[!@#$%^&amp;amp;*]/g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;salt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;encryptHash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;crypto&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pbkdf2Sync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;salt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;512&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;sha512&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;crypto&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;timingSafeEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;encryptHash&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;401&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;请注意，这些只是为了纯粹的示例，并不推荐在正式的Node.js应用程序中使用。通常来说，你不应该尝试设计自己的加密验证机制，采用现有的 被证明安全的解决方案更为合适。&lt;/p&gt;
&lt;p&gt;现在 假设我们已经部署了应用，用户抱怨请求延迟太严重。我们可以很容易的使用内置分析器来运行这个程序：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;NODE_ENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;production node --prof app.js
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后使用 &lt;code&gt;ab&lt;/code&gt; (ApacheBench) 设置一些负载：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -X GET &lt;span class="s2"&gt;&amp;quot;http://localhost:8080/newUser?username=matt&amp;amp;password=password&amp;quot;&lt;/span&gt;
ab -k -c &lt;span class="m"&gt;20&lt;/span&gt; -n &lt;span class="m"&gt;250&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://localhost:8080/auth?username=matt&amp;amp;password=password&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ab 的输出如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Concurrency Level:      20
Time taken &lt;span class="k"&gt;for&lt;/span&gt; tests:   46.932 seconds
Complete requests:      250
Failed requests:        0
Keep-Alive requests:    250
Total transferred:      &lt;span class="m"&gt;50250&lt;/span&gt; bytes
HTML transferred:       &lt;span class="m"&gt;500&lt;/span&gt; bytes
Requests per second:    5.33 &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="c1"&gt;#/sec] (mean)&lt;/span&gt;
Time per request:       3754.556 &lt;span class="o"&gt;[&lt;/span&gt;ms&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;mean&lt;span class="o"&gt;)&lt;/span&gt;
Time per request:       187.728 &lt;span class="o"&gt;[&lt;/span&gt;ms&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;mean, across all concurrent requests&lt;span class="o"&gt;)&lt;/span&gt;
Transfer rate:          1.05 &lt;span class="o"&gt;[&lt;/span&gt;Kbytes/sec&lt;span class="o"&gt;]&lt;/span&gt; received

...

Percentage of the requests served within a certain &lt;span class="nb"&gt;time&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;ms&lt;span class="o"&gt;)&lt;/span&gt;
  50%   3755
  66%   3804
  75%   3818
  80%   3825
  90%   3845
  95%   3858
  98%   3874
  99%   3875
100%   &lt;span class="m"&gt;4225&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;longest request&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;从这个输出中，我们可以看到我们每秒只能处理 5 个请求，每个请求的处理大约是 4 秒。 在现实程序中，我们在接收到用户请求后会做很多的工作，但是在这个示例中，时间可能被花费在了编译 正则表达式，产生随机数盐 以及 为用户的密码生成唯一的hash， 或者是Express 这个框架本身。&lt;/p&gt;
&lt;p&gt;既然我们使用的 &lt;code&gt;--prof&lt;/code&gt; 选项来运行我们的脚本，一个刻度文件就会在程序运行的同目下产生。他会是这样的格式： &lt;code&gt;isolate-0xnnnnnnnnnnnn-v8.log&lt;/code&gt; （其中 &lt;code&gt;n&lt;/code&gt; 是数字）。&lt;/p&gt;
&lt;p&gt;为了让这个文件有意义，我们需要使用 刻度处理器 以及 Node.js 可执行程序的协同工作。为了运行这个处理器， 使用 &lt;code&gt;--prof-process&lt;/code&gt; 标志位。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;node --prof-process isolate-0xnnnnnnnnnnnn-v8.log &amp;gt; processed.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用你最喜欢的文本编辑器打开这个文件，你会看到许多不同类型的信息。这个文件会被拆分成很多小节，每一小节都代表了一中语言。 首先，我们看下总体概况小节：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;Summary&lt;span class="o"&gt;]&lt;/span&gt;:
  ticks  total  nonlib   name
    &lt;span class="m"&gt;79&lt;/span&gt;    0.2%    0.2%  JavaScript
  &lt;span class="m"&gt;36703&lt;/span&gt;   97.2%   99.2%  C++
      &lt;span class="m"&gt;7&lt;/span&gt;    0.0%    0.0%  GC
    &lt;span class="m"&gt;767&lt;/span&gt;    2.0%          Shared libraries
    &lt;span class="m"&gt;215&lt;/span&gt;    0.6%          Unaccounted
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这些信息向我们展示了 全部用例的 97%都集中在了 C++ 代码上，当我们查看其他小节时，我们就最应该留意 C++ 部分 （而不是 JavaScript ）。把这点牢记在心后，我们接下来找到 C++ 小节，包含了 C++ 程序使用 CPU 时间的信息：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;C++&lt;span class="o"&gt;]&lt;/span&gt;:
  ticks  total  nonlib   name
  &lt;span class="m"&gt;19557&lt;/span&gt;   51.8%   52.9%  node::crypto::PBKDF2&lt;span class="o"&gt;(&lt;/span&gt;v8::FunctionCallbackInfo&amp;lt;v8::Value&amp;gt; const&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="m"&gt;4510&lt;/span&gt;   11.9%   12.2%  _sha1_block_data_order
  &lt;span class="m"&gt;3165&lt;/span&gt;    8.4%    8.6%  _malloc_zone_malloc
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我们可以看到占用CPU 高达 72.1% 的前 3 的入口。 从这个输出中，我们立马看到至少 51.8 的CPU 时间都被用在执行函数 PBKDF2 上了，这个函数负责从用户的密码产生hash。当然，我们暂时不能立马的观察出 后两名的入口对我们的程序有什么样的影响（或者为了这个示例假装不关心）。为了更好的理解这些函数的关系，我们接下来要查看 [Bottom up (heavy) profile] 这一小节，他提供了每个函数主调用的基本信息。检查这个章节，我们可以发现：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ticks parent  name
&lt;span class="m"&gt;19557&lt;/span&gt;   51.8%  node::crypto::PBKDF2&lt;span class="o"&gt;(&lt;/span&gt;v8::FunctionCallbackInfo&amp;lt;v8::Value&amp;gt; const&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="m"&gt;19557&lt;/span&gt;  100.0%    v8::internal::Builtins::~Builtins&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="m"&gt;19557&lt;/span&gt;  100.0%      LazyCompile: ~pbkdf2 crypto.js:557:16

&lt;span class="m"&gt;4510&lt;/span&gt;   11.9%  _sha1_block_data_order
&lt;span class="m"&gt;4510&lt;/span&gt;  100.0%    LazyCompile: *pbkdf2 crypto.js:557:16
&lt;span class="m"&gt;4510&lt;/span&gt;  100.0%      LazyCompile: *exports.pbkdf2Sync crypto.js:552:30

&lt;span class="m"&gt;3165&lt;/span&gt;    8.4%  _malloc_zone_malloc
&lt;span class="m"&gt;3161&lt;/span&gt;   99.9%    LazyCompile: *pbkdf2 crypto.js:557:16
&lt;span class="m"&gt;3161&lt;/span&gt;  100.0%      LazyCompile: *exports.pbkdf2Sync crypto.js:552:30
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;解析这一小节要比原始的刻度计数需要更多工作。在每一个 “call stack” 上，父列的百分数告诉你这个函数占用了上面一行函数的百分比。比方说，在 sha1block_data_order 上方中间的中间 “call stack” ，占用了示例的11.9%的运行时间，我们在前面已经得到了这个数据。当然，这边我们可以看到在 Node.js 加密模块内部他总是会被 pbkdf2 函数调用。我们能看到相似的现象，_malloc_zone_malloc 被 同样的 pbkdf2 递归调用了。所以，从上面的信息可以看出来，我们能够看出来，从用户的密码到hash 的计算占用的绝对不止 51.8% ，因为 sha1block_data_order 和 _malloc_zone_malloc 也是由 pbkdf2 函数调用的。&lt;/p&gt;
&lt;p&gt;到这里，一切都清楚了，我们需要去优化 基于密码的hash生成器。 幸运的是，你知道异步编程的好处，并且意识到这边使用的是同步的生成方式，所以导致了事件循环的缓慢。这会阻止我们接受处理更多用用户请求。&lt;/p&gt;
&lt;p&gt;为了修复这个问题，你可以做一个很小的修改，只需要使用 异步版本的 pbkdf2 就可以：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/auth&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/[!@#$%^&amp;amp;*]/g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;crypto&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pbkdf2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;salt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;512&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;401&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;重新运行一遍 ab 测试上面的程序，结果如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Concurrency Level:      20
Time taken &lt;span class="k"&gt;for&lt;/span&gt; tests:   12.846 seconds
Complete requests:      250
Failed requests:        0
Keep-Alive requests:    250
Total transferred:      &lt;span class="m"&gt;50250&lt;/span&gt; bytes
HTML transferred:       &lt;span class="m"&gt;500&lt;/span&gt; bytes
Requests per second:    19.46 &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="c1"&gt;#/sec] (mean)&lt;/span&gt;
Time per request:       1027.689 &lt;span class="o"&gt;[&lt;/span&gt;ms&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;mean&lt;span class="o"&gt;)&lt;/span&gt;
Time per request:       51.384 &lt;span class="o"&gt;[&lt;/span&gt;ms&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;mean, across all concurrent requests&lt;span class="o"&gt;)&lt;/span&gt;
Transfer rate:          3.82 &lt;span class="o"&gt;[&lt;/span&gt;Kbytes/sec&lt;span class="o"&gt;]&lt;/span&gt; received

...

Percentage of the requests served within a certain &lt;span class="nb"&gt;time&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;ms&lt;span class="o"&gt;)&lt;/span&gt;
  50%   1018
  66%   1035
  75%   1041
  80%   1043
  90%   1049
  95%   1063
  98%   1070
  99%   1071
100%   &lt;span class="m"&gt;1079&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;longest request&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;耶！你的应用程序现在每秒能处理 20 个请求了，大概是之前使用同步方法的 4 倍。另外，平均延迟从 4 秒 降到了 1 秒。&lt;/p&gt;
&lt;p&gt;希望 从上面的性能分析示例中，你能够看到 V8 刻度处理器 能够如何帮助你更好的理解 Node.js 应用程序的效率。&lt;/p&gt;
&lt;/div&gt;
</content><category term="Node"></category></entry><entry><title>The Node.js Event Loop, Timers, and process.nextTick()</title><link href="https://brianshen1990.github.io/The_Node_js_Event_Loop.html" rel="alternate"></link><published>2019-02-03T00:00:00+08:00</published><updated>2019-02-03T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:brianshen1990.github.io,2019-02-03:/The_Node_js_Event_Loop.html</id><summary type="html">&lt;p class="first last"&gt;The Node.js Event Loop, Timers, and &lt;tt class="docutils literal"&gt;process.nextTick()&lt;/tt&gt;&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;span id="the-node-js-event-loop-rst"&gt;&lt;/span&gt;&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#intro" id="id13"&gt;Intro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id1" id="id14"&gt;什么是事件循环？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id15"&gt;事件循环解释&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id3" id="id16"&gt;阶段概览&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id4" id="id17"&gt;阶段详情&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id5" id="id18"&gt;定时器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id6" id="id19"&gt;等待的回调&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id7" id="id20"&gt;轮询&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id8" id="id21"&gt;检查&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id9" id="id22"&gt;关闭的回调&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#setimmediate-settimeout" id="id23"&gt;&lt;code&gt;setImmediate()&lt;/code&gt; 与 &lt;code&gt;setTimeout()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#process-nexttick" id="id24"&gt;&lt;code&gt;process.nextTick()&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id10" id="id25"&gt;理解 &lt;code&gt;process.nextTick()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id11" id="id26"&gt;为什么这样被允许？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#process-nexttick-setimmediate" id="id27"&gt;&lt;code&gt;process.nextTick()&lt;/code&gt; 与 &lt;code&gt;setImmediate()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id12" id="id28"&gt;为什么我们使用 &lt;code&gt;process.nextTick()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="intro"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id13"&gt;Intro&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Reference: &lt;a class="reference external" href="https://nodejs.org/en/docs/guides/event-loop-timers-and-nexttick/"&gt;https://nodejs.org/en/docs/guides/event-loop-timers-and-nexttick/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;2. &lt;a class="toc-backref" href="#id14"&gt;什么是事件循环？&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;事件循环能够让 Node.js 处理非阻塞的I/O操作 -- 虽然JavaScript 是单线程的 -- 在可能的时候将这些操作转交给系统内核去处理。&lt;/p&gt;
&lt;p&gt;因为大多数现代内核都是 多线程的，他们能在后台处理多项操作。当某一项操作完成时，内核会通知 Node.js，这样的话对应的回调就会被加入到 轮询队列中，最终会被执行。我们会在晚一些做一个详细的介绍。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;3. &lt;a class="toc-backref" href="#id15"&gt;事件循环解释&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;当Node.js 启动时，会初始化事件循环，处理输入的脚本（或者丢给 REPL ，在这个文档中我们不包含），这些脚本可能会会有一步的API 调用， 定时器 或者 调用 &lt;code&gt;process.nextTick()&lt;/code&gt; ，然后，开始处理事件循环。&lt;/p&gt;
&lt;p&gt;以下这张图 是 事件循环操作顺序的概览。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   ┌───────────────────────────┐
┌─&amp;gt;│           timers          │
│  └─────────────┬─────────────┘
│  ┌─────────────┴─────────────┐
│  │     pending callbacks     │
│  └─────────────┬─────────────┘
│  ┌─────────────┴─────────────┐
│  │       idle, prepare       │
│  └─────────────┬─────────────┘      ┌───────────────┐
│  ┌─────────────┴─────────────┐      │   incoming:   │
│  │           poll            │&amp;lt;─────┤  connections, │
│  └─────────────┬─────────────┘      │   data, etc.  │
│  ┌─────────────┴─────────────┐      └───────────────┘
│  │           check           │
│  └─────────────┬─────────────┘
│  ┌─────────────┴─────────────┐
└──┤      close callbacks      │
   └───────────────────────────┘
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意：每一个方框都会被定义成事件循环的一个阶段。&lt;/p&gt;
&lt;p&gt;每个阶段都会有一个先进先出 FIFO 的队列，包含了需要执行的回调。每一个阶段都有自己独特的行为，通常来说，当事件循环到达指定的阶段时，他们会去执行指定给这个阶段的特定操作，然后去执行这个阶段的回调队列，一直到这个队列为空或者达到回调数目限制。此时，事件循环将会进入到下一个阶段，如此。&lt;/p&gt;
&lt;p&gt;因为任何的操作都可能产生更多的操作 和 新的需要在轮询阶段由内核处理的事件，轮询事件能够在 轮询 阶段正在被处理的时候被加入轮询队列。最终的结果是，长期运行的回调能够使得轮询阶段运行的比定时器临界值 还要长。请查看 定时器 和 轮询 小节获得更多细节。&lt;/p&gt;
&lt;p&gt;注意： 在 Windows 和 Unix/Linux上，这个实现会有所不同，但是对这个演示并不重要。最重要的部分在这，实际上有7-8个步骤，但是我们需要关心的，Node.js 实际使用的，就是上面这些阶段。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;4. &lt;a class="toc-backref" href="#id16"&gt;阶段概览&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;定时器：这阶段执行 &lt;code&gt;setTimeout()&lt;/code&gt; 以及 &lt;code&gt;setInterval()&lt;/code&gt; 的定时任务&lt;/li&gt;
&lt;li&gt;等待的回调：执行 延迟到下一个循环的 I/O 回调&lt;/li&gt;
&lt;li&gt;空，准备：内部使用&lt;/li&gt;
&lt;li&gt;轮询：获取新的I/O事件；执行I/O相关的回调（包含除关闭回调、由定时器或者 &lt;code&gt;setImmediate()&lt;/code&gt; 产生的回调 以外的所有的回调）；合适的时候node会在这边被阻塞&lt;/li&gt;
&lt;li&gt;检查：&lt;code&gt;setImmediate()&lt;/code&gt; 产生的回调会在这边执行&lt;/li&gt;
&lt;li&gt;关闭的回调：一些关闭的回调会在这边执行，比方说 &lt;code&gt;socket.on('close', ...)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在每一轮事件循环中间，Node.js 会检查是否有异步的I/O 操作或者定时器操作， 如果没有的话，就会自动关闭。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;5. &lt;a class="toc-backref" href="#id17"&gt;阶段详情&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;5.1. &lt;a class="toc-backref" href="#id18"&gt;定时器&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;定时器规定了回调被执行的时间间隔的临界值，而不是准确的值。定时器回到会在一定时间过去之后执行，当然，操作系统调度 或者 其他的回调可能会使得他们被延迟。&lt;/p&gt;
&lt;p&gt;注意：技术上来说，轮询阶段控制着 什么时候定时器会被执行。&lt;/p&gt;
&lt;p&gt;举例来说，你安排了一个在100ms以后的定时器，之后你的脚本启动了并且异步的读取一个文件内容，消耗95ms。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;fs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;someAsyncOperation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Assume this takes 95ms to complete&lt;/span&gt;
  &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/path/to/file&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;timeoutScheduled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;delay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;timeoutScheduled&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;delay&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;ms have passed since I was scheduled`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;


&lt;span class="c1"&gt;// do someAsyncOperation which takes 95 ms to complete&lt;/span&gt;
&lt;span class="nx"&gt;someAsyncOperation&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;startCallback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="c1"&gt;// do something that will take 10ms...&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;startCallback&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// do nothing&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当事件循环进入到轮询 阶段后，有一个空队列（ &lt;code&gt;fs.readFile()&lt;/code&gt; 还没完成），所以会等待一段时间直到最近的定时器临界值到达。当它等待了95ms之后。&lt;code&gt;fs.readFile()&lt;/code&gt; 结束了读取数据，他的回调需要消耗10ms去完成，这个回调会被添加到 轮询队列并且被执行。完成后，没有更多在队列中的回调了，所以事件循环会去查看最近的定时器，并且重新循环到 定时器 阶段 去执行定时器回调。&lt;/p&gt;
&lt;p&gt;在这个例子中，你可以看到定时器被执行实际上是在 105ms。&lt;/p&gt;
&lt;p&gt;注意：为了阻止轮询阶段一直占用事件循环，&lt;code&gt;libuv&lt;/code&gt; 有一个硬编码的最大的值（系统相关），来限定轮询阶段获取更多的事件。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;5.2. &lt;a class="toc-backref" href="#id19"&gt;等待的回调&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个阶段会去执行一些系统操作相关的回调，比方说 TCP 错误。举例来说， 如果TCP socket 在尝试连接的时候接收到了 &lt;code&gt;ECONNREFUSED&lt;/code&gt; ，一些*nix 系统会等待汇报这个错误。他们会在等待的回调阶段 被执行&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;5.3. &lt;a class="toc-backref" href="#id20"&gt;轮询&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;轮询阶段主要有两个功能：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;计算他应该阻塞多长时间 并且 轮询 I/O， 然后&lt;/li&gt;
&lt;li&gt;处理在轮询队列中的事件。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当事件循环进入到 轮询阶段 并且没有定时器时，会发生两件事情：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;如果 轮询队列不为空，时间循环会一次执行回调队列中的回调 直到队列为空， 或者依赖系统的 硬编码的时间限制。&lt;/li&gt;
&lt;li&gt;如果队列为空，那么会有更多的两件事情发生：&lt;ul&gt;
&lt;li&gt;如果脚本设定了 &lt;code&gt;setImmediate()&lt;/code&gt; ，那么事件循环会结束 轮询阶段 并且进入到 检查阶段 去执行这些设定的脚本&lt;/li&gt;
&lt;li&gt;如果脚本没有安排 &lt;code&gt;setImmediate()&lt;/code&gt; ，事件循环会去等待回调被加入到队列中，然后立即去执行。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一旦轮询队列为空，事件循环就会去检查哪些定时器到达了临界值， 如果有一个或者多个定时器准备好了， 那么事件循环就循环回去执行 定时器阶段的回调。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h3&gt;5.4. &lt;a class="toc-backref" href="#id21"&gt;检查&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这一阶段允许我们在 轮询阶段 结束之后立马执行回调。如果 轮询阶段为空 并且脚本 设定了 &lt;code&gt;setImmediate()&lt;/code&gt; ，那么事件循环会继续执行检查阶段 而不是等待。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;setImmediate()&lt;/code&gt; 实际上是一种运行在事件循环 不同阶段的特殊定时器。它使用 libuv 的API 来设定在 轮询阶段完成后的回调。&lt;/p&gt;
&lt;p&gt;总体来说，当代码运行后，事件循环最终会到达 轮询阶段，这个阶段回去等待接入的连接、请求等等。当然，如果使用 ·&lt;code&gt;setImmediate()&lt;/code&gt;  安排了一个回调，并且 轮询阶段为空，那么 轮询阶段就会结束并且进入到检查阶段，而不是在轮询阶段等待。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h3&gt;5.5. &lt;a class="toc-backref" href="#id22"&gt;关闭的回调&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;如果一个socket 或者处理函数 被强制关闭 （比方说 &lt;code&gt;socket.destroy()&lt;/code&gt; ）, &lt;code&gt;'close'&lt;/code&gt; 事件会在这个阶段被触发。否则的话他们会在 &lt;code&gt;process.nextTick()&lt;/code&gt; 阶段触发。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="setimmediate-settimeout"&gt;
&lt;h2&gt;6. &lt;a class="toc-backref" href="#id23"&gt;&lt;code&gt;setImmediate()&lt;/code&gt; 与 &lt;code&gt;setTimeout()&lt;/code&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;setImmediate()&lt;/code&gt; 以及 &lt;code&gt;setTimeout()&lt;/code&gt; 很像，但却会根据他们何时被调用 有不同的行为。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;code&gt;setImmediate()&lt;/code&gt; 是为了在 轮询阶段结束运行的脚本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setTimeout()&lt;/code&gt; 是为了在一个设定的最小临界值后运行的脚本&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;哪一个定时器会被执行 会与他们的上下文环境相关。如果两个函数在同一个 模块中被调用，那么定时器会依赖于这个进程的性能（会被这台机器上其他的程序影响）。&lt;/p&gt;
&lt;p&gt;举例来说，如果我们在非 I/O 循环中（比方说 主模块）运行下面的脚本，哪一个定时器会被先执行是无法确定的，因为与进程的性能相关。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// timeout_vs_immediate.js&lt;/span&gt;
&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;timeout&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;setImmediate&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;immediate&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="nx"&gt;timeout_vs_immediate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;
&lt;span class="nx"&gt;timeout&lt;/span&gt;
&lt;span class="nx"&gt;immediate&lt;/span&gt;

&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="nx"&gt;timeout_vs_immediate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;
&lt;span class="nx"&gt;immediate&lt;/span&gt;
&lt;span class="nx"&gt;timeout&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当然， 如果我们在I/O 循环中 去执行这两个函数，那么 &lt;code&gt;setImmediate()&lt;/code&gt; 总是会被优先执行。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// timeout_vs_immediate.js&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;fs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;timeout&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;setImmediate&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;immediate&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="nx"&gt;timeout_vs_immediate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;
&lt;span class="nx"&gt;immediate&lt;/span&gt;
&lt;span class="nx"&gt;timeout&lt;/span&gt;

&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="nx"&gt;timeout_vs_immediate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;
&lt;span class="nx"&gt;immediate&lt;/span&gt;
&lt;span class="nx"&gt;timeout&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;相比 &lt;code&gt;setTimeout()&lt;/code&gt; ， 使用 &lt;code&gt;setImmediate()&lt;/code&gt; 的最大好处是 &lt;code&gt;setImmediate()&lt;/code&gt; 在 I/O 循环中 总是会被优先执行，无论存在多少定时器。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="process-nexttick"&gt;
&lt;h2&gt;7. &lt;a class="toc-backref" href="#id24"&gt;&lt;code&gt;process.nextTick()&lt;/code&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id10"&gt;
&lt;h3&gt;7.1. &lt;a class="toc-backref" href="#id25"&gt;理解 &lt;code&gt;process.nextTick()&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;你可能已经注意到了， &lt;code&gt;process.nextTick()&lt;/code&gt; 并不在图中， 虽然他是 异步 API 的一部分。这是因为 &lt;code&gt;process.nextTick()&lt;/code&gt; 并不是 事件循环中的一部分。 实际上，无论处在那一个事件循环阶段， &lt;code&gt;nextTickQueue&lt;/code&gt; 会在当前的操作完成后，立马被执行。&lt;/p&gt;
&lt;p&gt;重新看一下之前的图，任何时候你调用 &lt;code&gt;process.nextTick()&lt;/code&gt; ，他都会被立马执行。这会造成一些很坏的情况 因为这样会允许你用循环的 &lt;code&gt;process.nextTick()&lt;/code&gt; 去阻塞 I/O 。这意味着 事件循环不会到达轮询阶段。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id11"&gt;
&lt;h3&gt;7.2. &lt;a class="toc-backref" href="#id26"&gt;为什么这样被允许？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;为什么这样的事情在 Node.js 中会被允许？部分的原因是因为 这样的一种设计思路：API 应当总是被异步执行，即使并不需要。 我们通过下面的代码片段来查看：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;apiCall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;arg&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;string&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nextTick&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;argument should be string&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;此处的代码片段会做一个简单的参数检测，如果不对的话，会给回调抛出一个异常。这个 API 最近进行了更新，可以传递参数给 &lt;code&gt;process.nextTick()&lt;/code&gt; 来传给回调，这样就不需要函数嵌套了。&lt;/p&gt;
&lt;p&gt;我们所做的就是 传递一个错误 给用户，但是需要在我们允许其他代码被执行的情况下。 利用 &lt;code&gt;process.nextTick()&lt;/code&gt; 我们保证了 &lt;code&gt;apiCall()&lt;/code&gt; 在其他代码被执行之后、事件循环继续之前 总是会运行回调。为达到这个效果，JS 调用栈 被允许 展开 然后 立马执行 提供的回调，这样就能够递归调用 &lt;code&gt;process.nextTick()&lt;/code&gt; 而不会产生 &lt;code&gt;RangeError: Maximum call stack size exceeded from v8&lt;/code&gt; 的错误。&lt;/p&gt;
&lt;p&gt;这种哲学可能会产生一些潜在的问题，以下面的代码片段为例：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// this has an asynchronous signature, but calls callback synchronously&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;someAsyncApiCall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// the callback is called before `someAsyncApiCall` completes.&lt;/span&gt;
&lt;span class="nx"&gt;someAsyncApiCall&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// since someAsyncApiCall has completed, bar hasn&amp;#39;t been assigned any value&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// undefined&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;bar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;用户定义的 &lt;code&gt;someAsyncApiCall()&lt;/code&gt; 包含了一些异步的标志，但实际上是一个同步的操作。当它被调用时，提供的回调 会在同一个事件循环阶段被调用 因为 &lt;code&gt;someAsyncApiCall()&lt;/code&gt; 实际上并不是异步操作。结果是，回调读取 &lt;code&gt;bar&lt;/code&gt; 的值，然后他并不在当前作用域，因为脚本还没有完成。&lt;/p&gt;
&lt;p&gt;在回调中 加入 &lt;code&gt;process.nextTick()&lt;/code&gt; ，脚本仍然能被执行完，使得所有的变量 函数 等等 被优先初始化。这样做的另一个好处是，不允许事件循环 继续。 这对某些 需要警告错误的用户来说很有用。 这边是之前的例子 &lt;code&gt;process.nextTick()&lt;/code&gt; 。（因为需要完成当前的操作才会切换到 &lt;code&gt;process.nextTick()&lt;/code&gt; ）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;someAsyncApiCall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nextTick&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;someAsyncApiCall&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 1&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;bar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这是另一个例子：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;net&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createServer&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{}).&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8080&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;listening&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;只有当一个端口被传递之后，才会立马绑定。 所以 &lt;code&gt;listening&lt;/code&gt; 能够被立马调用。 问题是， &lt;code&gt;.on('listening')&lt;/code&gt; 回调还没有被设定。&lt;/p&gt;
&lt;p&gt;为了解决这个问题， &lt;code&gt;listening&lt;/code&gt; 会被放在 &lt;code&gt;netxTick()&lt;/code&gt; 中 以允许当前的代码运行完毕。这使得用户能够随意的设定事件处理函数。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="process-nexttick-setimmediate"&gt;
&lt;h3&gt;7.3. &lt;a class="toc-backref" href="#id27"&gt;&lt;code&gt;process.nextTick()&lt;/code&gt; 与 &lt;code&gt;setImmediate()&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;用户可能会很疑虑，因为我们 有两个调用很相似，但他们的名字却很混乱：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;code&gt;process.nextTick()&lt;/code&gt; 会在相同的阶段 立马被执行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setImmediate()&lt;/code&gt; 会在事件循环的下一个阶段 或者 时钟 执行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实际上，这两个名字应当替换的，因为 &lt;code&gt;process.nextTick()&lt;/code&gt; 比起 &lt;code&gt;setImmediate()&lt;/code&gt; 会更快的执行，但这是以前的产物，不大可能被改变。 如果要做改变的话 可能会使得大部分的 NPM 包跟着修改。 每天都有更多的新模块被添加，这意味着 每过一天，更多可能的损坏会发生。 所以 即使他们令人困惑，名字本身不会改变。&lt;/p&gt;
&lt;p&gt;我们推荐开发者使用 &lt;code&gt;setImmediate()&lt;/code&gt; ， 因为者更容易理解 (这使得代码的兼容性也更好，比方说浏览器 JS)。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id12"&gt;
&lt;h3&gt;7.4. &lt;a class="toc-backref" href="#id28"&gt;为什么我们使用 &lt;code&gt;process.nextTick()&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;主要有两个原因：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;使得用户能够处理错误，清理不需要的资源， 或者 在事件循环继续之前重新的 请求资源。&lt;/li&gt;
&lt;li&gt;有些时候 需要使得回调能够在 事件循环继续之前 在 调用栈上被展开。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;一个例子 就是符合用户的预期。简单的例子：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;net&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createServer&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;connection&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8080&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;listening&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;listen()&lt;/code&gt; 在事件循环的一开始就被执行了， 但是事件循环的回调被安排在了 &lt;code&gt;setImmediate()&lt;/code&gt; 中，除非一个 主机名 被传递，否则端口绑定会立马执行。当 事件循环继续时，最终会到达 轮询阶段，这就意味着，有非0的概率发生这样的情况：已经接收到了连接 但是 连接事件却仍然没有被触发。&lt;/p&gt;
&lt;p&gt;另一个例子就是 运行一个构造函数，继承自 &lt;code&gt;EventEmitter&lt;/code&gt; ，他想在构造函数中调用事件。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;EventEmitter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;events&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;util&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;util&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;MyEmitter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;EventEmitter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;emit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;event&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;util&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inherits&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;MyEmitter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;EventEmitter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myEmitter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;MyEmitter&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;myEmitter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;event&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;an event occurred!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;你不能立马在构造函数中发出事件，因为脚本不会到达 用户指定回调事件的点。所以，在一个构造函数内部，你可以使用 &lt;code&gt;process.nextTick()&lt;/code&gt; 去设定一个回调函数，并且在构造函数结束时发出事件，这样就能取得期望的结果。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;EventEmitter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;events&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;util&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;util&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;MyEmitter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;EventEmitter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// use nextTick to emit the event once a handler is assigned&lt;/span&gt;
  &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nextTick&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;emit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;event&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;util&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inherits&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;MyEmitter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;EventEmitter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myEmitter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;MyEmitter&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;myEmitter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;event&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;an event occurred!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="Node"></category></entry><entry><title>HTML To PDF Solutions / HTML 转换 PDF 解决方案</title><link href="https://brianshen1990.github.io/HTML_To_PDF_Solutions.html" rel="alternate"></link><published>2019-01-10T00:00:00+08:00</published><updated>2019-01-10T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:brianshen1990.github.io,2019-01-10:/HTML_To_PDF_Solutions.html</id><summary type="html">&lt;p class="first last"&gt;HTML To PDF Solutions&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;span id="html-to-pdf-solutions"&gt;&lt;/span&gt;&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#intro" id="id3"&gt;Intro / 简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#sample-files" id="id4"&gt;Sample Files / 示例文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#phantomjs" id="id5"&gt;&lt;code&gt;phantomjs&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#installation" id="id6"&gt;Installation / 安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#usage-in-js-js" id="id7"&gt;Usage in JS / JS  调用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#wkhtmltopdf" id="id8"&gt;&lt;code&gt;wkhtmltopdf&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id1" id="id9"&gt;Installation / 安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#usage-in-command-line" id="id10"&gt;Usage in Command Line / 命令行使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id11"&gt;Usage in JS / JS 使用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#other-tips" id="id12"&gt;Other Tips / 其他&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#charts-can-be-partial" id="id13"&gt;Charts can be partial / 图表显示不全&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#jquery-3-3-1-is-not-fully-compatible-with-wkhtmltopdf" id="id14"&gt;jQuery 3.3.1 is not fully compatible with wkhtmltopdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="intro"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id3"&gt;Intro / 简介&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are many situations that we need to generate reports in PDF. And there are many solutions.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Use libraries to manipulate pdf content. That suffers.&lt;/li&gt;
&lt;li&gt;Use html and then render it to PDF. That's wonderful.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I think everyone like the last solution since you can always have a preview.&lt;/p&gt;
&lt;p&gt;And to render html to PDF, there are many solutions.
But the most popular ones are &lt;code&gt;phantomjs&lt;/code&gt; and &lt;code&gt;wkhtmltopdf&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;I thought &lt;code&gt;phantomjs&lt;/code&gt; would be more popular if it's still under maintenance.
Unfortunately, it doesn't. So the lack of some necessary features makes &lt;code&gt;wkhtmltopdf&lt;/code&gt; an appearing alternative.&lt;/p&gt;
&lt;p&gt;In my project, I used to generate PDF using &lt;code&gt;phantomjs&lt;/code&gt; . One day a customer asked for a menu.
And I found it unable to fulfill.
And then I began to use &lt;code&gt;wkhtmltopdf&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;However, there are some problems both. And I'll explain.&lt;/p&gt;
&lt;p&gt;很多情况下， 我们需要产生PDF的报告。 因此也有很多现存的解决方案：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;可以使用 PDF 库 去操作PDF 的内容， 那会非常的痛苦&lt;/li&gt;
&lt;li&gt;使用HTML 然后 渲染为PDF， 那会很好&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我想每个人都改会喜欢后一种解决方案， 因为你永远可以有一个预览。&lt;/p&gt;
&lt;p&gt;至于 将 HTML 转换为 PDF， 现在也有很多的解决方案。 最流行的就是 &lt;code&gt;phantomjs&lt;/code&gt; 和 &lt;code&gt;wkhtmltopdf&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;我想 &lt;code&gt;phantomjs&lt;/code&gt; 会更加的流行 如果 它还在被维护的话。 可惜的是，他被停止维护了。 一些基础必要功能的缺少使得 &lt;code&gt;wkhtmltopdf&lt;/code&gt; 称为很好的选择。&lt;/p&gt;
&lt;p&gt;我曾使用 &lt;code&gt;phantomjs&lt;/code&gt; 产生 PDF，但是后来客户需要 一个 目录，&lt;code&gt;phantomjs&lt;/code&gt; 不具备这样的功能。因为我转向了 &lt;code&gt;wkhtmltopdf&lt;/code&gt; 。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sample-files"&gt;
&lt;h2&gt;2. &lt;a class="toc-backref" href="#id4"&gt;Sample Files / 示例文件&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To compare the render results of the two Scriptable Headless Browser. We will use the following samples.&lt;/p&gt;
&lt;p&gt;为了对比渲染结果，我们使用以下的示例。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./resources/
├── DailyReport.js
├── DailyReport1x.html
├── DailyReport3x.html
├── Report.css
├── echarts.common.min.js
├── jquery-1.12.4.min.js
└── jquery-3.3.1.min.js
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;DailyReport1x.html&lt;/code&gt; (We render a link and a chart / 我们渲染一个 连接 和 图表):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html &lt;span class="nv"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;en&amp;quot;&lt;/span&gt;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta &lt;span class="nv"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;&amp;gt;
&amp;lt;title&amp;gt;Daily Report&amp;lt;/title&amp;gt;
&amp;lt;link &lt;span class="nv"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Report.css&amp;quot;&lt;/span&gt;&amp;gt;
&amp;lt;script &lt;span class="nv"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;jquery-1.12.4.min.js&amp;quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script &lt;span class="nv"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;echarts.common.min.js&amp;quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script &lt;span class="nv"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;DailyReport.js&amp;quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;div &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;page&amp;quot;&lt;/span&gt;&amp;gt;
    &amp;lt;div&amp;gt;
    &amp;lt;h2&amp;gt;Menu&amp;lt;/h2&amp;gt;
    &amp;lt;div &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;chartDiv&amp;quot;&lt;/span&gt;&amp;gt;
        &amp;lt;a &lt;span class="nv"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#chartDiv&amp;quot;&lt;/span&gt;&amp;gt;● Test Internal Link&amp;lt;/a&amp;gt;
        &amp;lt;br /&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;page&amp;quot;&lt;/span&gt;&amp;gt;
    &amp;lt;div &lt;span class="nv"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;height:100mm; width:180mm;&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;chartDiv&amp;quot;&lt;/span&gt;&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;DailyReport.js&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; drawPie&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  var &lt;span class="nv"&gt;chartOptions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    animation: false,
    xAxis: &lt;span class="o"&gt;{&lt;/span&gt;
      type: &lt;span class="s1"&gt;&amp;#39;category&amp;#39;&lt;/span&gt;,
      data: &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Mon&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;Tue&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;Wed&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;Thu&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;Fri&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;Sat&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;Sun&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;,
    yAxis: &lt;span class="o"&gt;{&lt;/span&gt;
      type: &lt;span class="s1"&gt;&amp;#39;value&amp;#39;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;,
    series: &lt;span class="o"&gt;[{&lt;/span&gt;
      data: &lt;span class="o"&gt;[&lt;/span&gt;820, 932, 901, 934, 1290, 1330, 1320&lt;span class="o"&gt;]&lt;/span&gt;,
      type: &lt;span class="s1"&gt;&amp;#39;line&amp;#39;&lt;/span&gt;
    &lt;span class="o"&gt;}]&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  var &lt;span class="nv"&gt;myChart&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; echarts.init&lt;span class="o"&gt;(&lt;/span&gt;document.getElementById&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;chartDiv&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  myChart.setOption&lt;span class="o"&gt;(&lt;/span&gt;chartOptions&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;$(&lt;/span&gt;document&lt;span class="k"&gt;)&lt;/span&gt;.ready&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  drawPie&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Report.css&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;@page &lt;span class="o"&gt;{&lt;/span&gt;
  size: A4&lt;span class="p"&gt;;&lt;/span&gt;
  margin: 0&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
@media print &lt;span class="o"&gt;{&lt;/span&gt;
  body &lt;span class="o"&gt;{&lt;/span&gt;
    background: white&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
  .page &lt;span class="o"&gt;{&lt;/span&gt;
    width: 210mm&lt;span class="p"&gt;;&lt;/span&gt;
    page-break-after: always&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
html, body &lt;span class="o"&gt;{&lt;/span&gt;
  background: rgb&lt;span class="o"&gt;(&lt;/span&gt;241,241,241&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
.page &lt;span class="o"&gt;{&lt;/span&gt;
  page-break-after: always&lt;span class="p"&gt;;&lt;/span&gt;
  width: 210mm&lt;span class="p"&gt;;&lt;/span&gt;
  background: white&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And preview in Chrome / 在Chrome 中预览:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/tools/htmltopdf01.png" /&gt;
&lt;/div&gt;
&lt;p&gt;Print Preview / Chrome 打印预览:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/tools/htmltopdf02.png" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="phantomjs"&gt;
&lt;h2&gt;3. &lt;a class="toc-backref" href="#id5"&gt;&lt;code&gt;phantomjs&lt;/code&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="installation"&gt;
&lt;h3&gt;3.1. &lt;a class="toc-backref" href="#id6"&gt;Installation / 安装&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Download from its &lt;a class="reference external" href="http://phantomjs.org/download.html"&gt;Phantomjs Official Site&lt;/a&gt; and move it to &lt;code&gt;/usr/bin/&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;The latest and end version is &lt;code&gt;2.1.1&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;从官网去下载，移动到 &lt;code&gt;/usr/bin/&lt;/code&gt;  . 最新也是最后的版本是 &lt;code&gt;2.1.1&lt;/code&gt;  .&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="usage-in-js-js"&gt;
&lt;h3&gt;3.2. &lt;a class="toc-backref" href="#id7"&gt;Usage in JS / JS  调用&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We use &lt;code&gt;html-pdf&lt;/code&gt; because it is simple.&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;html-pdf&lt;/code&gt; ， 因为这样很简单。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm install html-pdf&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;fs&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
const &lt;span class="nv"&gt;phantomjs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;html-pdf&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

const &lt;span class="nv"&gt;SrcPath1x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;/Users/BrianShen/Code/Asia/tset/Node/testPDF/resources/DailyReport1x.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
const &lt;span class="nv"&gt;BasePath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;file:///Users/BrianShen/Code/Asia/tset/Node/testPDF/resources/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
const &lt;span class="nv"&gt;OutPath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;test.pdf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

const &lt;span class="nv"&gt;genPDFPahntomJS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;srcPath, basePath, outPath&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; new Promise&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;resolve, reject&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;
    fs.readFile&lt;span class="o"&gt;(&lt;/span&gt;srcPath, &lt;span class="s1"&gt;&amp;#39;UTF8&amp;#39;&lt;/span&gt;, &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;errfs, html&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;errfs&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        reject&lt;span class="o"&gt;(&lt;/span&gt;errfs&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;
      const &lt;span class="nv"&gt;genOptions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        height: &lt;span class="s1"&gt;&amp;#39;297mm&amp;#39;&lt;/span&gt;,
        width: &lt;span class="s1"&gt;&amp;#39;210mm&amp;#39;&lt;/span&gt;,
        base: basePath,
        type: &lt;span class="s1"&gt;&amp;#39;pdf&amp;#39;&lt;/span&gt;,
        border: &lt;span class="o"&gt;{&lt;/span&gt;
          top: &lt;span class="s1"&gt;&amp;#39;12mm&amp;#39;&lt;/span&gt;, // default is 0, units: mm, cm, in, px
          right: &lt;span class="s1"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;,
          bottom: &lt;span class="s1"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;,
          left: &lt;span class="s1"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;,
        &lt;span class="o"&gt;}&lt;/span&gt;,
        paginationOffset: 1, // Override the initial pagination number
        footer: &lt;span class="o"&gt;{&lt;/span&gt;
          height: &lt;span class="s1"&gt;&amp;#39;20mm&amp;#39;&lt;/span&gt;,
          contents: &lt;span class="o"&gt;{&lt;/span&gt;
            first: &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;,
            default:&lt;span class="s1"&gt;&amp;#39;{{page}}/{{pages}}&amp;#39;&lt;/span&gt;,
          &lt;span class="o"&gt;}&lt;/span&gt;,
        &lt;span class="o"&gt;}&lt;/span&gt;,
      &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      phantomjs.create&lt;span class="o"&gt;(&lt;/span&gt;html, genOptions&lt;span class="o"&gt;)&lt;/span&gt;.toFile&lt;span class="o"&gt;(&lt;/span&gt;outPath, &lt;span class="o"&gt;(&lt;/span&gt;err, res&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;err&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
          reject&lt;span class="o"&gt;(&lt;/span&gt;err&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        resolve&lt;span class="o"&gt;(&lt;/span&gt;res&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

genPDFPahntomJS&lt;span class="o"&gt;(&lt;/span&gt;SrcPath1x, BasePath, OutPath&lt;span class="o"&gt;)&lt;/span&gt;.then&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;
  console.log&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Success&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;})&lt;/span&gt;.catch&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;err&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;
  console.log&lt;span class="o"&gt;(&lt;/span&gt;err&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;let's see the result / 看看结果:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/tools/htmltopdf03.png" /&gt;
&lt;/div&gt;
&lt;p&gt;Very strange, isn't it?&lt;/p&gt;
&lt;p&gt;&lt;code&gt;phantomjs 2.1.1&lt;/code&gt; has a very strange bug, that the size of printed page is only 75% as big as the standard page. For example, for A4 with 29.7*21. When we design our html, we can only use (29.7 * 0.75) * (21 * 0.75) .&lt;/p&gt;
&lt;p&gt;And the fatal fault is that the internal hyperlink in the PDF cannot be clicked!&lt;/p&gt;
&lt;p&gt;非常的奇怪。 &lt;code&gt;phantomjs 2.1.1&lt;/code&gt; 有一个非常奇怪的bug，大的A4 是平常 A4 的 75% 。 这就意味着你在设计html 的时候要按照75%的比例进行设计.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="wkhtmltopdf"&gt;
&lt;h2&gt;4. &lt;a class="toc-backref" href="#id8"&gt;&lt;code&gt;wkhtmltopdf&lt;/code&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;4.1. &lt;a class="toc-backref" href="#id9"&gt;Installation / 安装&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;OK, still download from &lt;a class="reference external" href="https://wkhtmltopdf.org/downloads.html"&gt;wkhtmltopdf Official Site&lt;/a&gt;  and install.&lt;/p&gt;
&lt;p&gt;仍然从 官网下载并且安装 .&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="usage-in-command-line"&gt;
&lt;h3&gt;4.2. &lt;a class="toc-backref" href="#id10"&gt;Usage in Command Line / 命令行使用&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Quite simple. I just like it because it is simple and easy to begin and test.&lt;/p&gt;
&lt;p&gt;非常简单，能让你快速的开始。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# wkhtmltopdf --debug-javascript --print-media-type --page-size A4 ./resources/DailyReport1x.html test.pdf&lt;/span&gt;
Loading pages &lt;span class="o"&gt;(&lt;/span&gt;1/6&lt;span class="o"&gt;)&lt;/span&gt;
Counting pages &lt;span class="o"&gt;(&lt;/span&gt;2/6&lt;span class="o"&gt;)&lt;/span&gt;
Resolving links &lt;span class="o"&gt;(&lt;/span&gt;4/6&lt;span class="o"&gt;)&lt;/span&gt;
Loading headers and footers &lt;span class="o"&gt;(&lt;/span&gt;5/6&lt;span class="o"&gt;)&lt;/span&gt;
Printing pages &lt;span class="o"&gt;(&lt;/span&gt;6/6&lt;span class="o"&gt;)&lt;/span&gt;
Done
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And let's see the result: / 看一看结果。&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/tools/htmltopdf04.png" /&gt;
&lt;/div&gt;
&lt;p&gt;Everything works fine!&lt;/p&gt;
&lt;p&gt;符合预期。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;4.3. &lt;a class="toc-backref" href="#id11"&gt;Usage in JS / JS 使用&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I use &lt;code&gt;wkhtmltopdf&lt;/code&gt; as it is very popular.&lt;/p&gt;
&lt;p&gt;我使用的是 &lt;code&gt;wkhtmltopdf&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm install wkhtmltopdf&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;wkhtmltopdf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;wkhtmltopdf&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

const &lt;span class="nv"&gt;SrcPath1x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;file:///Users/BrianShen/Code/Asia/tset/Node/testPDF/resources/DailyReport1x.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
const &lt;span class="nv"&gt;OutPath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;./test1.pdf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

const &lt;span class="nv"&gt;genPDFWkHtmlToPdf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;srcPath, outPath&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; new Promise&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;resolve, reject&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;
    wkhtmltopdf&lt;span class="o"&gt;(&lt;/span&gt;srcPath, &lt;span class="o"&gt;{&lt;/span&gt;
      output: outPath,
      printMediaType: true,
      footerLeft: &lt;span class="s1"&gt;&amp;#39;[page] / [toPage]&amp;#39;&lt;/span&gt;,
    &lt;span class="o"&gt;}&lt;/span&gt;, &lt;span class="o"&gt;(&lt;/span&gt;err&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;err&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        reject&lt;span class="o"&gt;(&lt;/span&gt;err&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;
      resolve&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

genPDFWkHtmlToPdf&lt;span class="o"&gt;(&lt;/span&gt;SrcPath1x, OutPath&lt;span class="o"&gt;)&lt;/span&gt;.then&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;
  console.log&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Success&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;})&lt;/span&gt;.catch&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;err&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;
  console.log&lt;span class="o"&gt;(&lt;/span&gt;err&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The result / 结果:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/tools/htmltopdf05.png" /&gt;
&lt;/div&gt;
&lt;p&gt;It's as same as we rendered with command line!&lt;/p&gt;
&lt;p&gt;Besides, the internal hyperlink works!&lt;/p&gt;
&lt;p&gt;与 命令行中 渲染的结果是一样的。此外，内部的连接是可以使用的。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="other-tips"&gt;
&lt;h2&gt;5. &lt;a class="toc-backref" href="#id12"&gt;Other Tips / 其他&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="charts-can-be-partial"&gt;
&lt;h3&gt;5.1. &lt;a class="toc-backref" href="#id13"&gt;Charts can be partial / 图表显示不全&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;ECharts will use animation by default, so disable it.&lt;/p&gt;
&lt;p&gt;ECharts 会自动的开启 动画效果。会导致延时。关闭即可。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;animation: false,&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="jquery-3-3-1-is-not-fully-compatible-with-wkhtmltopdf"&gt;
&lt;h3&gt;5.2. &lt;a class="toc-backref" href="#id14"&gt;jQuery 3.3.1 is not fully compatible with wkhtmltopdf&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;jQuery 3.3.1 与 wkhtmltopdf 不兼容。&lt;/p&gt;
&lt;p&gt;Let's see a sample:&lt;/p&gt;
&lt;p&gt;看个例子。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html &lt;span class="nv"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;en&amp;quot;&lt;/span&gt;&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta &lt;span class="nv"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;&amp;gt;
  &amp;lt;title&amp;gt;Daily Report&amp;lt;/title&amp;gt;
  &amp;lt;link &lt;span class="nv"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Report.css&amp;quot;&lt;/span&gt;&amp;gt;
  &amp;lt;script &lt;span class="nv"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;jquery-3.3.1.min.js&amp;quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
  &amp;lt;div &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;page&amp;quot;&lt;/span&gt;&amp;gt;
    &amp;lt;div&amp;gt;
      &amp;lt;h2&amp;gt;Menu&amp;lt;/h2&amp;gt;
      &amp;lt;div &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;chartDiv&amp;quot;&lt;/span&gt;&amp;gt;
        &amp;lt;a &lt;span class="nv"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#chartDiv&amp;quot;&lt;/span&gt;&amp;gt;● Test Internal Link&amp;lt;/a&amp;gt;
        &amp;lt;br /&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div&amp;gt;
      &amp;lt;table &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tableDiv&amp;quot;&lt;/span&gt;&amp;gt;
        &amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;Test&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Title&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
      &amp;lt;/table&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;script&amp;gt;
  &lt;span class="k"&gt;$(&lt;/span&gt;document&lt;span class="k"&gt;)&lt;/span&gt;.ready&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#tableDiv&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;.append&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;Row1&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Row1&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;})&lt;/span&gt;
&amp;lt;/script&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When we open it in Chrome:&lt;/p&gt;
&lt;p&gt;从Chrome 中打开。&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/tools/htmltopdf06.png" /&gt;
&lt;/div&gt;
&lt;p&gt;And render it with &lt;code&gt;wkhtmltopdf&lt;/code&gt; :&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;wkhtmltopdf&lt;/code&gt; 去渲染。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#wkhtmltopdf --debug-javascript --print-media-type --page-size A4 --footer-left &amp;quot;Page [page] of [toPage]&amp;quot; ./resources/DailyReport3x.html test.pdf&lt;/span&gt;
Loading pages &lt;span class="o"&gt;(&lt;/span&gt;1/6&lt;span class="o"&gt;)&lt;/span&gt;
Warning: file:///Users/BrianShen/Code/Asia/tset/Node/testPDF/resources/jquery-3.3.1.min.js:2 jQuery.Deferred exception: &lt;span class="s1"&gt;&amp;#39;undefined&amp;#39;&lt;/span&gt; is not a &lt;span class="k"&gt;function&lt;/span&gt;
Warning: undefined:0 TypeError: &lt;span class="s1"&gt;&amp;#39;undefined&amp;#39;&lt;/span&gt; is not a &lt;span class="k"&gt;function&lt;/span&gt;
Counting pages &lt;span class="o"&gt;(&lt;/span&gt;2/6&lt;span class="o"&gt;)&lt;/span&gt;
Resolving links &lt;span class="o"&gt;(&lt;/span&gt;4/6&lt;span class="o"&gt;)&lt;/span&gt;
Loading headers and footers &lt;span class="o"&gt;(&lt;/span&gt;5/6&lt;span class="o"&gt;)&lt;/span&gt;
Printing pages &lt;span class="o"&gt;(&lt;/span&gt;6/6&lt;span class="o"&gt;)&lt;/span&gt;
Done
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It can't work.&lt;/p&gt;
&lt;p&gt;But when we switch to 1.12.4 and render it, everything works fine.&lt;/p&gt;
&lt;p&gt;发生了错误。但是我们切换到 1.12.4 的 jQuery， 一切工作正常。&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/tools/htmltopdf05.png" /&gt;
&lt;/div&gt;
&lt;p&gt;Sad thing is that jQuery 1.12.4 is not under maintenance anymore.&lt;/p&gt;
&lt;p&gt;遗憾的是，jQuery 1.12.4 不在维护了。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="phantomjs"></category><category term="wkhtmltopdf"></category><category term="PDF"></category><category term="HTML"></category></entry><entry><title>ES6 Reference</title><link href="https://brianshen1990.github.io/ES6_Reference.html" rel="alternate"></link><published>2018-12-21T00:00:00+08:00</published><updated>2018-12-21T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:brianshen1990.github.io,2018-12-21:/ES6_Reference.html</id><summary type="html">&lt;p class="first last"&gt;ES6 Reference&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;span id="es6-reference-rst"&gt;&lt;/span&gt;&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#let-const" id="id6"&gt;let &amp;amp; const&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#destructuring" id="id7"&gt;destructuring&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#usage" id="id8"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#string" id="id9"&gt;String&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#unicode" id="id10"&gt;Unicode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#codepointat" id="id11"&gt;codePointAt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#fromcodepoint" id="id12"&gt;fromCodePoint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#iteration" id="id13"&gt;iteration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#normalize" id="id14"&gt;normalize&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#newapis" id="id15"&gt;newAPIs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#string-template" id="id16"&gt;String Template&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#regex" id="id17"&gt;Regex&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#unicode-support-u" id="id18"&gt;Unicode support &lt;code&gt;u&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#stick-y" id="id19"&gt;Stick &lt;code&gt;y&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#dotall-s" id="id20"&gt;dotAll &lt;code&gt;s&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#number" id="id21"&gt;Number&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#apis" id="id22"&gt;APIS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#function" id="id23"&gt;Function&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#rest-parameters" id="id24"&gt;Rest parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#strict-mode" id="id25"&gt;strict mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#array-function" id="id26"&gt;Array Function&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#array" id="id27"&gt;Array&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#spread-operator" id="id28"&gt;spread operator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#object" id="id29"&gt;Object&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#syntax" id="id30"&gt;syntax&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#attr" id="id31"&gt;ATTR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#operator" id="id32"&gt;Operator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id1" id="id33"&gt;APIs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#symbol" id="id34"&gt;Symbol&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id35"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id3" id="id36"&gt;Iteration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id4" id="id37"&gt;APIs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#set-and-map" id="id38"&gt;Set and  Map&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#set" id="id39"&gt;Set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#map" id="id40"&gt;Map&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#proxy" id="id41"&gt;Proxy&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#proxy-actions-supoorted" id="id42"&gt;Proxy Actions Supoorted&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#proxy-revocable" id="id43"&gt;Proxy.revocable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#this" id="id44"&gt;This&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#reflect" id="id45"&gt;Reflect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#promises" id="id46"&gt;Promises&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id5" id="id47"&gt;APIs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#iterator" id="id48"&gt;Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#generator" id="id49"&gt;Generator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#class" id="id50"&gt;Class&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#class-specials" id="id51"&gt;class specials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#warnings" id="id52"&gt;Warnings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#static" id="id53"&gt;Static&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#attrs" id="id54"&gt;attrs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#private-variables-and-attrs" id="id55"&gt;private variables and attrs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#new-target" id="id56"&gt;new.target&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#extends" id="id57"&gt;extends&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#super" id="id58"&gt;super&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#prototype-and-proto" id="id59"&gt;prototype and __proto__&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#decorator" id="id60"&gt;Decorator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#module" id="id61"&gt;Module&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#export" id="id62"&gt;export&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#import" id="id63"&gt;import&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#export-default" id="id64"&gt;export default&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#browser-load-es6" id="id65"&gt;Browser Load ES6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#es6-vs-commonjs" id="id66"&gt;ES6 VS CommonJS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#reference" id="id67"&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="let-const"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id6"&gt;let &amp;amp; const&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Just use them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="destructuring"&gt;
&lt;h2&gt;2. &lt;a class="toc-backref" href="#id7"&gt;destructuring&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="usage"&gt;
&lt;h3&gt;2.1. &lt;a class="toc-backref" href="#id8"&gt;Usage&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Exchange value&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 1&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 2&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;x, y&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;y, x&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Return many values&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; example&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    foo: 1,
    bar: 2
  &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; foo, bar &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; example&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Function definition&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; f&lt;span class="o"&gt;([&lt;/span&gt;x, y, z&lt;span class="o"&gt;])&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; ... &lt;span class="o"&gt;}&lt;/span&gt;
f&lt;span class="o"&gt;([&lt;/span&gt;1, 2, 3&lt;span class="o"&gt;])&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; f&lt;span class="o"&gt;({&lt;/span&gt;x, y, z&lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; ... &lt;span class="o"&gt;}&lt;/span&gt;
f&lt;span class="o"&gt;({&lt;/span&gt;z: 3, y: 2, x: 1&lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;JSON extraction&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;jsonData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  id: 42,
  status: &lt;span class="s2"&gt;&amp;quot;OK&amp;quot;&lt;/span&gt;,
  data: &lt;span class="o"&gt;[&lt;/span&gt;867, 5309&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; id, status, data: number &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; jsonData&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Default function parameter&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;jQuery.ajax &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;url, &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nv"&gt;async&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; true,
  &lt;span class="nv"&gt;beforeSend&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt;,
  &lt;span class="nv"&gt;cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; true,
  &lt;span class="nb"&gt;complete&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt;,
  &lt;span class="nv"&gt;crossDomain&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; false,
  &lt;span class="nv"&gt;global&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; true,
  // ... more config
&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{})&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  // ... &lt;span class="k"&gt;do&lt;/span&gt; stuff
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Map iteration&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;key, value&lt;span class="o"&gt;]&lt;/span&gt; of map&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  console.log&lt;span class="o"&gt;(&lt;/span&gt;key + &lt;span class="s2"&gt;&amp;quot; is &amp;quot;&lt;/span&gt; + value&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Module import&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="o"&gt;{&lt;/span&gt; SourceMapConsumer, SourceNode &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;source-map&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="string"&gt;
&lt;h2&gt;3. &lt;a class="toc-backref" href="#id9"&gt;String&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="unicode"&gt;
&lt;h3&gt;3.1. &lt;a class="toc-backref" href="#id10"&gt;Unicode&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\z&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;z&amp;#39;&lt;/span&gt;  // &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;\172&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;z&amp;#39;&lt;/span&gt; // &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;\x7A&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;z&amp;#39;&lt;/span&gt; // &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;\u007A&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;z&amp;#39;&lt;/span&gt; // &lt;span class="nb"&gt;true&lt;/span&gt; // less than FFFF
&lt;span class="s1"&gt;&amp;#39;\u{7A}&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;z&amp;#39;&lt;/span&gt; // &lt;span class="nb"&gt;true&lt;/span&gt;  // greater than FFFF &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt; byte&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="codepointat"&gt;
&lt;h3&gt;3.2. &lt;a class="toc-backref" href="#id11"&gt;codePointAt&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Handle characters taken more than 4 bytes.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;var &lt;span class="nv"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;𠮷a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

s.length // 2
s.charAt&lt;span class="o"&gt;(&lt;/span&gt;0&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
s.charAt&lt;span class="o"&gt;(&lt;/span&gt;1&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
s.charCodeAt&lt;span class="o"&gt;(&lt;/span&gt;0&lt;span class="o"&gt;)&lt;/span&gt; // 55362
s.charCodeAt&lt;span class="o"&gt;(&lt;/span&gt;1&lt;span class="o"&gt;)&lt;/span&gt; // 57271
s.codePointAt&lt;span class="o"&gt;(&lt;/span&gt;0&lt;span class="o"&gt;)&lt;/span&gt; // 134071
s.codePointAt&lt;span class="o"&gt;(&lt;/span&gt;1&lt;span class="o"&gt;)&lt;/span&gt; // 57271
s.codePointAt&lt;span class="o"&gt;(&lt;/span&gt;2&lt;span class="o"&gt;)&lt;/span&gt; // 97
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="fromcodepoint"&gt;
&lt;h3&gt;3.3. &lt;a class="toc-backref" href="#id12"&gt;fromCodePoint&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Only handle characters taken more than 4 bytes.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;String.fromCodePoint&lt;span class="o"&gt;(&lt;/span&gt;0x20BB7&lt;span class="o"&gt;)&lt;/span&gt;
// &lt;span class="s2"&gt;&amp;quot;𠮷&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="iteration"&gt;
&lt;h3&gt;3.4. &lt;a class="toc-backref" href="#id13"&gt;iteration&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;for...of&lt;/code&gt; syntax can handler all kinds of characters.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; String.fromCodePoint&lt;span class="o"&gt;(&lt;/span&gt;0x20BB7&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0&lt;span class="p"&gt;;&lt;/span&gt; i &amp;lt; text.length&lt;span class="p"&gt;;&lt;/span&gt; i++&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  console.log&lt;span class="o"&gt;(&lt;/span&gt;text&lt;span class="o"&gt;[&lt;/span&gt;i&lt;span class="o"&gt;])&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
// &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;
// &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;let&lt;/span&gt; i of text&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  console.log&lt;span class="o"&gt;(&lt;/span&gt;i&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
// &lt;span class="s2"&gt;&amp;quot;𠮷&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="normalize"&gt;
&lt;h3&gt;3.5. &lt;a class="toc-backref" href="#id14"&gt;normalize&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Handle European Characters.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="newapis"&gt;
&lt;h3&gt;3.6. &lt;a class="toc-backref" href="#id15"&gt;newAPIs&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;includes&lt;span class="o"&gt;()&lt;/span&gt;
startsWith&lt;span class="o"&gt;()&lt;/span&gt;
endsWith&lt;span class="o"&gt;()&lt;/span&gt;
endsWith&lt;span class="o"&gt;()&lt;/span&gt;
padStart&lt;span class="o"&gt;()&lt;/span&gt;
padEnd&lt;span class="o"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="string-template"&gt;
&lt;h3&gt;3.7. &lt;a class="toc-backref" href="#id16"&gt;String Template&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt;There are &amp;lt;b&amp;gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;basket&lt;/span&gt;&lt;span class="p"&gt;.count&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&amp;lt;/b&amp;gt; items&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="regex"&gt;
&lt;h2&gt;4. &lt;a class="toc-backref" href="#id17"&gt;Regex&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="unicode-support-u"&gt;
&lt;h3&gt;4.1. &lt;a class="toc-backref" href="#id18"&gt;Unicode support &lt;code&gt;u&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;var &lt;span class="nv"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;𠮷&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

/^.$/.test&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="nb"&gt;false&lt;/span&gt;
/^.$/u.test&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="nb"&gt;true&lt;/span&gt;

/&lt;span class="se"&gt;\u&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;61&lt;span class="o"&gt;}&lt;/span&gt;/.test&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="nb"&gt;false&lt;/span&gt;
/&lt;span class="se"&gt;\u&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;61&lt;span class="o"&gt;}&lt;/span&gt;/u.test&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="nb"&gt;true&lt;/span&gt;
/&lt;span class="se"&gt;\u&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;20BB7&lt;span class="o"&gt;}&lt;/span&gt;/u.test&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;𠮷&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="nb"&gt;true&lt;/span&gt;

/a&lt;span class="o"&gt;{&lt;/span&gt;2&lt;span class="o"&gt;}&lt;/span&gt;/.test&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;aa&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="nb"&gt;true&lt;/span&gt;
/a&lt;span class="o"&gt;{&lt;/span&gt;2&lt;span class="o"&gt;}&lt;/span&gt;/u.test&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;aa&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="nb"&gt;true&lt;/span&gt;
/𠮷&lt;span class="o"&gt;{&lt;/span&gt;2&lt;span class="o"&gt;}&lt;/span&gt;/.test&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;𠮷𠮷&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="nb"&gt;false&lt;/span&gt;
/𠮷&lt;span class="o"&gt;{&lt;/span&gt;2&lt;span class="o"&gt;}&lt;/span&gt;/u.test&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;𠮷𠮷&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="stick-y"&gt;
&lt;h3&gt;4.2. &lt;a class="toc-backref" href="#id19"&gt;Stick &lt;code&gt;y&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;y&lt;/code&gt; begin after all match while &lt;code&gt;g&lt;/code&gt; begin at next character.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;var &lt;span class="nv"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;aaa_aa_a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
var &lt;span class="nv"&gt;r1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; /a+/g&lt;span class="p"&gt;;&lt;/span&gt;
var &lt;span class="nv"&gt;r2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; /a+/y&lt;span class="p"&gt;;&lt;/span&gt;

r1.exec&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;aaa&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
r2.exec&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;aaa&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;

r1.exec&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;aa&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
r2.exec&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt; // null
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="dotall-s"&gt;
&lt;h3&gt;4.3. &lt;a class="toc-backref" href="#id20"&gt;dotAll &lt;code&gt;s&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We can support all characters. dot only represents normal characters.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/foo.bar/.test&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;foo\nbar&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
// &lt;span class="nb"&gt;false&lt;/span&gt;
/foo.bar/s.test&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;foo\nbar&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="number"&gt;
&lt;h2&gt;5. &lt;a class="toc-backref" href="#id21"&gt;Number&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="apis"&gt;
&lt;h3&gt;5.1. &lt;a class="toc-backref" href="#id22"&gt;APIS&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;isFinite, isNaN&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Number.isFinite&lt;span class="o"&gt;(&lt;/span&gt;15&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // &lt;span class="nb"&gt;true&lt;/span&gt;
Number.isFinite&lt;span class="o"&gt;(&lt;/span&gt;0.8&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // &lt;span class="nb"&gt;true&lt;/span&gt;
Number.isFinite&lt;span class="o"&gt;(&lt;/span&gt;NaN&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // &lt;span class="nb"&gt;false&lt;/span&gt;
Number.isFinite&lt;span class="o"&gt;(&lt;/span&gt;Infinity&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // &lt;span class="nb"&gt;false&lt;/span&gt;
Number.isFinite&lt;span class="o"&gt;(&lt;/span&gt;-Infinity&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // &lt;span class="nb"&gt;false&lt;/span&gt;
Number.isFinite&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // &lt;span class="nb"&gt;false&lt;/span&gt;
Number.isFinite&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;15&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // &lt;span class="nb"&gt;false&lt;/span&gt;
Number.isFinite&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // &lt;span class="nb"&gt;false&lt;/span&gt;

Number.isNaN&lt;span class="o"&gt;(&lt;/span&gt;NaN&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="nb"&gt;true&lt;/span&gt;
Number.isNaN&lt;span class="o"&gt;(&lt;/span&gt;15&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="nb"&gt;false&lt;/span&gt;
Number.isNaN&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;15&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="nb"&gt;false&lt;/span&gt;
Number.isNaN&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="nb"&gt;false&lt;/span&gt;
Number.isNaN&lt;span class="o"&gt;(&lt;/span&gt;9/NaN&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="nb"&gt;true&lt;/span&gt;
Number.isNaN&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;true&amp;#39;&lt;/span&gt; / 0&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="nb"&gt;true&lt;/span&gt;
Number.isNaN&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;true&amp;#39;&lt;/span&gt; / &lt;span class="s1"&gt;&amp;#39;true&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;parseInt&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;parseFloat&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;isInteger&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;isSafeInteger ( -2^53 ~ 2^53 )&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="function"&gt;
&lt;h2&gt;6. &lt;a class="toc-backref" href="#id23"&gt;Function&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="rest-parameters"&gt;
&lt;h3&gt;6.1. &lt;a class="toc-backref" href="#id24"&gt;Rest parameters&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;...varaiable&lt;/code&gt; to get all rest parameters. Array.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; add&lt;span class="o"&gt;(&lt;/span&gt;...values&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;var val of values&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    sum +&lt;span class="o"&gt;=&lt;/span&gt; val&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; sum&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
add&lt;span class="o"&gt;(&lt;/span&gt;2, 5, 3&lt;span class="o"&gt;)&lt;/span&gt; // 10
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="strict-mode"&gt;
&lt;h3&gt;6.2. &lt;a class="toc-backref" href="#id25"&gt;strict mode&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Under strict mode, functions won't include &lt;code&gt;func.arguments&lt;/code&gt; and &lt;code&gt;func.caller&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;If we want to use strict mode, then the function itself cannot include
- default value
- deconstructing&lt;/p&gt;
&lt;p&gt;Error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; doSomething&lt;span class="o"&gt;(&lt;/span&gt;a, &lt;span class="nv"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; a&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;use strict&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  // code
&lt;span class="o"&gt;}&lt;/span&gt;

const &lt;span class="nv"&gt;doSomething&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="o"&gt;({&lt;/span&gt;a, b&lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;use strict&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  // code
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

const &lt;span class="nv"&gt;doSomething&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;...a&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;use strict&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  // code
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

const &lt;span class="nv"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  doSomething&lt;span class="o"&gt;({&lt;/span&gt;a, b&lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;use strict&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    // code
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;How we can avoid this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 1&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;use strict&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; doSomething&lt;span class="o"&gt;(&lt;/span&gt;a, &lt;span class="nv"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; a&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  // code
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# 2&lt;/span&gt;
const &lt;span class="nv"&gt;doSomething&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;use strict&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 42&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; value&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}())&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="array-function"&gt;
&lt;h3&gt;6.3. &lt;a class="toc-backref" href="#id26"&gt;Array Function&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Watch:
- there is no &lt;code&gt;this&lt;/code&gt; in function, &lt;code&gt;this&lt;/code&gt; is the outside &lt;code&gt;this&lt;/code&gt; .
- cannot use as a constructor
- cannot use arguments object
- cannot use yield&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="array"&gt;
&lt;h2&gt;7. &lt;a class="toc-backref" href="#id27"&gt;Array&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="spread-operator"&gt;
&lt;h3&gt;7.1. &lt;a class="toc-backref" href="#id28"&gt;spread operator&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;console.log&lt;span class="o"&gt;(&lt;/span&gt;...&lt;span class="o"&gt;[&lt;/span&gt;1, 2, 3&lt;span class="o"&gt;])&lt;/span&gt;
// &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; 3
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Usage:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;clone&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;a1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;1, 2&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
const &lt;span class="nv"&gt;a2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;...a1&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;combine&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;arr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
const &lt;span class="nv"&gt;arr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;...arr1, ...arr2&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;String length&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;x\uD83D\uDE80y&amp;#39;&lt;/span&gt;.length // 4
&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="s1"&gt;&amp;#39;x\uD83D\uDE80y&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;.length // 3
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;generator&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;go&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;*&lt;span class="o"&gt;(){&lt;/span&gt;
  yield 1&lt;span class="p"&gt;;&lt;/span&gt;
  yield 2&lt;span class="p"&gt;;&lt;/span&gt;
  yield 3&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;...go&lt;span class="o"&gt;()]&lt;/span&gt; // &lt;span class="o"&gt;[&lt;/span&gt;1, 2, 3&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;APIs&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Array.from&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;arrayLike&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;,
    &lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;,
    &lt;span class="s1"&gt;&amp;#39;2&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;,
    length: 3
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;arr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Array.from&lt;span class="o"&gt;(&lt;/span&gt;arrayLike&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Array.Of&lt;/p&gt;
&lt;p&gt;Array constructor exists some misunderstanding.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Array.of&lt;span class="o"&gt;(&lt;/span&gt;3, 11, 8&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="o"&gt;[&lt;/span&gt;3,11,8&lt;span class="o"&gt;]&lt;/span&gt;
Array.of&lt;span class="o"&gt;(&lt;/span&gt;3&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="o"&gt;[&lt;/span&gt;3&lt;span class="o"&gt;]&lt;/span&gt;
Array.of&lt;span class="o"&gt;(&lt;/span&gt;3&lt;span class="o"&gt;)&lt;/span&gt;.length // 1

Array&lt;span class="o"&gt;()&lt;/span&gt; // &lt;span class="o"&gt;[]&lt;/span&gt;
Array&lt;span class="o"&gt;(&lt;/span&gt;3&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="o"&gt;[&lt;/span&gt;, , ,&lt;span class="o"&gt;]&lt;/span&gt;
Array&lt;span class="o"&gt;(&lt;/span&gt;3, 11, 8&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="o"&gt;[&lt;/span&gt;3, 11, 8&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;find, findIndex&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;fill&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;entries()，keys() and values()&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;let&lt;/span&gt; index of &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;.keys&lt;span class="o"&gt;())&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  console.log&lt;span class="o"&gt;(&lt;/span&gt;index&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
// 0
// 1

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;let&lt;/span&gt; elem of &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;.values&lt;span class="o"&gt;())&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  console.log&lt;span class="o"&gt;(&lt;/span&gt;elem&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
// &lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;
// &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;index, elem&lt;span class="o"&gt;]&lt;/span&gt; of &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;.entries&lt;span class="o"&gt;())&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  console.log&lt;span class="o"&gt;(&lt;/span&gt;index, elem&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
// &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;
// &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;

&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;letter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;entries&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; letter.entries&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
console.log&lt;span class="o"&gt;(&lt;/span&gt;entries.next&lt;span class="o"&gt;()&lt;/span&gt;.value&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // &lt;span class="o"&gt;[&lt;/span&gt;0, &lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
console.log&lt;span class="o"&gt;(&lt;/span&gt;entries.next&lt;span class="o"&gt;()&lt;/span&gt;.value&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // &lt;span class="o"&gt;[&lt;/span&gt;1, &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
console.log&lt;span class="o"&gt;(&lt;/span&gt;entries.next&lt;span class="o"&gt;()&lt;/span&gt;.value&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // &lt;span class="o"&gt;[&lt;/span&gt;2, &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;includes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;flat, flatMap&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;1, 2, &lt;span class="o"&gt;[&lt;/span&gt;3, 4&lt;span class="o"&gt;]]&lt;/span&gt;.flat&lt;span class="o"&gt;()&lt;/span&gt;
// &lt;span class="o"&gt;[&lt;/span&gt;1, 2, 3, 4&lt;span class="o"&gt;]&lt;/span&gt;


&lt;span class="o"&gt;[&lt;/span&gt;2, 3, 4&lt;span class="o"&gt;]&lt;/span&gt;.flatMap&lt;span class="o"&gt;((&lt;/span&gt;x&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt;x, x * 2&lt;span class="o"&gt;])&lt;/span&gt;
// &lt;span class="o"&gt;[&lt;/span&gt;2, 4, 3, 6, 4, 8&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="object"&gt;
&lt;h2&gt;8. &lt;a class="toc-backref" href="#id29"&gt;Object&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="syntax"&gt;
&lt;h3&gt;8.1. &lt;a class="toc-backref" href="#id30"&gt;syntax&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
const &lt;span class="nv"&gt;baz&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;foo&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
baz // &lt;span class="o"&gt;{&lt;/span&gt;foo: &lt;span class="s2"&gt;&amp;quot;bar&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;lastWord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;last word&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
const &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;first word&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;,
  &lt;span class="o"&gt;[&lt;/span&gt;lastWord&lt;span class="o"&gt;]&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;world&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
a&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;first word&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; // &lt;span class="s2"&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;
a&lt;span class="o"&gt;[&lt;/span&gt;lastWord&lt;span class="o"&gt;]&lt;/span&gt; // &lt;span class="s2"&gt;&amp;quot;world&amp;quot;&lt;/span&gt;
a&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;last word&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; // &lt;span class="s2"&gt;&amp;quot;world&amp;quot;&lt;/span&gt;

!!!! Don&lt;span class="s1"&gt;&amp;#39;t use object as a key.&lt;/span&gt;
&lt;span class="s1"&gt;const keyA = {a: 1};&lt;/span&gt;
&lt;span class="s1"&gt;const keyB = {b: 2};&lt;/span&gt;
&lt;span class="s1"&gt;const myObject = {&lt;/span&gt;
&lt;span class="s1"&gt;  [keyA]: &amp;#39;&lt;/span&gt;valueA&lt;span class="s1"&gt;&amp;#39;,&lt;/span&gt;
&lt;span class="s1"&gt;  [keyB]: &amp;#39;&lt;/span&gt;valueB&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
myObject // Object &lt;span class="o"&gt;{[&lt;/span&gt;object Object&lt;span class="o"&gt;]&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;valueB&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="attr"&gt;
&lt;h3&gt;8.2. &lt;a class="toc-backref" href="#id31"&gt;ATTR&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;code&gt;name&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  sayName&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    console.log&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hello!&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;,
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
person.sayName.name   // &lt;span class="s2"&gt;&amp;quot;sayName&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;code&gt;super&lt;/code&gt; (Only in function of an object)&lt;/p&gt;
&lt;p&gt;Point to the prototype.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;proto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  foo: &lt;span class="s1"&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

const &lt;span class="nv"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  foo: &lt;span class="s1"&gt;&amp;#39;world&amp;#39;&lt;/span&gt;,
  find&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; super.foo&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

Object.setPrototypeOf&lt;span class="o"&gt;(&lt;/span&gt;obj, proto&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
obj.find&lt;span class="o"&gt;()&lt;/span&gt; // &lt;span class="s2"&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="operator"&gt;
&lt;h3&gt;8.3. &lt;a class="toc-backref" href="#id32"&gt;Operator&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; a: 3, b: &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; ...z &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
n // &lt;span class="o"&gt;{&lt;/span&gt; a: 3, b: &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; ...&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
foo
// &lt;span class="o"&gt;{&lt;/span&gt;0: &lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;, 1: &lt;span class="s2"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;, 2: &lt;span class="s2"&gt;&amp;quot;c&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;aClone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; ...a &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
// Same as
&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;aClone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Object.assign&lt;span class="o"&gt;({}&lt;/span&gt;, a&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;8.4. &lt;a class="toc-backref" href="#id33"&gt;APIs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;code&gt;Object.is&lt;/code&gt;  same as &lt;code&gt;===&lt;/code&gt; .&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;code&gt;Object.assign&lt;/code&gt;
- Shallow Copy
- Array handle as object&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Object.assign&lt;span class="o"&gt;([&lt;/span&gt;1, 2, 3&lt;span class="o"&gt;]&lt;/span&gt;, &lt;span class="o"&gt;[&lt;/span&gt;4, 5&lt;span class="o"&gt;])&lt;/span&gt;
// &lt;span class="o"&gt;[&lt;/span&gt;4, 5, 3&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;get value and then overwrite&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;code&gt;Object.getOwnPropertyDescriptor&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;set, get special functions.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nb"&gt;source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;set&lt;/span&gt; foo&lt;span class="o"&gt;(&lt;/span&gt;value&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    console.log&lt;span class="o"&gt;(&lt;/span&gt;value&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

const &lt;span class="nv"&gt;target2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
Object.defineProperties&lt;span class="o"&gt;(&lt;/span&gt;target2, Object.getOwnPropertyDescriptors&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
Object.getOwnPropertyDescriptor&lt;span class="o"&gt;(&lt;/span&gt;target2, &lt;span class="s1"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
// &lt;span class="o"&gt;{&lt;/span&gt; get: undefined,
//   set: &lt;span class="o"&gt;[&lt;/span&gt;Function: &lt;span class="nb"&gt;set&lt;/span&gt; foo&lt;span class="o"&gt;]&lt;/span&gt;,
//   enumerable: true,
//   configurable: &lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;code&gt;__proto__ ，Object.setPrototypeOf()，Object.getPrototypeOf()&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;code&gt;Object.keys()，Object.values()，Object.entries()&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;code&gt;Object.fromEntries()&lt;/code&gt; adverse of &lt;code&gt;entries&lt;/code&gt; , from Map to Object.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="symbol"&gt;
&lt;h2&gt;9. &lt;a class="toc-backref" href="#id34"&gt;Symbol&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;9.1. &lt;a class="toc-backref" href="#id35"&gt;Usage&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Object has various attributes which are defined in string. So it is very easy to overwrite them.
Symbol  is unique and is the 7th type of js.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Symbol&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
typeof s
// &lt;span class="s2"&gt;&amp;quot;symbol&amp;quot;&lt;/span&gt;

&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Symbol&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Symbol&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
s1 // Symbol&lt;span class="o"&gt;(&lt;/span&gt;foo&lt;span class="o"&gt;)&lt;/span&gt;
s2 // Symbol&lt;span class="o"&gt;(&lt;/span&gt;bar&lt;span class="o"&gt;)&lt;/span&gt;
s1.toString&lt;span class="o"&gt;()&lt;/span&gt; // &lt;span class="s2"&gt;&amp;quot;Symbol(foo)&amp;quot;&lt;/span&gt;
s2.toString&lt;span class="o"&gt;()&lt;/span&gt; // &lt;span class="s2"&gt;&amp;quot;Symbol(bar)&amp;quot;&lt;/span&gt;

&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Symbol&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Symbol&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; s2 // &lt;span class="nb"&gt;false&lt;/span&gt;
&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Symbol&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Symbol&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; s2 // &lt;span class="nb"&gt;false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Symbol can turn to strings only in explicit way.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;9.2. &lt;a class="toc-backref" href="#id36"&gt;Iteration&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When we use Symbol as an attribute, then , it won't appear in iterations.
- &lt;code&gt;for...in&lt;/code&gt;
- &lt;code&gt;for...of&lt;/code&gt;
- &lt;code&gt;Object.keys()&lt;/code&gt;
- &lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt;
- &lt;code&gt;JSON.stringify()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;We can get these attributes with &lt;code&gt;Object.getOwnPropertySymbols&lt;/code&gt; .&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;9.3. &lt;a class="toc-backref" href="#id37"&gt;APIs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Symbol.for (create or get)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Symbol.for&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Symbol.for&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nv"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; s2 // &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Symbol.keyFor&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Symbol.for&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
Symbol.keyFor&lt;span class="o"&gt;(&lt;/span&gt;s1&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="s2"&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;

&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Symbol&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
Symbol.keyFor&lt;span class="o"&gt;(&lt;/span&gt;s2&lt;span class="o"&gt;)&lt;/span&gt; // undefined
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="set-and-map"&gt;
&lt;h2&gt;10. &lt;a class="toc-backref" href="#id38"&gt;Set and  Map&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="set"&gt;
&lt;h3&gt;10.1. &lt;a class="toc-backref" href="#id39"&gt;Set&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; new Set&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;2, 3, 5, 4, 5, 2, 2&lt;span class="o"&gt;]&lt;/span&gt;.forEach&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; s.add&lt;span class="o"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;let&lt;/span&gt; i of s&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  console.log&lt;span class="o"&gt;(&lt;/span&gt;i&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
// &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt; 4

const &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; new Set&lt;span class="o"&gt;([&lt;/span&gt;1, 2, 3, 4, 4&lt;span class="o"&gt;])&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;...set&lt;span class="o"&gt;]&lt;/span&gt;
// &lt;span class="o"&gt;[&lt;/span&gt;1, 2, 3, 4&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;size&lt;/li&gt;
&lt;li&gt;add()&lt;/li&gt;
&lt;li&gt;delete()&lt;/li&gt;
&lt;li&gt;has()&lt;/li&gt;
&lt;li&gt;clear()&lt;/li&gt;
&lt;li&gt;keys()&lt;/li&gt;
&lt;li&gt;values()&lt;/li&gt;
&lt;li&gt;entries()&lt;/li&gt;
&lt;li&gt;forEach()&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="map"&gt;
&lt;h3&gt;10.2. &lt;a class="toc-backref" href="#id40"&gt;Map&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Hash Key Value.
But, we can add everything as a key.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; new Map&lt;span class="o"&gt;([&lt;/span&gt;
  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;张三&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;,
  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;title&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;Author&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;])&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
map.size // 2
map.has&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="nb"&gt;true&lt;/span&gt;
map.get&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="s2"&gt;&amp;quot;张三&amp;quot;&lt;/span&gt;
map.has&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="nb"&gt;true&lt;/span&gt;
map.get&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="s2"&gt;&amp;quot;Author&amp;quot;&lt;/span&gt;

const &lt;span class="nv"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;
  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;张三&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;,
  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;title&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;Author&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
const &lt;span class="nv"&gt;map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; new Map&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
items.forEach&lt;span class="o"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;([&lt;/span&gt;key, value&lt;span class="o"&gt;])&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; map.set&lt;span class="o"&gt;(&lt;/span&gt;key, value&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;size&lt;/li&gt;
&lt;li&gt;add()&lt;/li&gt;
&lt;li&gt;delete()&lt;/li&gt;
&lt;li&gt;has()&lt;/li&gt;
&lt;li&gt;clear()&lt;/li&gt;
&lt;li&gt;keys()&lt;/li&gt;
&lt;li&gt;values()&lt;/li&gt;
&lt;li&gt;entries()&lt;/li&gt;
&lt;li&gt;forEach()&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="proxy"&gt;
&lt;h2&gt;11. &lt;a class="toc-backref" href="#id41"&gt;Proxy&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;meta programming, which can change language.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;var &lt;span class="nv"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; new Proxy&lt;span class="o"&gt;({}&lt;/span&gt;, &lt;span class="o"&gt;{&lt;/span&gt;
  get: &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;target, key, receiver&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    console.log&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;getting &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;key&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;!&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; Reflect.get&lt;span class="o"&gt;(&lt;/span&gt;target, key, receiver&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;,
  set: &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;target, key, value, receiver&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    console.log&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;setting &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;key&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;!&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; Reflect.set&lt;span class="o"&gt;(&lt;/span&gt;target, key, value, receiver&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
obj.count &lt;span class="o"&gt;=&lt;/span&gt; 1
//  setting count!
++obj.count
//  getting count!
//  setting count!
//  2
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="proxy-actions-supoorted"&gt;
&lt;h3&gt;11.1. &lt;a class="toc-backref" href="#id42"&gt;Proxy Actions Supoorted&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;get(target, propKey, receiver)&lt;/li&gt;
&lt;li&gt;set(target, propKey, value, receiver)&lt;/li&gt;
&lt;li&gt;has(target, propKey)&lt;/li&gt;
&lt;li&gt;deleteProperty(target, propKey)&lt;/li&gt;
&lt;li&gt;ownKeys(target)&lt;/li&gt;
&lt;li&gt;getOwnPropertyDescriptor(target, propKey)&lt;/li&gt;
&lt;li&gt;defineProperty(target, propKey, propDesc)&lt;/li&gt;
&lt;li&gt;preventExtensions(target)&lt;/li&gt;
&lt;li&gt;getPrototypeOf(target)&lt;/li&gt;
&lt;li&gt;isExtensible(target)&lt;/li&gt;
&lt;li&gt;setPrototypeOf(target, proto)&lt;/li&gt;
&lt;li&gt;apply(target, object, args)&lt;/li&gt;
&lt;li&gt;construct(target, args)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="proxy-revocable"&gt;
&lt;h3&gt;11.2. &lt;a class="toc-backref" href="#id43"&gt;Proxy.revocable&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Stop proxy.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;target&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;proxy, revoke&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Proxy.revocable&lt;span class="o"&gt;(&lt;/span&gt;target, handler&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

proxy.foo &lt;span class="o"&gt;=&lt;/span&gt; 123&lt;span class="p"&gt;;&lt;/span&gt;
proxy.foo // 123

revoke&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
proxy.foo // TypeError: Revoked
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="this"&gt;
&lt;h3&gt;11.3. &lt;a class="toc-backref" href="#id44"&gt;This&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This will point to Proxy itself.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;target&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  m: &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    console.log&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;this&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; proxy&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
const &lt;span class="nv"&gt;handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

const &lt;span class="nv"&gt;proxy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; new Proxy&lt;span class="o"&gt;(&lt;/span&gt;target, handler&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

target.m&lt;span class="o"&gt;()&lt;/span&gt; // &lt;span class="nb"&gt;false&lt;/span&gt;
proxy.m&lt;span class="o"&gt;()&lt;/span&gt;  // &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="reflect"&gt;
&lt;h2&gt;12. &lt;a class="toc-backref" href="#id45"&gt;Reflect&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Why:
- Move some Object internal functions to Reflect
- Refine some APIs that Object provides
- Make all actions become functions (name in object =&amp;gt; has() )
- Reflect and Proxy Combination&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Proxy&lt;span class="o"&gt;(&lt;/span&gt;target, &lt;span class="o"&gt;{&lt;/span&gt;
  set: &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;target, name, value, receiver&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    var &lt;span class="nv"&gt;success&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Reflect.set&lt;span class="o"&gt;(&lt;/span&gt;target,name, value, receiver&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;success&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      console.log&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;property &amp;#39;&lt;/span&gt; + name + &lt;span class="s1"&gt;&amp;#39; on &amp;#39;&lt;/span&gt; + target + &lt;span class="s1"&gt;&amp;#39; set to &amp;#39;&lt;/span&gt; + value&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; success&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Methods:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Reflect.apply(target, thisArg, args)&lt;/li&gt;
&lt;li&gt;Reflect.construct(target, args)&lt;/li&gt;
&lt;li&gt;Reflect.get(target, name, receiver)&lt;/li&gt;
&lt;li&gt;Reflect.set(target, name, value, receiver)&lt;/li&gt;
&lt;li&gt;Reflect.defineProperty(target, name, desc)&lt;/li&gt;
&lt;li&gt;Reflect.deleteProperty(target, name)&lt;/li&gt;
&lt;li&gt;Reflect.has(target, name)&lt;/li&gt;
&lt;li&gt;Reflect.ownKeys(target)&lt;/li&gt;
&lt;li&gt;Reflect.isExtensible(target)&lt;/li&gt;
&lt;li&gt;Reflect.preventExtensions(target)&lt;/li&gt;
&lt;li&gt;Reflect.getOwnPropertyDescriptor(target, name)&lt;/li&gt;
&lt;li&gt;Reflect.getPrototypeOf(target)&lt;/li&gt;
&lt;li&gt;Reflect.setPrototypeOf(target, prototype)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="promises"&gt;
&lt;h2&gt;13. &lt;a class="toc-backref" href="#id46"&gt;Promises&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;3 States:
- pending
- fulfilled (resolved)
- rejected&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;promise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; new Promise&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;resolve, reject&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  // ... some code

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;success&lt;span class="o"&gt;){&lt;/span&gt;
    resolve&lt;span class="o"&gt;(&lt;/span&gt;value&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    reject&lt;span class="o"&gt;(&lt;/span&gt;error&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once created, it will run.
Resolve and Reject cannot terminate Promise. So, always add return.&lt;/p&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;13.1. &lt;a class="toc-backref" href="#id47"&gt;APIs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;then&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;getJSON&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/post/1.json&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;.then&lt;span class="o"&gt;(&lt;/span&gt;
  &lt;span class="nv"&gt;post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; getJSON&lt;span class="o"&gt;(&lt;/span&gt;post.commentURL&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;)&lt;/span&gt;.then&lt;span class="o"&gt;(&lt;/span&gt;
  &lt;span class="nv"&gt;comments&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; console.log&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;resolved: &amp;quot;&lt;/span&gt;, comments&lt;span class="o"&gt;)&lt;/span&gt;,
  &lt;span class="nv"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; console.log&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rejected: &amp;quot;&lt;/span&gt;, err&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;catch&lt;/p&gt;
&lt;p&gt;Alias of &lt;code&gt;.then(null, rejection)&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;then can append after catch as catch itself will return a promise.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;finally&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;promise
.then&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;···&lt;span class="o"&gt;})&lt;/span&gt;
.catch&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;···&lt;span class="o"&gt;})&lt;/span&gt;
.finally&lt;span class="o"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;···&lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;all&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;promises&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;2, 3, 5, 7, 11, 13&lt;span class="o"&gt;]&lt;/span&gt;.map&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;id&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; getJSON&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/post/&amp;#39;&lt;/span&gt; + id + &lt;span class="s2"&gt;&amp;quot;.json&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

Promise.all&lt;span class="o"&gt;(&lt;/span&gt;promises&lt;span class="o"&gt;)&lt;/span&gt;.then&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;posts&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  // ...
&lt;span class="o"&gt;})&lt;/span&gt;.catch&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;reason&lt;span class="o"&gt;){&lt;/span&gt;
  // ...
&lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;race&lt;/p&gt;
&lt;p&gt;Only one promise needs to be finished.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Promise.race&lt;span class="o"&gt;([&lt;/span&gt;
  fetch&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/resource-that-may-take-a-while&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;,
  new Promise&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;resolve, reject&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    setTimeout&lt;span class="o"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; reject&lt;span class="o"&gt;(&lt;/span&gt;new Error&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;request timeout&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt;, 5000&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="o"&gt;})&lt;/span&gt;
&lt;span class="o"&gt;])&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

p
.then&lt;span class="o"&gt;(&lt;/span&gt;console.log&lt;span class="o"&gt;)&lt;/span&gt;
.catch&lt;span class="o"&gt;(&lt;/span&gt;console.error&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;resolve&lt;/p&gt;
&lt;p&gt;Turn an object to a Promise object&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;jsPromise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Promise.resolve&lt;span class="o"&gt;(&lt;/span&gt;$.ajax&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/whatever.json&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;reject&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Promise.reject&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;wrong&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
// same
const &lt;span class="nv"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; new Promise&lt;span class="o"&gt;((&lt;/span&gt;resolve, reject&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; reject&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;wrong&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt;

p.then&lt;span class="o"&gt;(&lt;/span&gt;null, &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  console.log&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="iterator"&gt;
&lt;h2&gt;14. &lt;a class="toc-backref" href="#id48"&gt;Iterator&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If a data structure has &lt;code&gt;Symbol.iterator&lt;/code&gt; attribute, then it is iterable.
And we can use &lt;code&gt;for...of&lt;/code&gt; to iterate it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="o"&gt;[&lt;/span&gt;Symbol.iterator&lt;span class="o"&gt;]&lt;/span&gt; : &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      next: &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
          value: 1,
          &lt;span class="k"&gt;done&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Native iterable objects:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Array&lt;/li&gt;
&lt;li&gt;Map&lt;/li&gt;
&lt;li&gt;Set&lt;/li&gt;
&lt;li&gt;String&lt;/li&gt;
&lt;li&gt;TypedArray&lt;/li&gt;
&lt;li&gt;arguments object in function&lt;/li&gt;
&lt;li&gt;NodeList&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sample:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;iter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; arr&lt;span class="o"&gt;[&lt;/span&gt;Symbol.iterator&lt;span class="o"&gt;]()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

iter.next&lt;span class="o"&gt;()&lt;/span&gt; // &lt;span class="o"&gt;{&lt;/span&gt; value: &lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, &lt;span class="k"&gt;done&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
iter.next&lt;span class="o"&gt;()&lt;/span&gt; // &lt;span class="o"&gt;{&lt;/span&gt; value: &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;, &lt;span class="k"&gt;done&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
iter.next&lt;span class="o"&gt;()&lt;/span&gt; // &lt;span class="o"&gt;{&lt;/span&gt; value: &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;, &lt;span class="k"&gt;done&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
iter.next&lt;span class="o"&gt;()&lt;/span&gt; // &lt;span class="o"&gt;{&lt;/span&gt; value: undefined, &lt;span class="k"&gt;done&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When we use it?
- destruct and assign&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; new Set&lt;span class="o"&gt;()&lt;/span&gt;.add&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;.add&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;.add&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;x,y&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; set&lt;span class="p"&gt;;&lt;/span&gt;
// &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;

&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;first, ...rest&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; set&lt;span class="p"&gt;;&lt;/span&gt;
// &lt;span class="nv"&gt;first&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;rest&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;,&lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;expand operator &lt;code&gt;...&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;code&gt;yield*&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;generator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;* &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  yield 1&lt;span class="p"&gt;;&lt;/span&gt;
  yield* &lt;span class="o"&gt;[&lt;/span&gt;2,3,4&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  yield 5&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

var &lt;span class="nv"&gt;iterator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; generator&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

iterator.next&lt;span class="o"&gt;()&lt;/span&gt; // &lt;span class="o"&gt;{&lt;/span&gt; value: 1, &lt;span class="k"&gt;done&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
iterator.next&lt;span class="o"&gt;()&lt;/span&gt; // &lt;span class="o"&gt;{&lt;/span&gt; value: 2, &lt;span class="k"&gt;done&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
iterator.next&lt;span class="o"&gt;()&lt;/span&gt; // &lt;span class="o"&gt;{&lt;/span&gt; value: 3, &lt;span class="k"&gt;done&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
iterator.next&lt;span class="o"&gt;()&lt;/span&gt; // &lt;span class="o"&gt;{&lt;/span&gt; value: 4, &lt;span class="k"&gt;done&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
iterator.next&lt;span class="o"&gt;()&lt;/span&gt; // &lt;span class="o"&gt;{&lt;/span&gt; value: 5, &lt;span class="k"&gt;done&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
iterator.next&lt;span class="o"&gt;()&lt;/span&gt; // &lt;span class="o"&gt;{&lt;/span&gt; value: undefined, &lt;span class="k"&gt;done&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="generator"&gt;
&lt;h2&gt;15. &lt;a class="toc-backref" href="#id49"&gt;Generator&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;State Machine.
- A &lt;code&gt;*&lt;/code&gt; between &lt;code&gt;function&lt;/code&gt; and name.
- use &lt;code&gt;yeild&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;When we call generator, it doesn't run. Instead, it return  a pointer to internal content.&lt;/p&gt;
&lt;p&gt;We should call &lt;code&gt;next&lt;/code&gt; to get next state.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;* helloWorldGenerator&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  yield &lt;span class="s1"&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  yield &lt;span class="s1"&gt;&amp;#39;world&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ending&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
var &lt;span class="nv"&gt;hw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; helloWorldGenerator&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

hw.next&lt;span class="o"&gt;()&lt;/span&gt;
// &lt;span class="o"&gt;{&lt;/span&gt; value: &lt;span class="s1"&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;, &lt;span class="k"&gt;done&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
hw.next&lt;span class="o"&gt;()&lt;/span&gt;
// &lt;span class="o"&gt;{&lt;/span&gt; value: &lt;span class="s1"&gt;&amp;#39;world&amp;#39;&lt;/span&gt;, &lt;span class="k"&gt;done&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
hw.next&lt;span class="o"&gt;()&lt;/span&gt;
// &lt;span class="o"&gt;{&lt;/span&gt; value: &lt;span class="s1"&gt;&amp;#39;ending&amp;#39;&lt;/span&gt;, &lt;span class="k"&gt;done&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
hw.next&lt;span class="o"&gt;()&lt;/span&gt;
// &lt;span class="o"&gt;{&lt;/span&gt; value: undefined, &lt;span class="k"&gt;done&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Legal syntax:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; * foo&lt;span class="o"&gt;(&lt;/span&gt;x, y&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; ··· &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; *foo&lt;span class="o"&gt;(&lt;/span&gt;x, y&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; ··· &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt;* foo&lt;span class="o"&gt;(&lt;/span&gt;x, y&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; ··· &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt;*foo&lt;span class="o"&gt;(&lt;/span&gt;x, y&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; ··· &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A parameter can be added to next function. And this value will be regarded as the previous yeild value.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;* f&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;var &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0&lt;span class="p"&gt;;&lt;/span&gt; true&lt;span class="p"&gt;;&lt;/span&gt; i++&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    var &lt;span class="nv"&gt;reset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; yield i&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;reset&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; -1&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
var &lt;span class="nv"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; f&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
g.next&lt;span class="o"&gt;()&lt;/span&gt; // &lt;span class="o"&gt;{&lt;/span&gt; value: 0, &lt;span class="k"&gt;done&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
g.next&lt;span class="o"&gt;()&lt;/span&gt; // &lt;span class="o"&gt;{&lt;/span&gt; value: 1, &lt;span class="k"&gt;done&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
g.next&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="o"&gt;{&lt;/span&gt; value: 0, &lt;span class="k"&gt;done&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Complex:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;* foo&lt;span class="o"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  var &lt;span class="nv"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; * &lt;span class="o"&gt;(&lt;/span&gt;yield &lt;span class="o"&gt;(&lt;/span&gt;x + 1&lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  var &lt;span class="nv"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; yield &lt;span class="o"&gt;(&lt;/span&gt;y / 3&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;x + y + z&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

var &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; foo&lt;span class="o"&gt;(&lt;/span&gt;5&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
a.next&lt;span class="o"&gt;()&lt;/span&gt; // Object&lt;span class="o"&gt;{&lt;/span&gt;value:6, &lt;span class="k"&gt;done&lt;/span&gt;:false&lt;span class="o"&gt;}&lt;/span&gt;
a.next&lt;span class="o"&gt;()&lt;/span&gt; // Object&lt;span class="o"&gt;{&lt;/span&gt;value:NaN, &lt;span class="k"&gt;done&lt;/span&gt;:false&lt;span class="o"&gt;}&lt;/span&gt;
a.next&lt;span class="o"&gt;()&lt;/span&gt; // Object&lt;span class="o"&gt;{&lt;/span&gt;value:NaN, &lt;span class="k"&gt;done&lt;/span&gt;:true&lt;span class="o"&gt;}&lt;/span&gt;

var &lt;span class="nv"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; foo&lt;span class="o"&gt;(&lt;/span&gt;5&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
b.next&lt;span class="o"&gt;()&lt;/span&gt; // &lt;span class="o"&gt;{&lt;/span&gt; value:6, &lt;span class="k"&gt;done&lt;/span&gt;:false &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 5
b.next&lt;span class="o"&gt;(&lt;/span&gt;12&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="o"&gt;{&lt;/span&gt; value:8, &lt;span class="k"&gt;done&lt;/span&gt;:false &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="nv"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 2*12, &lt;span class="nv"&gt;yield&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 24/3 &lt;span class="o"&gt;=&lt;/span&gt; 8
b.next&lt;span class="o"&gt;(&lt;/span&gt;13&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="o"&gt;{&lt;/span&gt; value:42, &lt;span class="k"&gt;done&lt;/span&gt;:true &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="nv"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 13, so 5+ &lt;span class="m"&gt;24&lt;/span&gt; + &lt;span class="nv"&gt;13&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 42
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;* numbers &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  yield 1
  yield 2
  &lt;span class="k"&gt;return&lt;/span&gt; 3
  yield 4
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;...numbers&lt;span class="o"&gt;()]&lt;/span&gt; // &lt;span class="o"&gt;[&lt;/span&gt;1, 2&lt;span class="o"&gt;]&lt;/span&gt;

Array.from&lt;span class="o"&gt;(&lt;/span&gt;numbers&lt;span class="o"&gt;())&lt;/span&gt; // &lt;span class="o"&gt;[&lt;/span&gt;1, 2&lt;span class="o"&gt;]&lt;/span&gt;

&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;x, y&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; numbers&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
x // 1
y // 2

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;let&lt;/span&gt; n of numbers&lt;span class="o"&gt;())&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  console.log&lt;span class="o"&gt;(&lt;/span&gt;n&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
// 1
// 2
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;throw&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;var &lt;span class="nv"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;* &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  try &lt;span class="o"&gt;{&lt;/span&gt;
    yield&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt; catch &lt;span class="o"&gt;(&lt;/span&gt;e&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    console.log&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Internal&amp;#39;&lt;/span&gt;, e&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

var &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; g&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
i.next&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

try &lt;span class="o"&gt;{&lt;/span&gt;
  i.throw&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  i.throw&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt; catch &lt;span class="o"&gt;(&lt;/span&gt;e&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  console.log&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;External&amp;#39;&lt;/span&gt;, e&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
// Internal a
// External b
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;return&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;terminate iteration.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;* gen&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  yield 1&lt;span class="p"&gt;;&lt;/span&gt;
  yield 2&lt;span class="p"&gt;;&lt;/span&gt;
  yield 3&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

var &lt;span class="nv"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; gen&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

g.next&lt;span class="o"&gt;()&lt;/span&gt;        // &lt;span class="o"&gt;{&lt;/span&gt; value: 1, &lt;span class="k"&gt;done&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
g.return&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="o"&gt;{&lt;/span&gt; value: &lt;span class="s2"&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;, &lt;span class="k"&gt;done&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
g.next&lt;span class="o"&gt;()&lt;/span&gt;        // &lt;span class="o"&gt;{&lt;/span&gt; value: undefined, &lt;span class="k"&gt;done&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;code&gt;yield *&lt;/code&gt; : call another generator&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;* bar&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  yield &lt;span class="s1"&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  yield* foo&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  yield &lt;span class="s1"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;generator function as an object attribution&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  * myGeneratorMethod&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    ···
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  myGeneratorMethod: &lt;span class="k"&gt;function&lt;/span&gt;* &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    // ···
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="class"&gt;
&lt;h2&gt;16. &lt;a class="toc-backref" href="#id50"&gt;Class&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Old&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; Point&lt;span class="o"&gt;(&lt;/span&gt;x, y&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  this.x &lt;span class="o"&gt;=&lt;/span&gt; x&lt;span class="p"&gt;;&lt;/span&gt;
  this.y &lt;span class="o"&gt;=&lt;/span&gt; y&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
Point.prototype.toString &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;(&amp;#39;&lt;/span&gt; + this.x + &lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt; + this.y + &lt;span class="s1"&gt;&amp;#39;)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
var &lt;span class="nv"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; new Point&lt;span class="o"&gt;(&lt;/span&gt;1, 2&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;# New&lt;/span&gt;
class Point &lt;span class="o"&gt;{&lt;/span&gt;
  constructor&lt;span class="o"&gt;(&lt;/span&gt;x, y&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    this.x &lt;span class="o"&gt;=&lt;/span&gt; x&lt;span class="p"&gt;;&lt;/span&gt;
    this.y &lt;span class="o"&gt;=&lt;/span&gt; y&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
  toString&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;(&amp;#39;&lt;/span&gt; + this.x + &lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt; + this.y + &lt;span class="s1"&gt;&amp;#39;)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="class-specials"&gt;
&lt;h3&gt;16.1. &lt;a class="toc-backref" href="#id51"&gt;class specials&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;constructor&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;getter and setter&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;class MyClass &lt;span class="o"&gt;{&lt;/span&gt;
  constructor&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    // ...
  &lt;span class="o"&gt;}&lt;/span&gt;
  get prop&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;getter&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="nb"&gt;set&lt;/span&gt; prop&lt;span class="o"&gt;(&lt;/span&gt;value&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    console.log&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;setter: &amp;#39;&lt;/span&gt;+value&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;inst&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; new MyClass&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
inst.prop &lt;span class="o"&gt;=&lt;/span&gt; 123&lt;span class="p"&gt;;&lt;/span&gt;
// setter: 123
inst.prop
// &lt;span class="s1"&gt;&amp;#39;getter&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Another form&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;MyClass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; class Me &lt;span class="o"&gt;{&lt;/span&gt;
  getClassName&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; Me.name&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;inst&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; new MyClass&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
inst.getClassName&lt;span class="o"&gt;()&lt;/span&gt; // Me
Me.name // ReferenceError: Me is not defined
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="warnings"&gt;
&lt;h3&gt;16.2. &lt;a class="toc-backref" href="#id52"&gt;Warnings&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;default use strict&lt;/li&gt;
&lt;li&gt;class will not hoist, move definition to the top.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="static"&gt;
&lt;h3&gt;16.3. &lt;a class="toc-backref" href="#id53"&gt;Static&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;class Foo &lt;span class="o"&gt;{&lt;/span&gt;
  static classMethod&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
Foo.classMethod&lt;span class="o"&gt;()&lt;/span&gt; // &lt;span class="s1"&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;

var &lt;span class="nv"&gt;foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; new Foo&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
foo.classMethod&lt;span class="o"&gt;()&lt;/span&gt;
// TypeError: foo.classMethod is not a &lt;span class="k"&gt;function&lt;/span&gt;


class Foo &lt;span class="o"&gt;{&lt;/span&gt;
  static classMethod&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
class Bar extends Foo &lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
Bar.classMethod&lt;span class="o"&gt;()&lt;/span&gt; // &lt;span class="s1"&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;

class Foo &lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

Foo.prop &lt;span class="o"&gt;=&lt;/span&gt; 1&lt;span class="p"&gt;;&lt;/span&gt;
Foo.prop // 1
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="attrs"&gt;
&lt;h3&gt;16.4. &lt;a class="toc-backref" href="#id54"&gt;attrs&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;class IncreasingCounter &lt;span class="o"&gt;{&lt;/span&gt;
  constructor&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    this._count &lt;span class="o"&gt;=&lt;/span&gt; 0&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
  get value&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    console.log&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Getting the current value!&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; this._count&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
  increment&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    this._count++&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

// same
class IncreasingCounter &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nv"&gt;_count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0&lt;span class="p"&gt;;&lt;/span&gt;
  get value&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    console.log&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Getting the current value!&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; this._count&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
  increment&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    this._count++&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="private-variables-and-attrs"&gt;
&lt;h3&gt;16.5. &lt;a class="toc-backref" href="#id55"&gt;private variables and attrs&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;class Widget &lt;span class="o"&gt;{&lt;/span&gt;
  // public
  foo &lt;span class="o"&gt;(&lt;/span&gt;baz&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    this._bar&lt;span class="o"&gt;(&lt;/span&gt;baz&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
  // private
  _bar&lt;span class="o"&gt;(&lt;/span&gt;baz&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; this.snaf &lt;span class="o"&gt;=&lt;/span&gt; baz&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
  // ...
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And we can use symbol. But it is a little strange.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;bar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Symbol&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
const &lt;span class="nv"&gt;snaf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Symbol&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;snaf&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nb"&gt;export&lt;/span&gt; default class myClass&lt;span class="o"&gt;{&lt;/span&gt;
  // public
  foo&lt;span class="o"&gt;(&lt;/span&gt;baz&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    this&lt;span class="o"&gt;[&lt;/span&gt;bar&lt;span class="o"&gt;](&lt;/span&gt;baz&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
  // private
  &lt;span class="o"&gt;[&lt;/span&gt;bar&lt;span class="o"&gt;](&lt;/span&gt;baz&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; this&lt;span class="o"&gt;[&lt;/span&gt;snaf&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; baz&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
  // ...
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="new-target"&gt;
&lt;h3&gt;16.6. &lt;a class="toc-backref" href="#id56"&gt;new.target&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Constructor or copy-constructor&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; Person&lt;span class="o"&gt;(&lt;/span&gt;name&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;new.target !&lt;span class="o"&gt;==&lt;/span&gt; undefined&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    this.name &lt;span class="o"&gt;=&lt;/span&gt; name&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    throw new Error&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;must use new &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
// or
&lt;span class="k"&gt;function&lt;/span&gt; Person&lt;span class="o"&gt;(&lt;/span&gt;name&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;new.target &lt;span class="o"&gt;===&lt;/span&gt; Person&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    this.name &lt;span class="o"&gt;=&lt;/span&gt; name&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    throw new Error&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;must use new &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

var &lt;span class="nv"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; new Person&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // correct
var &lt;span class="nv"&gt;notAPerson&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Person.call&lt;span class="o"&gt;(&lt;/span&gt;person, &lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  // error
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In a derived class, new.target will return derived class.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="extends"&gt;
&lt;h3&gt;16.7. &lt;a class="toc-backref" href="#id57"&gt;extends&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;super must be called to initialize parent instance.
And this can be used after super.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;class Point &lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
class ColorPoint extends Point &lt;span class="o"&gt;{&lt;/span&gt;
  constructor&lt;span class="o"&gt;(&lt;/span&gt;x, y, color&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    super&lt;span class="o"&gt;(&lt;/span&gt;x, y&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // 调用父类的constructor&lt;span class="o"&gt;(&lt;/span&gt;x, y&lt;span class="o"&gt;)&lt;/span&gt;
    this.color &lt;span class="o"&gt;=&lt;/span&gt; color&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  toString&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; this.color + &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt; + super.toString&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // 调用父类的toString&lt;span class="o"&gt;()&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;if constructor is not defined, then:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;class ColorPoint extends Point &lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
// same
class ColorPoint extends Point &lt;span class="o"&gt;{&lt;/span&gt;
  constructor&lt;span class="o"&gt;(&lt;/span&gt;...args&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    super&lt;span class="o"&gt;(&lt;/span&gt;...args&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="super"&gt;
&lt;h3&gt;16.8. &lt;a class="toc-backref" href="#id58"&gt;super&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;when we use super as an object, that means we are using &lt;code&gt;Parent.prototype&lt;/code&gt; .&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;class A &lt;span class="o"&gt;{&lt;/span&gt;
  constructor&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    this.p &lt;span class="o"&gt;=&lt;/span&gt; 2&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
class B extends A &lt;span class="o"&gt;{&lt;/span&gt;
  get m&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; super.p&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; new B&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
b.m // undefined
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Child class calls parent class functions, &lt;code&gt;this&lt;/code&gt; represents Child class.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;class A &lt;span class="o"&gt;{&lt;/span&gt;
  constructor&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    this.x &lt;span class="o"&gt;=&lt;/span&gt; 1&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
  print&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    console.log&lt;span class="o"&gt;(&lt;/span&gt;this.x&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
class B extends A &lt;span class="o"&gt;{&lt;/span&gt;
  constructor&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    super&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    this.x &lt;span class="o"&gt;=&lt;/span&gt; 2&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
  m&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    super.print&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; new B&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
b.m&lt;span class="o"&gt;()&lt;/span&gt; // 2
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;In Child, if we assign super a value (&lt;code&gt;super.x = 3;&lt;/code&gt; ), then we are also using child itself.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;class A &lt;span class="o"&gt;{&lt;/span&gt;
  constructor&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    this.x &lt;span class="o"&gt;=&lt;/span&gt; 1&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
class B extends A &lt;span class="o"&gt;{&lt;/span&gt;
  constructor&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    super&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    this.x &lt;span class="o"&gt;=&lt;/span&gt; 2&lt;span class="p"&gt;;&lt;/span&gt;
    super.x &lt;span class="o"&gt;=&lt;/span&gt; 3&lt;span class="p"&gt;;&lt;/span&gt;
    console.log&lt;span class="o"&gt;(&lt;/span&gt;super.x&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // undefined
    console.log&lt;span class="o"&gt;(&lt;/span&gt;this.x&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // 3
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; new B&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;in static methods, super means parent.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;class Parent &lt;span class="o"&gt;{&lt;/span&gt;
  static myMethod&lt;span class="o"&gt;(&lt;/span&gt;msg&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    console.log&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;static&amp;#39;&lt;/span&gt;, msg&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  myMethod&lt;span class="o"&gt;(&lt;/span&gt;msg&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    console.log&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;instance&amp;#39;&lt;/span&gt;, msg&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

class Child extends Parent &lt;span class="o"&gt;{&lt;/span&gt;
  static myMethod&lt;span class="o"&gt;(&lt;/span&gt;msg&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    super.myMethod&lt;span class="o"&gt;(&lt;/span&gt;msg&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  myMethod&lt;span class="o"&gt;(&lt;/span&gt;msg&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    super.myMethod&lt;span class="o"&gt;(&lt;/span&gt;msg&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

Child.myMethod&lt;span class="o"&gt;(&lt;/span&gt;1&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // static 1

var &lt;span class="nv"&gt;child&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; new Child&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
child.myMethod&lt;span class="o"&gt;(&lt;/span&gt;2&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // instance 2
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="prototype-and-proto"&gt;
&lt;h3&gt;16.9. &lt;a class="toc-backref" href="#id59"&gt;prototype and __proto__&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;class A &lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
class B extends A &lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
B.__proto__ &lt;span class="o"&gt;===&lt;/span&gt; A // &lt;span class="nb"&gt;true&lt;/span&gt;
B.prototype.__proto__ &lt;span class="o"&gt;===&lt;/span&gt; A.prototype // &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="decorator"&gt;
&lt;h2&gt;17. &lt;a class="toc-backref" href="#id60"&gt;Decorator&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Class Decorator&lt;/p&gt;
&lt;p&gt;Python like.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;@testable
class MyTestableClass &lt;span class="o"&gt;{&lt;/span&gt;
  // ...
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; testable&lt;span class="o"&gt;(&lt;/span&gt;target&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  target.isTestable &lt;span class="o"&gt;=&lt;/span&gt; true&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
MyTestableClass.isTestable // &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Class Function Decorator&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;class Person &lt;span class="o"&gt;{&lt;/span&gt;
  @readonly
  name&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.first&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.last&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Can't apply to pure function
Because function will hoist.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;var &lt;span class="nv"&gt;readOnly&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;some-decorator&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
@readOnly
&lt;span class="k"&gt;function&lt;/span&gt; foo&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# same&lt;/span&gt;

var readOnly&lt;span class="p"&gt;;&lt;/span&gt;
@readOnly
&lt;span class="k"&gt;function&lt;/span&gt; foo&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;readOnly&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;some-decorator&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="module"&gt;
&lt;h2&gt;18. &lt;a class="toc-backref" href="#id61"&gt;Module&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;CommonJS&lt;/code&gt; : backend
&lt;code&gt;AMD&lt;/code&gt; : UI&lt;/p&gt;
&lt;p&gt;Both CommonJS and AMD are dynamic.
But ES6 &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt; are static.&lt;/p&gt;
&lt;div class="section" id="export"&gt;
&lt;h3&gt;18.1. &lt;a class="toc-backref" href="#id62"&gt;export&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; var &lt;span class="nv"&gt;lastName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Jackson&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; multiply&lt;span class="o"&gt;(&lt;/span&gt;x, y&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; x * y&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; v1&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; ... &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; v2&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; ... &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  v1 as streamV1,
  v2 as streamV2,
  v2 as streamLatestVersion
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="import"&gt;
&lt;h3&gt;18.2. &lt;a class="toc-backref" href="#id63"&gt;import&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Read only.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;import &lt;span class="o"&gt;{&lt;/span&gt;firstName, lastName, year&lt;span class="o"&gt;}&lt;/span&gt; from &lt;span class="s1"&gt;&amp;#39;./profile.js&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
import &lt;span class="o"&gt;{&lt;/span&gt; lastName as surname &lt;span class="o"&gt;}&lt;/span&gt; from &lt;span class="s1"&gt;&amp;#39;./profile.js&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;import&lt;/code&gt; will be lifetd to the top of a file.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="export-default"&gt;
&lt;h3&gt;18.3. &lt;a class="toc-backref" href="#id64"&gt;export default&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; default &lt;span class="k"&gt;function&lt;/span&gt; crc32&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  // ...
&lt;span class="o"&gt;}&lt;/span&gt;
import crc32 from &lt;span class="s1"&gt;&amp;#39;crc32&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; crc32&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  // ...
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

import &lt;span class="o"&gt;{&lt;/span&gt;crc32&lt;span class="o"&gt;}&lt;/span&gt; from &lt;span class="s1"&gt;&amp;#39;crc32&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

import _, &lt;span class="o"&gt;{&lt;/span&gt; each, forEach &lt;span class="o"&gt;}&lt;/span&gt; from &lt;span class="s1"&gt;&amp;#39;lodash&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using defualt will make the module in a single package.&lt;/p&gt;
&lt;p&gt;Constants in different modules:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;// constants.js 模块
&lt;span class="nb"&gt;export&lt;/span&gt; const &lt;span class="nv"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 1&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; const &lt;span class="nv"&gt;B&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 3&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; const &lt;span class="nv"&gt;C&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 4&lt;span class="p"&gt;;&lt;/span&gt;

// test1.js 模块
import * as constants from &lt;span class="s1"&gt;&amp;#39;./constants&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
console.log&lt;span class="o"&gt;(&lt;/span&gt;constants.A&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // 1
console.log&lt;span class="o"&gt;(&lt;/span&gt;constants.B&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // 3

// test2.js 模块
import &lt;span class="o"&gt;{&lt;/span&gt;A, B&lt;span class="o"&gt;}&lt;/span&gt; from &lt;span class="s1"&gt;&amp;#39;./constants&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
console.log&lt;span class="o"&gt;(&lt;/span&gt;A&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // 1
console.log&lt;span class="o"&gt;(&lt;/span&gt;B&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // 3
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="browser-load-es6"&gt;
&lt;h3&gt;18.4. &lt;a class="toc-backref" href="#id65"&gt;Browser Load ES6&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;script &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;module&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;./foo.js&amp;quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;    // Async
&amp;lt;script &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;module&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;./foo.js&amp;quot;&lt;/span&gt; async&amp;gt;&amp;lt;/script&amp;gt;    // Sync
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="es6-vs-commonjs"&gt;
&lt;h3&gt;18.5. &lt;a class="toc-backref" href="#id66"&gt;ES6 VS CommonJS&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;CommonJS export a copy of Value while ES6 export reference.&lt;/li&gt;
&lt;li&gt;CommonJS load dynamically while ES6 load statically.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="reference"&gt;
&lt;h2&gt;19. &lt;a class="toc-backref" href="#id67"&gt;Reference&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://es6.ruanyifeng.com/"&gt;http://es6.ruanyifeng.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Node"></category></entry><entry><title>Node Webpack</title><link href="https://brianshen1990.github.io/Node_Webpack.html" rel="alternate"></link><published>2018-12-18T00:00:00+08:00</published><updated>2018-12-18T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:brianshen1990.github.io,2018-12-18:/Node_Webpack.html</id><summary type="html">&lt;p class="first last"&gt;Node Webpack&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;span id="node-webpack-rst"&gt;&lt;/span&gt;&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#asset-management" id="id1"&gt;Asset Management 资产管理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#output-management" id="id2"&gt;Output Management / 输出管理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#development" id="id3"&gt;Development / 友好开发&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#hot-module-replacement" id="id4"&gt;Hot Module Replacement / 热模块加载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#tree-shaking" id="id5"&gt;Tree Shaking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#production" id="id6"&gt;Production / 生产环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#code-splitting" id="id7"&gt;Code Splitting / 代码分割&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#lazy-loading" id="id8"&gt;Lazy Loading / 懒加载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#caching" id="id9"&gt;Caching / 缓存&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#authoring-libraries" id="id10"&gt;Authoring Libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#shimming" id="id11"&gt;Shimming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#progressive-web-application-web" id="id12"&gt;Progressive Web Application / 渐进式Web应用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#type-script" id="id13"&gt;Type Script&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#sample" id="id14"&gt;Sample / 示例&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#webpack-common-js" id="id15"&gt;webpack.common.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#webpack-dev-js" id="id16"&gt;webpack.dev.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#webpack-prod-js" id="id17"&gt;webpack.prod.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#package-json" id="id18"&gt;package.json&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#tsconfig-json" id="id19"&gt;tsconfig.json&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;Basic Usage of Webpack.  / Webpack 的简单使用。&lt;/p&gt;
&lt;div class="section" id="asset-management"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id1"&gt;Asset Management 资产管理&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Mainly how to manipulate rules to support them.&lt;/p&gt;
&lt;p&gt;主要是如何通过配置规则 来 支持各种文件资产类型。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;module: &lt;span class="o"&gt;{&lt;/span&gt;
  rules: &lt;span class="o"&gt;[&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
      test: /&lt;span class="se"&gt;\.&lt;/span&gt;css$/,
      use: &lt;span class="o"&gt;[&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;style-loader&amp;#39;&lt;/span&gt;,
        &lt;span class="s1"&gt;&amp;#39;css-loader&amp;#39;&lt;/span&gt;,
      &lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;,
    &lt;span class="o"&gt;{&lt;/span&gt;
      test: /&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;png&lt;span class="p"&gt;|&lt;/span&gt;svg&lt;span class="p"&gt;|&lt;/span&gt;jpg&lt;span class="p"&gt;|&lt;/span&gt;gif&lt;span class="o"&gt;)&lt;/span&gt;$/,
      use: &lt;span class="o"&gt;[&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;file-loader&amp;#39;&lt;/span&gt;,
      &lt;span class="o"&gt;]&lt;/span&gt;,
    &lt;span class="o"&gt;}&lt;/span&gt;,
  &lt;span class="o"&gt;]&lt;/span&gt;,
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="output-management"&gt;
&lt;h2&gt;2. &lt;a class="toc-backref" href="#id2"&gt;Output Management / 输出管理&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Mainly &lt;code&gt;Entry&lt;/code&gt; and &lt;code&gt;Output&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;主要是 入口点 和 输出。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;entry: &lt;span class="o"&gt;{&lt;/span&gt;
  index: &lt;span class="s1"&gt;&amp;#39;./src/index.js&amp;#39;&lt;/span&gt;,
&lt;span class="o"&gt;}&lt;/span&gt;,
output: &lt;span class="o"&gt;{&lt;/span&gt;
  filename: &lt;span class="s1"&gt;&amp;#39;[name].[hash].js&amp;#39;&lt;/span&gt;,
  chunkFilename: &lt;span class="s1"&gt;&amp;#39;[name].[hash].js&amp;#39;&lt;/span&gt;,
  path: path.resolve&lt;span class="o"&gt;(&lt;/span&gt;__dirname, &lt;span class="s1"&gt;&amp;#39;dist&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And clear dist by &lt;code&gt;CleanWebpackPlugin&lt;/code&gt; :
如果想要清除目标文件夹中的文件，使用插件 &lt;code&gt;CleanWebpackPlugin&lt;/code&gt; 。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;CleanWebpackPlugin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;clean-webpack-plugin&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

plugins: &lt;span class="o"&gt;[&lt;/span&gt;
  new CleanWebpackPlugin&lt;span class="o"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dist&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt;,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And generate html &lt;code&gt;index.html&lt;/code&gt; automatically。&lt;/p&gt;
&lt;p&gt;如果想要自动的产生 &lt;code&gt;index.html&lt;/code&gt; 。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;CleanWebpackPlugin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;clean-webpack-plugin&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

new HtmlWebpackPlugin&lt;span class="o"&gt;({&lt;/span&gt;
  title: &lt;span class="s1"&gt;&amp;#39;Output01&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;})&lt;/span&gt;,
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="development"&gt;
&lt;h2&gt;3. &lt;a class="toc-backref" href="#id3"&gt;Development / 友好开发&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Add source map to debug in UI:
在 UI 中加入 source map 以便调试。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;devtool: &lt;span class="s1"&gt;&amp;#39;inline-source-map&amp;#39;&lt;/span&gt;,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And &lt;code&gt;webpack-dev-server&lt;/code&gt; :
开发是也可以使用 &lt;code&gt;webpack-dev-server&lt;/code&gt; 来启动本地服务器。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;devServer: &lt;span class="o"&gt;{&lt;/span&gt;
  contentBase: &lt;span class="s1"&gt;&amp;#39;./dist&amp;#39;&lt;/span&gt;,
  hot: true,
&lt;span class="o"&gt;}&lt;/span&gt;,
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="hot-module-replacement"&gt;
&lt;h2&gt;4. &lt;a class="toc-backref" href="#id4"&gt;Hot Module Replacement / 热模块加载&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Advanced Feature.
Haven't used it yet.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="tree-shaking"&gt;
&lt;h2&gt;5. &lt;a class="toc-backref" href="#id5"&gt;Tree Shaking&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Remove unnecessary modules of code for ES2015&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Add &lt;code&gt;sideEffects&lt;/code&gt; to indicate which files are pure ES2015 MODULES.&lt;/p&gt;
&lt;p&gt;主要是用来移除不必要的模块。
将那些单纯的ES2015的代码，整理到 &lt;code&gt;sideEffects&lt;/code&gt; tag 下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Minify the Output (Uglify)&lt;/p&gt;
&lt;p&gt;最小化代码。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mode: &lt;span class="s1"&gt;&amp;#39;production&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="production"&gt;
&lt;h2&gt;6. &lt;a class="toc-backref" href="#id6"&gt;Production / 生产环境&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Use &lt;code&gt;webpack-merge&lt;/code&gt; and&lt;/p&gt;
&lt;p&gt;使用   &lt;code&gt;webpack-merge&lt;/code&gt; 模块，&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;webpack.common.js
webpack.dev.js
webpack.prod.js
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;so that we can have different configurations in different environment.
Also meed to update npm scripts as well.&lt;/p&gt;
&lt;p&gt;这样的话，开发 和 部署环境会有不同的配置。 当然我们也需要在 npm 代码中进行相应的修改。&lt;/p&gt;
&lt;p&gt;source mapping in production: &lt;code&gt;devtool: 'source-map'&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;source mapping 永远是被推荐的，即使是在生产环境中。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="code-splitting"&gt;
&lt;h2&gt;7. &lt;a class="toc-backref" href="#id7"&gt;Code Splitting / 代码分割&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Multi Entries / 多入口点&lt;/p&gt;
&lt;p&gt;Multi Entries will split code but will also cause Duplication.&lt;/p&gt;
&lt;p&gt;即使定义了多个入口点，编译出来的单独的文件 是互相隔离的，会导致重复代码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Prevent Duplication / 避免重复代码。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;optimization: &lt;span class="o"&gt;{&lt;/span&gt;
  splitChunks: &lt;span class="o"&gt;{&lt;/span&gt;
    chunks: &lt;span class="s1"&gt;&amp;#39;all&amp;#39;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Dynamic Imports / 动态加载&lt;/p&gt;
&lt;p&gt;Instead of using optimization, we use&lt;/p&gt;
&lt;p&gt;与 优化不同，这边会将所有的依赖打包成单个文件。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;output: &lt;span class="o"&gt;{&lt;/span&gt;
  filename: &lt;span class="s1"&gt;&amp;#39;[name].bundle.js&amp;#39;&lt;/span&gt;,
  chunkFilename: &lt;span class="s1"&gt;&amp;#39;[name].bundle.js&amp;#39;&lt;/span&gt;,
  path: path.resolve&lt;span class="o"&gt;(&lt;/span&gt;__dirname, &lt;span class="s1"&gt;&amp;#39;dist&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and use dynamic imports. A little unfriendly for developers.&lt;/p&gt;
&lt;p&gt;并且动态的加载。 对开发还是有些不利的。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="o"&gt;{&lt;/span&gt; default: _ &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; await import&lt;span class="o"&gt;(&lt;/span&gt;/* webpackChunkName: &lt;span class="s2"&gt;&amp;quot;lodash&amp;quot;&lt;/span&gt; */ &lt;span class="s1"&gt;&amp;#39;lodash&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
element.innerHTML &lt;span class="o"&gt;=&lt;/span&gt; _.join&lt;span class="o"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Hello&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;webpack&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Prefetching/Preloading modules&lt;/p&gt;
&lt;p&gt;预先加载代码的话，直接使用 import 就可以了。&lt;/p&gt;
&lt;p&gt;Using import.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="lazy-loading"&gt;
&lt;h2&gt;8. &lt;a class="toc-backref" href="#id8"&gt;Lazy Loading / 懒加载&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;More complex and is very unfriend to developers.&lt;/p&gt;
&lt;p&gt;更加的复杂， 对开发也不是很友好。&lt;/p&gt;
&lt;p&gt;Dynamic load during events like click.&lt;/p&gt;
&lt;p&gt;懒加载 就是， 直到某个事件发生了， 要去使用一个资源，我们再去动态的加载。&lt;/p&gt;
&lt;p&gt;However, there are some frameworks: / 针对不同前端库，其实有自己的一些框架。&lt;/p&gt;
&lt;blockquote&gt;
&lt;a class="reference external" href="https://reacttraining.com/react-router/web/guides/code-splitting"&gt;https://reacttraining.com/react-router/web/guides/code-splitting&lt;/a&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="caching"&gt;
&lt;h2&gt;9. &lt;a class="toc-backref" href="#id9"&gt;Caching / 缓存&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Add hash to name so that whenever a file updates, the name will change as well.&lt;/p&gt;
&lt;p&gt;在文件名中加上 hash 值，这样的话 文件只要有变动，名字也会跟着改变。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;output: &lt;span class="o"&gt;{&lt;/span&gt;
  filename: &lt;span class="s1"&gt;&amp;#39;[name].[hash].js&amp;#39;&lt;/span&gt;,
  chunkFilename: &lt;span class="s1"&gt;&amp;#39;[name].[hash].js&amp;#39;&lt;/span&gt;,
  path: path.resolve&lt;span class="o"&gt;(&lt;/span&gt;__dirname, &lt;span class="s1"&gt;&amp;#39;dist&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Combine vendors in node_modules.
可以将 node_modules 文件夹中不变的内容 都让在一个 文件里面， 因为他们是不变动的。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;optimization: &lt;span class="o"&gt;{&lt;/span&gt;
  usedExports: true,
  runtimeChunk: &lt;span class="s1"&gt;&amp;#39;single&amp;#39;&lt;/span&gt;,
  splitChunks: &lt;span class="o"&gt;{&lt;/span&gt;
    cacheGroups: &lt;span class="o"&gt;{&lt;/span&gt;
      vendor: &lt;span class="o"&gt;{&lt;/span&gt;
        test: /&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;/&lt;span class="o"&gt;]&lt;/span&gt;node_modules&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;/&lt;span class="o"&gt;]&lt;/span&gt;/,
        name: &lt;span class="s1"&gt;&amp;#39;vendors&amp;#39;&lt;/span&gt;,
        chunks: &lt;span class="s1"&gt;&amp;#39;all&amp;#39;&lt;/span&gt;,
      &lt;span class="o"&gt;}&lt;/span&gt;,
    &lt;span class="o"&gt;}&lt;/span&gt;,
  &lt;span class="o"&gt;}&lt;/span&gt;,
&lt;span class="o"&gt;}&lt;/span&gt;,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, we need to use plugins as each &lt;code&gt;module.id&lt;/code&gt;  is incremented based on resolving order by default.&lt;/p&gt;
&lt;p&gt;当然，我们需要记住 一个插件，否则 每一次  &lt;code&gt;module.id&lt;/code&gt; 都会改变。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plugins: &lt;span class="o"&gt;[&lt;/span&gt;
  new webpack.HashedModuleIdsPlugin&lt;span class="o"&gt;()&lt;/span&gt;,
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="authoring-libraries"&gt;
&lt;h2&gt;10. &lt;a class="toc-backref" href="#id10"&gt;Authoring Libraries&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;创建一个 库。&lt;/p&gt;
&lt;p&gt;use library and library and externals.&lt;/p&gt;
&lt;p&gt;需要借助 library 和 externals 标签。&lt;/p&gt;
&lt;p&gt;TODO&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="shimming"&gt;
&lt;h2&gt;11. &lt;a class="toc-backref" href="#id11"&gt;Shimming&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Not recommended!  / 不推荐&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Shimming Globals / 全局变量&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plugins: &lt;span class="o"&gt;[&lt;/span&gt;
  new webpack.ProvidePlugin&lt;span class="o"&gt;({&lt;/span&gt;
  _: &lt;span class="s1"&gt;&amp;#39;lodash&amp;#39;&lt;/span&gt;
  &lt;span class="o"&gt;})&lt;/span&gt;,
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Global Exports / 全局导出&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Very useful for dated libs.&lt;/p&gt;
&lt;p&gt;当我们使用 一个过时的库时，会很实用。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;src/globals.js

var &lt;span class="nv"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;blah.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
var &lt;span class="nv"&gt;helpers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  test: &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; console.log&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;test something&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;,
  parse: &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; console.log&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;parse something&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What can we do about that?&lt;/p&gt;
&lt;p&gt;我们如何去使用这个库？&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;module: &lt;span class="o"&gt;{&lt;/span&gt;
  rules: &lt;span class="o"&gt;[&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
      test: require.resolve&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index.js&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;,
      use: &lt;span class="s1"&gt;&amp;#39;imports-loader?this=&amp;gt;window&amp;#39;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;,
    &lt;span class="o"&gt;{&lt;/span&gt;
      test: require.resolve&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;globals.js&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;,
      use: &lt;span class="s1"&gt;&amp;#39;exports-loader?file,parse=helpers.parse&amp;#39;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And now we can use &lt;code&gt;import { file, parse } from './globals.js';&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;现在我们可以使用  &lt;code&gt;import { file, parse } from './globals.js';&lt;/code&gt;  。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="progressive-web-application-web"&gt;
&lt;h2&gt;12. &lt;a class="toc-backref" href="#id12"&gt;Progressive Web Application / 渐进式Web应用&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A Service Worker ran at background, quite amazing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="type-script"&gt;
&lt;h2&gt;13. &lt;a class="toc-backref" href="#id13"&gt;Type Script&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Need a &lt;code&gt;tsconfig.json&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;需要额外的 配置文件 &lt;code&gt;tsconfig.json&lt;/code&gt; 。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;compilerOptions&amp;quot;&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;outDir&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;./dist/&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;sourceMap&amp;quot;&lt;/span&gt;: true,
    &lt;span class="s2"&gt;&amp;quot;noImplicitAny&amp;quot;&lt;/span&gt;: true,
    &lt;span class="s2"&gt;&amp;quot;module&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;es6&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;target&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;es5&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;jsx&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;react&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;allowJs&amp;quot;&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And add this / 并且添加上 规则:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;module: &lt;span class="o"&gt;{&lt;/span&gt;
  rules: &lt;span class="o"&gt;[&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
      test: /&lt;span class="se"&gt;\.&lt;/span&gt;tsx?$/,
      use: &lt;span class="s1"&gt;&amp;#39;ts-loader&amp;#39;&lt;/span&gt;,
      exclude: /node_modules/
    &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;,
resolve: &lt;span class="o"&gt;{&lt;/span&gt;
  extensions: &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.tsx&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;.ts&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;.js&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;,
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="sample"&gt;
&lt;h2&gt;14. &lt;a class="toc-backref" href="#id14"&gt;Sample / 示例&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="webpack-common-js"&gt;
&lt;h3&gt;14.1. &lt;a class="toc-backref" href="#id15"&gt;webpack.common.js&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;path&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
const &lt;span class="nv"&gt;HtmlWebpackPlugin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;html-webpack-plugin&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
const &lt;span class="nv"&gt;CleanWebpackPlugin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;clean-webpack-plugin&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
const &lt;span class="nv"&gt;webpack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;webpack&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

module.exports &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  entry: &lt;span class="o"&gt;{&lt;/span&gt;
    index: &lt;span class="s1"&gt;&amp;#39;./src/index.js&amp;#39;&lt;/span&gt;,
  &lt;span class="o"&gt;}&lt;/span&gt;,
  plugins: &lt;span class="o"&gt;[&lt;/span&gt;
    new CleanWebpackPlugin&lt;span class="o"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dist&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt;,
    new HtmlWebpackPlugin&lt;span class="o"&gt;({&lt;/span&gt;
      title: &lt;span class="s1"&gt;&amp;#39;Output01&amp;#39;&lt;/span&gt;
    &lt;span class="o"&gt;})&lt;/span&gt;,
    new webpack.HashedModuleIdsPlugin&lt;span class="o"&gt;()&lt;/span&gt;,
    new webpack.HotModuleReplacementPlugin&lt;span class="o"&gt;()&lt;/span&gt;,
    new webpack.ProvidePlugin&lt;span class="o"&gt;({&lt;/span&gt;
      _: &lt;span class="s1"&gt;&amp;#39;lodash&amp;#39;&lt;/span&gt;
    &lt;span class="o"&gt;})&lt;/span&gt;,
  &lt;span class="o"&gt;]&lt;/span&gt;,
  output: &lt;span class="o"&gt;{&lt;/span&gt;
    filename: &lt;span class="s1"&gt;&amp;#39;[name].[hash].js&amp;#39;&lt;/span&gt;,
    chunkFilename: &lt;span class="s1"&gt;&amp;#39;[name].[hash].js&amp;#39;&lt;/span&gt;,
    path: path.resolve&lt;span class="o"&gt;(&lt;/span&gt;__dirname, &lt;span class="s1"&gt;&amp;#39;dist&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;,
  module: &lt;span class="o"&gt;{&lt;/span&gt;
    rules: &lt;span class="o"&gt;[&lt;/span&gt;
      &lt;span class="o"&gt;{&lt;/span&gt;
        test: /&lt;span class="se"&gt;\.&lt;/span&gt;tsx?$/,
        use: &lt;span class="s1"&gt;&amp;#39;ts-loader&amp;#39;&lt;/span&gt;,
        exclude: /node_modules/
      &lt;span class="o"&gt;}&lt;/span&gt;,
      &lt;span class="o"&gt;{&lt;/span&gt;
        test: /&lt;span class="se"&gt;\.&lt;/span&gt;css$/,
        use: &lt;span class="o"&gt;[&lt;/span&gt;
          &lt;span class="s1"&gt;&amp;#39;style-loader&amp;#39;&lt;/span&gt;,
          &lt;span class="s1"&gt;&amp;#39;css-loader&amp;#39;&lt;/span&gt;,
        &lt;span class="o"&gt;]&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;,
      &lt;span class="o"&gt;{&lt;/span&gt;
        test: /&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;png&lt;span class="p"&gt;|&lt;/span&gt;svg&lt;span class="p"&gt;|&lt;/span&gt;jpg&lt;span class="p"&gt;|&lt;/span&gt;gif&lt;span class="o"&gt;)&lt;/span&gt;$/,
        use: &lt;span class="o"&gt;[&lt;/span&gt;
          &lt;span class="s1"&gt;&amp;#39;file-loader&amp;#39;&lt;/span&gt;,
        &lt;span class="o"&gt;]&lt;/span&gt;,
      &lt;span class="o"&gt;}&lt;/span&gt;,
      &lt;span class="o"&gt;{&lt;/span&gt;
        test: /&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;woff&lt;span class="p"&gt;|&lt;/span&gt;woff2&lt;span class="p"&gt;|&lt;/span&gt;eot&lt;span class="p"&gt;|&lt;/span&gt;ttf&lt;span class="p"&gt;|&lt;/span&gt;otf&lt;span class="o"&gt;)&lt;/span&gt;$/,
        use: &lt;span class="o"&gt;[&lt;/span&gt;
          &lt;span class="s1"&gt;&amp;#39;file-loader&amp;#39;&lt;/span&gt;
        &lt;span class="o"&gt;]&lt;/span&gt;,
      &lt;span class="o"&gt;}&lt;/span&gt;,
    &lt;span class="o"&gt;]&lt;/span&gt;,
  &lt;span class="o"&gt;}&lt;/span&gt;,
  resolve: &lt;span class="o"&gt;{&lt;/span&gt;
    extensions: &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.tsx&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;.ts&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;.js&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;,
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="webpack-dev-js"&gt;
&lt;h3&gt;14.2. &lt;a class="toc-backref" href="#id16"&gt;webpack.dev.js&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;merge&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;webpack-merge&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
const &lt;span class="nv"&gt;common&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./webpack.common.js&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

module.exports &lt;span class="o"&gt;=&lt;/span&gt; merge&lt;span class="o"&gt;(&lt;/span&gt;common, &lt;span class="o"&gt;{&lt;/span&gt;
  // mode: &lt;span class="s1"&gt;&amp;#39;production&amp;#39;&lt;/span&gt;,
  mode: &lt;span class="s1"&gt;&amp;#39;development&amp;#39;&lt;/span&gt;,
  devtool: &lt;span class="s1"&gt;&amp;#39;inline-source-map&amp;#39;&lt;/span&gt;,
  devServer: &lt;span class="o"&gt;{&lt;/span&gt;
    contentBase: &lt;span class="s1"&gt;&amp;#39;./dist&amp;#39;&lt;/span&gt;,
    hot: true,
  &lt;span class="o"&gt;}&lt;/span&gt;,
&lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="webpack-prod-js"&gt;
&lt;h3&gt;14.3. &lt;a class="toc-backref" href="#id17"&gt;webpack.prod.js&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;merge&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;webpack-merge&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
const &lt;span class="nv"&gt;common&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./webpack.common.js&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

module.exports &lt;span class="o"&gt;=&lt;/span&gt; merge&lt;span class="o"&gt;(&lt;/span&gt;common, &lt;span class="o"&gt;{&lt;/span&gt;
  mode: &lt;span class="s1"&gt;&amp;#39;production&amp;#39;&lt;/span&gt;,
  devtool: &lt;span class="s1"&gt;&amp;#39;source-map&amp;#39;&lt;/span&gt;,
  optimization: &lt;span class="o"&gt;{&lt;/span&gt;
    usedExports: true,
    runtimeChunk: &lt;span class="s1"&gt;&amp;#39;single&amp;#39;&lt;/span&gt;,
    splitChunks: &lt;span class="o"&gt;{&lt;/span&gt;
      cacheGroups: &lt;span class="o"&gt;{&lt;/span&gt;
        vendor: &lt;span class="o"&gt;{&lt;/span&gt;
          test: /&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;/&lt;span class="o"&gt;]&lt;/span&gt;node_modules&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;/&lt;span class="o"&gt;]&lt;/span&gt;/,
          name: &lt;span class="s1"&gt;&amp;#39;vendors&amp;#39;&lt;/span&gt;,
          chunks: &lt;span class="s1"&gt;&amp;#39;all&amp;#39;&lt;/span&gt;,
        &lt;span class="o"&gt;}&lt;/span&gt;,
      &lt;span class="o"&gt;}&lt;/span&gt;,
    &lt;span class="o"&gt;}&lt;/span&gt;,
  &lt;span class="o"&gt;}&lt;/span&gt;,
&lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="package-json"&gt;
&lt;h3&gt;14.4. &lt;a class="toc-backref" href="#id18"&gt;package.json&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;webpack-demo&amp;quot;&lt;/span&gt;,
  &lt;span class="s2"&gt;&amp;quot;version&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;1.0.0&amp;quot;&lt;/span&gt;,
  &lt;span class="s2"&gt;&amp;quot;description&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;,
  &lt;span class="s2"&gt;&amp;quot;private&amp;quot;&lt;/span&gt;: true,
  &lt;span class="s2"&gt;&amp;quot;scripts&amp;quot;&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;test&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;echo \&amp;quot;Error: no test specified\&amp;quot; &amp;amp;&amp;amp; exit 1&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;build&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;webpack --config webpack.prod.js&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;watch&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;webpack --watch&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;startHttp&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;http-server dist&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;start&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;webpack-dev-server --open --config webpack.dev.js&amp;quot;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;,
  &lt;span class="s2"&gt;&amp;quot;keywords&amp;quot;&lt;/span&gt;: &lt;span class="o"&gt;[]&lt;/span&gt;,
  &lt;span class="s2"&gt;&amp;quot;author&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;,
  &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;ISC&amp;quot;&lt;/span&gt;,
  &lt;span class="s2"&gt;&amp;quot;devDependencies&amp;quot;&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;clean-webpack-plugin&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^1.0.0&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;css-loader&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^2.0.1&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;express&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^4.16.4&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;file-loader&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^2.0.0&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;html-webpack-plugin&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^3.2.0&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;http-server&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^0.11.1&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;style-loader&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^0.23.1&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;ts-loader&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^5.3.1&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;typescript&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^3.2.2&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;webpack&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^4.27.1&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;webpack-cli&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^3.1.2&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;webpack-dev-middleware&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^3.4.0&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;webpack-dev-server&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^3.1.10&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;webpack-merge&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^4.1.5&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;workbox-webpack-plugin&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^3.6.3&amp;quot;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;,
  &lt;span class="s2"&gt;&amp;quot;dependencies&amp;quot;&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;lodash&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^4.17.11&amp;quot;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;,
  &lt;span class="s2"&gt;&amp;quot;sideEffects&amp;quot;&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="tsconfig-json"&gt;
&lt;h3&gt;14.5. &lt;a class="toc-backref" href="#id19"&gt;tsconfig.json&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;compilerOptions&amp;quot;&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;outDir&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;./dist/&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;sourceMap&amp;quot;&lt;/span&gt;: true,
    &lt;span class="s2"&gt;&amp;quot;noImplicitAny&amp;quot;&lt;/span&gt;: true,
    &lt;span class="s2"&gt;&amp;quot;module&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;es6&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;target&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;es5&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;jsx&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;react&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;allowJs&amp;quot;&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="Node"></category></entry><entry><title>Mount disk to VG / 磁盘挂载到虚拟分区</title><link href="https://brianshen1990.github.io/Tools_mount_disk_to_vg.html" rel="alternate"></link><published>2018-11-24T00:00:00+08:00</published><updated>2018-11-24T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:brianshen1990.github.io,2018-11-24:/Tools_mount_disk_to_vg.html</id><summary type="html">&lt;p class="first last"&gt;Tools - Mount Disk to VG&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;span id="mount-disk-to-vg-rst"&gt;&lt;/span&gt;&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#mount-a-new-disk" id="id1"&gt;Mount A New Disk / 挂载新的磁盘&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#env" id="id2"&gt;Env / 环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#add-a-disk" id="id3"&gt;Add a Disk / 添加一块磁盘&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#creating-linux-partitions-in-the-new-added-disk-linux" id="id4"&gt;Creating Linux Partitions in the new added disk / 在新加硬盘上创建 Linux 分区&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#creating-a-file-system" id="id5"&gt;Creating a File System / 创建文件系统&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#mount-it-to-linux-virtual-system-lvs-linux" id="id6"&gt;Mount it to Linux Virtual System (LVS) / 挂载到 Linux 虚拟分区&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#reference" id="id7"&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;All lines started with &lt;code&gt;#&lt;/code&gt; should be input. / 所有 &lt;code&gt;#&lt;/code&gt; 前缀的都是 输入的部分。&lt;/p&gt;
&lt;div class="section" id="mount-a-new-disk"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id1"&gt;Mount A New Disk / 挂载新的磁盘&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="env"&gt;
&lt;h3&gt;1.1. &lt;a class="toc-backref" href="#id2"&gt;Env / 环境&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Current, we have 100G Disk. / 当前我们有 100G 磁盘。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# lsblk&lt;/span&gt;

    NAME                          MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
    sda                             8:0    &lt;span class="m"&gt;0&lt;/span&gt;  100G  &lt;span class="m"&gt;0&lt;/span&gt; disk
    ├─sda1                          8:1    &lt;span class="m"&gt;0&lt;/span&gt;  500M  &lt;span class="m"&gt;0&lt;/span&gt; part /boot
    └─sda2                          8:2    &lt;span class="m"&gt;0&lt;/span&gt; 99.5G  &lt;span class="m"&gt;0&lt;/span&gt; part
        ├─centos-root               253:0    &lt;span class="m"&gt;0&lt;/span&gt; 92.5G  &lt;span class="m"&gt;0&lt;/span&gt; lvm  /
        ├─centos-swap               253:1    &lt;span class="m"&gt;0&lt;/span&gt;    2G  &lt;span class="m"&gt;0&lt;/span&gt; lvm  &lt;span class="o"&gt;[&lt;/span&gt;SWAP&lt;span class="o"&gt;]&lt;/span&gt;
        └─centos-home               253:2    &lt;span class="m"&gt;0&lt;/span&gt;    5G  &lt;span class="m"&gt;0&lt;/span&gt; lvm  /home
    sr0                            11:0    &lt;span class="m"&gt;1&lt;/span&gt; 1024M  &lt;span class="m"&gt;0&lt;/span&gt; rom
    loop0                           7:0    &lt;span class="m"&gt;0&lt;/span&gt;  100G  &lt;span class="m"&gt;0&lt;/span&gt; loop
    └─docker-253:0-134516294-pool 253:3    &lt;span class="m"&gt;0&lt;/span&gt;  100G  &lt;span class="m"&gt;0&lt;/span&gt; dm
    loop1                           7:1    &lt;span class="m"&gt;0&lt;/span&gt;    2G  &lt;span class="m"&gt;0&lt;/span&gt; loop
    └─docker-253:0-134516294-pool 253:3    &lt;span class="m"&gt;0&lt;/span&gt;  100G  &lt;span class="m"&gt;0&lt;/span&gt; dm
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As we can see, all disks are assigned to root directory. / 所有的磁盘指定给了 根目录。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="add-a-disk"&gt;
&lt;h3&gt;1.2. &lt;a class="toc-backref" href="#id3"&gt;Add a Disk / 添加一块磁盘&lt;/a&gt;&lt;/h3&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/tools/mount_disk_01.png" /&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# ls /dev/sd*&lt;/span&gt;
    /dev/sda  /dev/sda1  /dev/sda2
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since we didn't restart the PC, OS wouldn't be able to detect the new disk. / 因为我们没有重启， 所有系统发现不了这个新的磁盘。&lt;/p&gt;
&lt;p&gt;To force OS reloading disk information, we can execute this: / 为了强制刷新磁盘信息， 我们可以执行以下命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# echo &amp;#39;- - -&amp;#39; &amp;gt; /sys/class/scsi_host/host0/scan&lt;/span&gt;
&lt;span class="c1"&gt;# ls /dev/sd*&lt;/span&gt;
    /dev/sda  /dev/sda1  /dev/sda2  /dev/sdb
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's see what happened: / 看看发生了什么。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# lsblk&lt;/span&gt;
    NAME                          MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
    sda                             8:0    &lt;span class="m"&gt;0&lt;/span&gt;  100G  &lt;span class="m"&gt;0&lt;/span&gt; disk
    ├─sda1                          8:1    &lt;span class="m"&gt;0&lt;/span&gt;  500M  &lt;span class="m"&gt;0&lt;/span&gt; part /boot
    └─sda2                          8:2    &lt;span class="m"&gt;0&lt;/span&gt; 99.5G  &lt;span class="m"&gt;0&lt;/span&gt; part
        ├─centos-root               253:0    &lt;span class="m"&gt;0&lt;/span&gt; 92.5G  &lt;span class="m"&gt;0&lt;/span&gt; lvm  /
        ├─centos-swap               253:1    &lt;span class="m"&gt;0&lt;/span&gt;    2G  &lt;span class="m"&gt;0&lt;/span&gt; lvm  &lt;span class="o"&gt;[&lt;/span&gt;SWAP&lt;span class="o"&gt;]&lt;/span&gt;
        └─centos-home               253:2    &lt;span class="m"&gt;0&lt;/span&gt;    5G  &lt;span class="m"&gt;0&lt;/span&gt; lvm  /home
    sdb                             8:16   &lt;span class="m"&gt;0&lt;/span&gt;   16G  &lt;span class="m"&gt;0&lt;/span&gt; disk
    sr0                            11:0    &lt;span class="m"&gt;1&lt;/span&gt; 1024M  &lt;span class="m"&gt;0&lt;/span&gt; rom
    loop0                           7:0    &lt;span class="m"&gt;0&lt;/span&gt;  100G  &lt;span class="m"&gt;0&lt;/span&gt; loop
    └─docker-253:0-134516294-pool 253:3    &lt;span class="m"&gt;0&lt;/span&gt;  100G  &lt;span class="m"&gt;0&lt;/span&gt; dm
    loop1                           7:1    &lt;span class="m"&gt;0&lt;/span&gt;    2G  &lt;span class="m"&gt;0&lt;/span&gt; loop
    └─docker-253:0-134516294-pool 253:3    &lt;span class="m"&gt;0&lt;/span&gt;  100G  &lt;span class="m"&gt;0&lt;/span&gt; dm
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we can see a new disk named &lt;code&gt;sdb&lt;/code&gt; in the disk information.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="creating-linux-partitions-in-the-new-added-disk-linux"&gt;
&lt;h3&gt;1.3. &lt;a class="toc-backref" href="#id4"&gt;Creating Linux Partitions in the new added disk / 在新加硬盘上创建 Linux 分区&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# fdisk /dev/sdb&lt;/span&gt;
    Welcome to fdisk &lt;span class="o"&gt;(&lt;/span&gt;util-linux 2.23.2&lt;span class="o"&gt;)&lt;/span&gt;.

    Changes will remain in memory only, &lt;span class="k"&gt;until&lt;/span&gt; you decide to write them.
    Be careful before using the write command.

    Device does not contain a recognized partition table
    Building a new DOS disklabel with disk identifier 0x111936e6.

&lt;span class="c1"&gt;# Command (m for help): c&lt;/span&gt;
    DOS Compatibility flag is &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;DEPRECATED!&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Command (m for help): u&lt;/span&gt;
    Changing display/entry units to cylinders &lt;span class="o"&gt;(&lt;/span&gt;DEPRECATED!&lt;span class="o"&gt;)&lt;/span&gt;.

&lt;span class="c1"&gt;# Command (m for help): p&lt;/span&gt;

    Disk /dev/sdb: 17.2 GB, &lt;span class="m"&gt;17179869184&lt;/span&gt; bytes, &lt;span class="m"&gt;33554432&lt;/span&gt; sectors
    &lt;span class="m"&gt;255&lt;/span&gt; heads, &lt;span class="m"&gt;63&lt;/span&gt; sectors/track, &lt;span class="m"&gt;2088&lt;/span&gt; cylinders
    &lt;span class="nv"&gt;Units&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; cylinders of &lt;span class="m"&gt;16065&lt;/span&gt; * &lt;span class="nv"&gt;512&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;8225280&lt;/span&gt; bytes
    Sector size &lt;span class="o"&gt;(&lt;/span&gt;logical/physical&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
    I/O size &lt;span class="o"&gt;(&lt;/span&gt;minimum/optimal&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
    Disk label type: dos
    Disk identifier: 0x111936e6

    Device Boot      Start         End      Blocks   Id  System

&lt;span class="c1"&gt;# Command (m for help): n&lt;/span&gt;
    Partition type:
    p   primary &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; primary, &lt;span class="m"&gt;0&lt;/span&gt; extended, &lt;span class="m"&gt;4&lt;/span&gt; free&lt;span class="o"&gt;)&lt;/span&gt;
    e   extended
&lt;span class="c1"&gt;# Select (default p): p&lt;/span&gt;
    Partition number &lt;span class="o"&gt;(&lt;/span&gt;1-4, default 1&lt;span class="o"&gt;)&lt;/span&gt;:
    First cylinder &lt;span class="o"&gt;(&lt;/span&gt;1-2088, default 1&lt;span class="o"&gt;)&lt;/span&gt;:
    Using default value 1
    Last cylinder, +cylinders or +size&lt;span class="o"&gt;{&lt;/span&gt;K,M,G&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;1-2088, default 2088&lt;span class="o"&gt;)&lt;/span&gt;:
    Using default value 2088
    Partition &lt;span class="m"&gt;1&lt;/span&gt; of &lt;span class="nb"&gt;type&lt;/span&gt; Linux and of size &lt;span class="m"&gt;16&lt;/span&gt; GiB is &lt;span class="nb"&gt;set&lt;/span&gt;

&lt;span class="c1"&gt;# Command (m for help): w&lt;/span&gt;
    The partition table has been altered!

    Calling ioctl&lt;span class="o"&gt;()&lt;/span&gt; to re-read partition table.
    Syncing disks.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="creating-a-file-system"&gt;
&lt;h3&gt;1.4. &lt;a class="toc-backref" href="#id5"&gt;Creating a File System / 创建文件系统&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Let's see what happened:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# lsblk&lt;/span&gt;
    NAME                          MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
    sda                             8:0    &lt;span class="m"&gt;0&lt;/span&gt;  100G  &lt;span class="m"&gt;0&lt;/span&gt; disk
    ├─sda1                          8:1    &lt;span class="m"&gt;0&lt;/span&gt;  500M  &lt;span class="m"&gt;0&lt;/span&gt; part /boot
    └─sda2                          8:2    &lt;span class="m"&gt;0&lt;/span&gt; 99.5G  &lt;span class="m"&gt;0&lt;/span&gt; part
        ├─centos-root               253:0    &lt;span class="m"&gt;0&lt;/span&gt; 92.5G  &lt;span class="m"&gt;0&lt;/span&gt; lvm  /
        ├─centos-swap               253:1    &lt;span class="m"&gt;0&lt;/span&gt;    2G  &lt;span class="m"&gt;0&lt;/span&gt; lvm  &lt;span class="o"&gt;[&lt;/span&gt;SWAP&lt;span class="o"&gt;]&lt;/span&gt;
        └─centos-home               253:2    &lt;span class="m"&gt;0&lt;/span&gt;    5G  &lt;span class="m"&gt;0&lt;/span&gt; lvm  /home
    sdb                             8:16   &lt;span class="m"&gt;0&lt;/span&gt;   16G  &lt;span class="m"&gt;0&lt;/span&gt; disk
    └─sdb1                          8:17   &lt;span class="m"&gt;0&lt;/span&gt;   16G  &lt;span class="m"&gt;0&lt;/span&gt; part
    sr0                            11:0    &lt;span class="m"&gt;1&lt;/span&gt; 1024M  &lt;span class="m"&gt;0&lt;/span&gt; rom
    loop0                           7:0    &lt;span class="m"&gt;0&lt;/span&gt;  100G  &lt;span class="m"&gt;0&lt;/span&gt; loop
    └─docker-253:0-134516294-pool 253:3    &lt;span class="m"&gt;0&lt;/span&gt;  100G  &lt;span class="m"&gt;0&lt;/span&gt; dm
    loop1                           7:1    &lt;span class="m"&gt;0&lt;/span&gt;    2G  &lt;span class="m"&gt;0&lt;/span&gt; loop
    └─docker-253:0-134516294-pool 253:3    &lt;span class="m"&gt;0&lt;/span&gt;  100G  &lt;span class="m"&gt;0&lt;/span&gt; dm
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And now, we should format the partition. / 现在我们格式化这个分区。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# /sbin/mkfs.ext4 /dev/sdb1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="mount-it-to-linux-virtual-system-lvs-linux"&gt;
&lt;h3&gt;1.5. &lt;a class="toc-backref" href="#id6"&gt;Mount it to Linux Virtual System (LVS) / 挂载到 Linux 虚拟分区&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Let's check LVS. / 查看当前的 Linux 虚拟分区。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# lvs&lt;/span&gt;
    WARNING: Not using lvmetad with older version.
    LV   VG     Attr       LSize  Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
    home centos -wi-ao----  5.00g
    root centos -wi-ao---- 92.50g
    swap centos -wi-ao----  2.00g
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Remember the value of column &lt;code&gt;VG&lt;/code&gt; ( &lt;code&gt;centos&lt;/code&gt; ). / 记住 &lt;code&gt;VG&lt;/code&gt; 的值 ( &lt;code&gt;centos&lt;/code&gt; )。&lt;/p&gt;
&lt;p&gt;Now we create a new physical volume. / 现在我们创建一块物理盘。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# pvcreate /dev/sdb1&lt;/span&gt;
    WARNING: Not using lvmetad with older version.
&lt;span class="c1"&gt;# WARNING: ext4 signature detected on /dev/sdb1 at offset 1080. Wipe it? [y/n]: y&lt;/span&gt;
    Wiping ext4 signature on /dev/sdb1.
    Physical volume &lt;span class="s2"&gt;&amp;quot;/dev/sdb1&amp;quot;&lt;/span&gt; successfully created.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And extend it to &lt;code&gt;VG&lt;/code&gt;  &lt;code&gt;centos&lt;/code&gt; . / 并且将它拓展到 &lt;code&gt;VG&lt;/code&gt;  &lt;code&gt;centos&lt;/code&gt; 。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# vgextend centos /dev/sdb1&lt;/span&gt;
    WARNING: Not using lvmetad with older version.
    Volume group &lt;span class="s2"&gt;&amp;quot;centos&amp;quot;&lt;/span&gt; successfully extended
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Check whether it has been extended correctly: / 检查是否正确的被扩展了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# vgdisplay&lt;/span&gt;
    WARNING: Not using lvmetad with older version.
    --- Volume group ---
    VG Name               centos
    System ID
    Format                lvm2
    Metadata Areas        2
    Metadata Sequence No  6
    VG Access             read/write
    VG Status             resizable
    MAX LV                0
    Cur LV                3
    Open LV               3
    Max PV                0
    Cur PV                2
    Act PV                2
    VG Size               &amp;lt;115.50 GiB
    PE Size               4.00 MiB
    Total PE              29567
    Alloc PE / Size       &lt;span class="m"&gt;25472&lt;/span&gt; / 99.50 GiB
    Free  PE / Size       &lt;span class="m"&gt;4095&lt;/span&gt; / &amp;lt;16.00 GiB
    VG UUID               RVnCi9-U8gt-DbgA-lu11-pdeO-6o0o-cEfQkC
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice that there is a Free PE with 8G. So let's extend it logically. / 可以看到存在没有被用到的 PE 16GiB ， 所以是成功的。&lt;/p&gt;
&lt;p&gt;Now let's add the free PE to root. / 现在我们可以将这些空余的 PE 指定给根目录。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# lvextend -L +15.9G /dev/centos/root /dev/sdb1&lt;/span&gt;
    WARNING: Not using lvmetad with older version.
    Rounding size to boundary between physical extents: 15.90 GiB.
    Size of logical volume centos/root changed from 92.50 GiB &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;23680&lt;/span&gt; extents&lt;span class="o"&gt;)&lt;/span&gt; to 108.40 GiB &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;27751&lt;/span&gt; extents&lt;span class="o"&gt;)&lt;/span&gt;.
    Logical volume centos/root successfully resized.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;OK. Only 15.9 Can be added. / 请注意留 0.1G 的空余。&lt;/p&gt;
&lt;p&gt;Now the last step: tell OS  that the file system has been extended. / 最后一步就是告诉系统，文件系统被扩展了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# xfs_growfs /dev/centos/root&lt;/span&gt;
    meta-data&lt;span class="o"&gt;=&lt;/span&gt;/dev/mapper/centos-root &lt;span class="nv"&gt;isize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;256&lt;/span&gt;    &lt;span class="nv"&gt;agcount&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;4, &lt;span class="nv"&gt;agsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;6062080&lt;/span&gt; &lt;span class="nv"&gt;blks&lt;/span&gt;
             &lt;span class="o"&gt;=&lt;/span&gt;                        &lt;span class="nv"&gt;sectsz&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;512&lt;/span&gt;   &lt;span class="nv"&gt;attr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;2, &lt;span class="nv"&gt;projid32bit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;1&lt;/span&gt;
             &lt;span class="o"&gt;=&lt;/span&gt;                        &lt;span class="nv"&gt;crc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;        &lt;span class="nv"&gt;finobt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;spinodes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
    &lt;span class="nv"&gt;data&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt;                        &lt;span class="nv"&gt;bsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;4096&lt;/span&gt;   &lt;span class="nv"&gt;blocks&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;24248320, &lt;span class="nv"&gt;imaxpct&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;25&lt;/span&gt;
             &lt;span class="o"&gt;=&lt;/span&gt;                        &lt;span class="nv"&gt;sunit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;      &lt;span class="nv"&gt;swidth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; blks
    &lt;span class="nv"&gt;naming&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt;version &lt;span class="m"&gt;2&lt;/span&gt;               &lt;span class="nv"&gt;bsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;4096&lt;/span&gt;   ascii-ci&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;ftype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
    &lt;span class="nv"&gt;log&lt;/span&gt;      &lt;span class="o"&gt;=&lt;/span&gt;internal                &lt;span class="nv"&gt;bsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;4096&lt;/span&gt;   &lt;span class="nv"&gt;blocks&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;11840, &lt;span class="nv"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;2&lt;/span&gt;
             &lt;span class="o"&gt;=&lt;/span&gt;                        &lt;span class="nv"&gt;sectsz&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;512&lt;/span&gt;   &lt;span class="nv"&gt;sunit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; blks, lazy-count&lt;span class="o"&gt;=&lt;/span&gt;1
    &lt;span class="nv"&gt;realtime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;none                    &lt;span class="nv"&gt;extsz&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;4096&lt;/span&gt;   &lt;span class="nv"&gt;blocks&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0, &lt;span class="nv"&gt;rtextents&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
    data blocks changed from &lt;span class="m"&gt;24248320&lt;/span&gt; to 28417024

&lt;span class="c1"&gt;#### Default installed, if not , type this:  yum install -y xfsprogs.x86_64&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And have a check: / 现在我们看下系统信息：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# df -hl&lt;/span&gt;
    Filesystem               Size  Used Avail Use% Mounted on
    /dev/mapper/centos-root  109G   17G   92G  16% /
    devtmpfs                 910M     &lt;span class="m"&gt;0&lt;/span&gt;  910M   0% /dev
    tmpfs                    921M     &lt;span class="m"&gt;0&lt;/span&gt;  921M   0% /dev/shm
    tmpfs                    921M   17M  904M   2% /run
    tmpfs                    921M     &lt;span class="m"&gt;0&lt;/span&gt;  921M   0% /sys/fs/cgroup
    /dev/mapper/centos-home  5.0G   33M  5.0G   1% /home
    /dev/sda1                497M  125M  373M  26% /boot
    tmpfs                    185M  4.0K  185M   1% /run/user/0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It succeeds! / 完成了！&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="reference"&gt;
&lt;h3&gt;1.6. &lt;a class="toc-backref" href="#id7"&gt;Reference&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;CentOS6调整LVM SWAP分区大小 &lt;a class="reference external" href="https://www.haiyun.me/archives/centos6-change-lvm-swap.html"&gt;https://www.haiyun.me/archives/centos6-change-lvm-swap.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;resize2fs: Bad magic number in super-block while trying to open  &lt;a class="reference external" href="https://stackoverflow.com/questions/26305376/resize2fs-bad-magic-number-in-super-block-while-trying-to-open"&gt;https://stackoverflow.com/questions/26305376/resize2fs-bad-magic-number-in-super-block-while-trying-to-open&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;centos7 lvm管理 把/home空间转移给/ &lt;a class="reference external" href="https://www.2cto.com/os/201708/668992.html"&gt;https://www.2cto.com/os/201708/668992.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;实战：CentOS不重启，在线添加硬盘  &lt;a class="reference external" href="http://blog.51cto.com/skypegnu1/1429375"&gt;http://blog.51cto.com/skypegnu1/1429375&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.csdn.net/rainbow702/article/details/50761380"&gt;http://blog.csdn.net/rainbow702/article/details/50761380&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="Linux"></category><category term="CentOS7"></category><category term="LVM"></category><category term="Disk"></category></entry><entry><title>Node Task Queue Research / Node 任务队列学习</title><link href="https://brianshen1990.github.io/Node_Task_Queue_Research.html" rel="alternate"></link><published>2018-11-01T00:00:00+08:00</published><updated>2018-11-01T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:brianshen1990.github.io,2018-11-01:/Node_Task_Queue_Research.html</id><summary type="html">&lt;p class="first last"&gt;Node Task Queue Research&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;span id="node-task-rst"&gt;&lt;/span&gt;&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#queue-based-on-node-node" id="id1"&gt;Queue based on Node / 基于 Node 的队列&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#comparison" id="id2"&gt;Comparison / 对比&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#my-opinion" id="id3"&gt;My opinion / 个人观点&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#other-queues" id="id4"&gt;Other Queues / 其他可选的队列&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#rabbitmq" id="id5"&gt;RabbitMQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#saas-aws-simple-queue-service-saas-aws" id="id6"&gt;Saas -  AWS Simple Queue Service / Saas AWS 简单队列服务&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#saas-azure-service-bus" id="id7"&gt;Saas - Azure Service Bus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#queues-i-have-encountered" id="id8"&gt;Queues I have encountered  / 我遇到的队列&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="queue-based-on-node-node"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id1"&gt;Queue based on Node / 基于 Node 的队列&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="comparison"&gt;
&lt;h3&gt;1.1. &lt;a class="toc-backref" href="#id2"&gt;Comparison / 对比&lt;/a&gt;&lt;/h3&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="28%" /&gt;
&lt;col width="18%" /&gt;
&lt;col width="18%" /&gt;
&lt;col width="18%" /&gt;
&lt;col width="18%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Feature  / 功能&lt;/th&gt;
&lt;th class="head"&gt;Bull ☆3885&lt;/th&gt;
&lt;th class="head"&gt;Kue  ☆8007&lt;/th&gt;
&lt;th class="head"&gt;Bee  ☆1141&lt;/th&gt;
&lt;th class="head"&gt;Agenda ☆4637&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Backend / 后台支持&lt;/td&gt;
&lt;td&gt;redis&lt;/td&gt;
&lt;td&gt;redis&lt;/td&gt;
&lt;td&gt;redis&lt;/td&gt;
&lt;td&gt;mongo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Priorities / 优先级支持&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Concurrency / 并行&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Delayed jobs / 延迟任务&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Global events / 全局事件&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Rate Limiter / 速度控制&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Pause/Resume / 停止/恢复&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Sandboxed worker / 沙箱工作节点&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Repeatable jobs / 重复任务&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Atomic ops / 原子性操作&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Persistence / 持久性&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;UI&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;REST API&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Optimized for / 优化&lt;/td&gt;
&lt;td&gt;Jobs / Messages&lt;/td&gt;
&lt;td&gt;Jobs&lt;/td&gt;
&lt;td&gt;Messages&lt;/td&gt;
&lt;td&gt;Jobs&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="my-opinion"&gt;
&lt;h3&gt;1.2. &lt;a class="toc-backref" href="#id3"&gt;My opinion / 个人观点&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;After I've reviewed their documents, I listed my own opinion.&lt;/p&gt;
&lt;p&gt;在查看过介绍 和 使用文档后，有一些自己的心得:&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="20%" /&gt;
&lt;col width="80%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Products  / 产品&lt;/th&gt;
&lt;th class="head"&gt;Descriptions / 描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Bull&lt;/td&gt;
&lt;td&gt;&lt;div class="first last line-block"&gt;
&lt;div class="line"&gt;Job and Queue:&lt;/div&gt;
&lt;div class="line"&gt;One queue can contain one kind of job.&lt;/div&gt;
&lt;div class="line"&gt;每一个队列包含一种任务&lt;/div&gt;
&lt;div class="line"&gt;Every queue has its own Redis connection except for more configuration.&lt;/div&gt;
&lt;div class="line"&gt;每个队列需要一个Redis连接， 需要额外的配置才可以共享&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;Advantages:  / 好处&lt;/div&gt;
&lt;div class="line"&gt;Quicker and full functional.&lt;/div&gt;
&lt;div class="line"&gt;队列任务消除 相对较快，功能全面&lt;/div&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Kue&lt;/td&gt;
&lt;td&gt;&lt;div class="first last line-block"&gt;
&lt;div class="line"&gt;Job and Queue:&lt;/div&gt;
&lt;div class="line"&gt;One queue can contain multiple kinds of jobs.&lt;/div&gt;
&lt;div class="line"&gt;一个队列 包含多种类型的任务&lt;/div&gt;
&lt;div class="line"&gt;So one queue is enough and only 1 redis connection is needed.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;Speed: But the speed of time-consuming is not that fast from the benchmark test from Bee.&lt;/div&gt;
&lt;div class="line"&gt;队列任务消除缓慢， 而且维护较少&lt;/div&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Bee&lt;/td&gt;
&lt;td&gt;&lt;div class="first last line-block"&gt;
&lt;div class="line"&gt;Job and Queue:&lt;/div&gt;
&lt;div class="line"&gt;One queue can contain multiple kinds of jobs.&lt;/div&gt;
&lt;div class="line"&gt;每一个队列包含一种任务&lt;/div&gt;
&lt;div class="line"&gt;Every queue has its own Redis connection.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;Quicker and lighter. / 更快 也更轻量级&lt;/div&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Agenda&lt;/td&gt;
&lt;td&gt;&lt;div class="first last line-block"&gt;
&lt;div class="line"&gt;Advantages:&lt;/div&gt;
&lt;div class="line"&gt;Designed for Scheduler and Repeat Jobs.&lt;/div&gt;
&lt;div class="line"&gt;更偏向于 定期/周期任务&lt;/div&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Recommendation: &lt;code&gt;Bull&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;推荐使用 &lt;code&gt;Bull&lt;/code&gt; .&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="other-queues"&gt;
&lt;h2&gt;2. &lt;a class="toc-backref" href="#id4"&gt;Other Queues / 其他可选的队列&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;However, queues based on Node can satisfy us if the volume is OK.&lt;/p&gt;
&lt;p&gt;But if the number soars, we should seek help for other real messages queues.&lt;/p&gt;
&lt;p&gt;如果我们的任务量比较小，整个架构也不复杂的话，基于 Node 的队列基本可以满足要求。&lt;/p&gt;
&lt;p&gt;但是如果任务量大，构架复杂， 我们需要依赖于一些专业的标准化的队列服务。&lt;/p&gt;
&lt;div class="section" id="rabbitmq"&gt;
&lt;h3&gt;2.1. &lt;a class="toc-backref" href="#id5"&gt;RabbitMQ&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Implementation of AMQP (Advanced Message Queuing Protocol),&lt;/p&gt;
&lt;p&gt;an open standard application layer protocol for message-oriented middleware.&lt;/p&gt;
&lt;p&gt;是 AMQP 的一种实现。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Standard Protocol / 标准协议&lt;/li&gt;
&lt;li&gt;No Language Limitation / 不是基于某种语言&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="saas-aws-simple-queue-service-saas-aws"&gt;
&lt;h3&gt;2.2. &lt;a class="toc-backref" href="#id6"&gt;Saas -  AWS Simple Queue Service / Saas AWS 简单队列服务&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Reference: &lt;a class="reference external" href="https://aws.amazon.com/sqs/"&gt;https://aws.amazon.com/sqs/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The fee of first 1 million messages per mon is free.
每个月首个一百万条消息是免费的...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Standard Queues / 标准队列&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;Unlimited Throughput&lt;/li&gt;
&lt;li&gt;At-Least-Once Delivery&lt;/li&gt;
&lt;li&gt;Best-Effort Ordering&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;FIFO Queues / 先进先出队列&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;High Throughput&lt;/li&gt;
&lt;li&gt;Exactly-Once Processing&lt;/li&gt;
&lt;li&gt;First-In-First-Out Delivery&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="saas-azure-service-bus"&gt;
&lt;h3&gt;2.3. &lt;a class="toc-backref" href="#id7"&gt;Saas - Azure Service Bus&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Reference: &lt;a class="reference external" href="https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-queues-topics-subscriptions"&gt;https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-queues-topics-subscriptions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The fee of first 1000 brokered connections (744,000 messages) /per mon is free . (&lt;a class="reference external" href="https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-pricing-billing"&gt;https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-pricing-billing&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;每个月首个 74 万消息是免费的。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Queues: One to one&lt;/li&gt;
&lt;li&gt;Topics and subscriptions: One to many&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="queues-i-have-encountered"&gt;
&lt;h2&gt;3. &lt;a class="toc-backref" href="#id8"&gt;Queues I have encountered  / 我遇到的队列&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In TM, I used to be a member of CAS, we use two kind types of queues:&lt;/p&gt;
&lt;p&gt;在 TM CAS 团队(Saas 产品), 我们使用了两种类型的队列:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Azure Message Queue: Quite expensive&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;Azure 的Service Bus，Hook Email 之后会将Email事件存放在Queue 中，顺序处理， 也可以作为监控指标&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Queue designed by ourselves: / 自行设计的 Queue&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first"&gt;MS SQL backed, and every task are record. And micro services will get and handle them periodically.&lt;/p&gt;
&lt;p class="last"&gt;基于 MS SQL，周期性任务会存在在 MSSQL 中 每一步会去更新状态， 直到最终完成。&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Celery + RabbitMQ + Python&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;Python Web Service 有一些长期的异步任务需要实现，使用的是 Celery (&lt;a class="reference external" href="http://www.celeryproject.org/"&gt;http://www.celeryproject.org/&lt;/a&gt;) , 基于 RabbitMQ。&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Node"></category></entry><entry><title>React Sharing / React 框架分享</title><link href="https://brianshen1990.github.io/React_Sharing.html" rel="alternate"></link><published>2018-09-19T00:00:00+08:00</published><updated>2018-09-19T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:brianshen1990.github.io,2018-09-19:/React_Sharing.html</id><summary type="html">&lt;p class="first last"&gt;React Sharing&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#dev-environment-establish" id="id1"&gt;Dev Environment Establish / 开发环境搭建&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#start-a-new-app-app" id="id2"&gt;Start a new App / 创建新的App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#basic-components" id="id3"&gt;Basic components / 基础组件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#test" id="id4"&gt;Test / 测试&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#l10n" id="id5"&gt;L10N / 本地化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#router-conception-router" id="id6"&gt;Router Conception / Router的概念&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#route-implement" id="id7"&gt;Route implement / 路由使用实现&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#deploy-and-debug" id="id8"&gt;Deploy and Debug 部署和调试&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="dev-environment-establish"&gt;
&lt;span id="react-sharing-rst"&gt;&lt;/span&gt;&lt;h2&gt;1. &lt;a class="toc-backref" href="#id1"&gt;Dev Environment Establish / 开发环境搭建&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Download Node from &lt;a class="reference external" href="https://nodejs.org/en/"&gt;https://nodejs.org/en/&lt;/a&gt; and install.&lt;/p&gt;
&lt;p&gt;下载 Node 并且安装。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="start-a-new-app-app"&gt;
&lt;h2&gt;2. &lt;a class="toc-backref" href="#id2"&gt;Start a new App / 创建新的App&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;create-react-app&lt;/code&gt; is a helper program developed by React.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;create-react-app&lt;/code&gt; 是 React 自家开发的脚手架程序。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;npx create-react-app esample
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's have a look at the directory.&lt;/p&gt;
&lt;p&gt;可以看一看这个脚手架程序创建的目录。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;esample
├── README.md
├── node_modules  &lt;span class="o"&gt;(&lt;/span&gt;Lib/库&lt;span class="o"&gt;)&lt;/span&gt;
├── package-lock.json
├── package.json  &lt;span class="o"&gt;(&lt;/span&gt;dependencies and scripts/依赖和脚本&lt;span class="o"&gt;)&lt;/span&gt;
├── public   &lt;span class="o"&gt;(&lt;/span&gt;static files/静态文件&lt;span class="o"&gt;)&lt;/span&gt;
└── src  &lt;span class="o"&gt;(&lt;/span&gt;code/代码&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now run &lt;code&gt;npm start&lt;/code&gt; to start the app.&lt;/p&gt;
&lt;p&gt;现在可以运行 &lt;code&gt;npm start&lt;/code&gt; 来启动App.&lt;/p&gt;
&lt;p&gt;However, the recommendation:
虽然默认的目录是这样的，但是在 &lt;code&gt;src&lt;/code&gt; 文件夹中，面对大型的构架，我们希望的是这样的目录结构：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;esample
├─ node_modules &lt;span class="o"&gt;(&lt;/span&gt;Lib/库&lt;span class="o"&gt;)&lt;/span&gt;
├─ public &lt;span class="o"&gt;(&lt;/span&gt;static files/静态文件&lt;span class="o"&gt;)&lt;/span&gt;
├─ package.json &lt;span class="o"&gt;(&lt;/span&gt;dependencies and scripts/依赖和脚本&lt;span class="o"&gt;)&lt;/span&gt;
└─ src &lt;span class="o"&gt;(&lt;/span&gt;code/代码&lt;span class="o"&gt;)&lt;/span&gt;
    ├─ actions &lt;span class="o"&gt;(&lt;/span&gt;Reflux action/Reflux 的action&lt;span class="o"&gt;)&lt;/span&gt;
    ├─ stores  &lt;span class="o"&gt;(&lt;/span&gt;Reflux store/Reflux 的存储&lt;span class="o"&gt;)&lt;/span&gt;
    ├─ injection  &lt;span class="o"&gt;(&lt;/span&gt;Reflux inject / Reflux 注入&lt;span class="o"&gt;)&lt;/span&gt;
    ├─ util  &lt;span class="o"&gt;(&lt;/span&gt;helpers / 帮助函数&lt;span class="o"&gt;)&lt;/span&gt;
    └─ public &lt;span class="o"&gt;(&lt;/span&gt;static files/静态文件&lt;span class="o"&gt;)&lt;/span&gt;
        ├─ images
        └─ css
    ├─ routing  &lt;span class="o"&gt;(&lt;/span&gt;router/路由设置&lt;span class="o"&gt;)&lt;/span&gt;
    ├─ pages  &lt;span class="o"&gt;(&lt;/span&gt;main pages/页面&lt;span class="o"&gt;)&lt;/span&gt;
    └─ components  &lt;span class="o"&gt;(&lt;/span&gt;react components/组件&lt;span class="o"&gt;)&lt;/span&gt;
        ├─ common
        └─ Each pages
    └─ index.jsx &lt;span class="o"&gt;(&lt;/span&gt;Main entry/主进入点&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="tip"&gt;
&lt;p class="first admonition-title"&gt;Tip&lt;/p&gt;
&lt;p&gt;Problems of Absolute path: 相对路径问题&lt;/p&gt;
&lt;p&gt;Ref: &lt;a class="reference external" href="https://fdp.io/blog/2018/01/18/setting-up-absolute-paths-in-create-react-app/"&gt;https://fdp.io/blog/2018/01/18/setting-up-absolute-paths-in-create-react-app/&lt;/a&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;With the new structure, we can safely move our files around without worrying about where we are in the directory stack.&lt;/div&gt;
&lt;div class="line"&gt;使用了新的目录结构之后，我们可以减少对于目录结构的关注，并且将根路径设置问 src.&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;To achieve this, we create a .env file in the root of our directory with NODE_PATH set to src&lt;/div&gt;
&lt;div class="line"&gt;为了达到这个目的，需要将设置一些环节变量。&lt;/div&gt;
&lt;/div&gt;
&lt;p class="last"&gt;&lt;code&gt;NODE_PATH=src&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="basic-components"&gt;
&lt;h2&gt;3. &lt;a class="toc-backref" href="#id3"&gt;Basic components / 基础组件&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Quite Easy this part because we don't have to care how to create html elements and how to bind events, how to add elements dynamically.
All we have to do is declare, declare. And the scope is in the components itself, which won't have any effects on others.&lt;/p&gt;
&lt;p&gt;基础组件式 React 最容易的部分，我们不需要了解太多HTML 和 CSS， reactstrap 实际上既可以做很多的事情。 我们可以像写 Python 一样去写UI。
每个组件都是一个对象。对， 都是对象。&lt;/p&gt;
&lt;p&gt;Let's explore!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://reactstrap.github.io/components/tabs/"&gt;https://reactstrap.github.io/components/tabs/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PS: Let‘s use the prototype from Elves.&lt;/p&gt;
&lt;p&gt;我们使用 Elves 给我们的雏形。&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/web/React_LifeCycle.jpeg" /&gt;
&lt;/div&gt;
&lt;p&gt;Most code is copied from &lt;code&gt;Reactstrap&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;大部分的代码我们都从 &lt;code&gt;Reactstrap&lt;/code&gt; 拷贝过来的，拿来即用。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;class SampleComponents extends React.Component &lt;span class="o"&gt;{&lt;/span&gt;
    constructor&lt;span class="o"&gt;(&lt;/span&gt;props&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        super&lt;span class="o"&gt;(&lt;/span&gt;props&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        this.toggleTab &lt;span class="o"&gt;=&lt;/span&gt; this.toggleTab.bind&lt;span class="o"&gt;(&lt;/span&gt;this&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        this.state &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            activeTab: &lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    toggleTab&lt;span class="o"&gt;(&lt;/span&gt;tab&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;this.state.activeTab !&lt;span class="o"&gt;==&lt;/span&gt; tab&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        this.setState&lt;span class="o"&gt;({&lt;/span&gt;
            activeTab: tab
        &lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    render&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;
        &amp;lt;div &lt;span class="nv"&gt;style&lt;/span&gt;&lt;span class="o"&gt;={{&lt;/span&gt;marginLeft:&lt;span class="s2"&gt;&amp;quot;100px&amp;quot;&lt;/span&gt;,marginRight:&lt;span class="s2"&gt;&amp;quot;100px&amp;quot;&lt;/span&gt;,marginTop:&lt;span class="s2"&gt;&amp;quot;50px&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}}&lt;/span&gt;&amp;gt;
            &amp;lt;Nav tabs&amp;gt;
                &amp;lt;NavItem&amp;gt;
                    &amp;lt;BoostNavLink
                        &lt;span class="nv"&gt;className&lt;/span&gt;&lt;span class="o"&gt;={&lt;/span&gt;classnames&lt;span class="o"&gt;({&lt;/span&gt; active: this.state.activeTab &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;})}&lt;/span&gt;
                        &lt;span class="nv"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;={()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt; this.toggleTab&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;}}&lt;/span&gt;&amp;gt;
                        Tab1
                    &amp;lt;/BoostNavLink&amp;gt;
                &amp;lt;/NavItem&amp;gt;
                &amp;lt;NavItem&amp;gt;
                    &amp;lt;BoostNavLink
                        &lt;span class="nv"&gt;className&lt;/span&gt;&lt;span class="o"&gt;={&lt;/span&gt;classnames&lt;span class="o"&gt;({&lt;/span&gt; active: this.state.activeTab &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;2&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;})}&lt;/span&gt;
                        &lt;span class="nv"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;={()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt; this.toggleTab&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;2&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;}}&lt;/span&gt;&amp;gt;
                        Tab 2
                    &amp;lt;/BoostNavLink&amp;gt;
                &amp;lt;/NavItem&amp;gt;
            &amp;lt;/Nav&amp;gt;
            &amp;lt;TabContent &lt;span class="nv"&gt;activeTab&lt;/span&gt;&lt;span class="o"&gt;={&lt;/span&gt;this.state.activeTab&lt;span class="o"&gt;}&lt;/span&gt;&amp;gt;
                &amp;lt;TabPane &lt;span class="nv"&gt;tabId&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&amp;gt;
                    &amp;lt;Row&amp;gt;
                        &amp;lt;Col &lt;span class="nv"&gt;sm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;12&amp;quot;&lt;/span&gt;&amp;gt;
                            &amp;lt;h4&amp;gt;Tab &lt;span class="m"&gt;1&lt;/span&gt; Contents&amp;lt;/h4&amp;gt;
                        &amp;lt;/Col&amp;gt;
                    &amp;lt;/Row&amp;gt;
                &amp;lt;/TabPane&amp;gt;
                &amp;lt;TabPane &lt;span class="nv"&gt;tabId&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&amp;gt;
                    &amp;lt;Row&amp;gt;
                        &amp;lt;Col &lt;span class="nv"&gt;sm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;12&amp;quot;&lt;/span&gt;&amp;gt;
                            &amp;lt;h4&amp;gt;Tab &lt;span class="m"&gt;2&lt;/span&gt; Contents&amp;lt;/h4&amp;gt;
                        &amp;lt;/Col&amp;gt;
                    &amp;lt;/Row&amp;gt;
                &amp;lt;/TabPane&amp;gt;
            &amp;lt;/TabContent&amp;gt;
        &amp;lt;/div&amp;gt;
        &lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/web/react_sharing_0008.png" /&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;class SubAV extends React.Component &lt;span class="o"&gt;{&lt;/span&gt;
    constructor&lt;span class="o"&gt;(&lt;/span&gt;props&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        super&lt;span class="o"&gt;(&lt;/span&gt;props&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        this.apply &lt;span class="o"&gt;=&lt;/span&gt; this.apply.bind&lt;span class="o"&gt;(&lt;/span&gt;this&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        this.enable &lt;span class="o"&gt;=&lt;/span&gt; this.enable.bind&lt;span class="o"&gt;(&lt;/span&gt;this&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        this.state&lt;span class="o"&gt;={&lt;/span&gt;
            enable: &lt;span class="nb"&gt;false&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    apply&lt;span class="o"&gt;(){&lt;/span&gt;
        alert&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;enable:&amp;quot;&lt;/span&gt; + &lt;span class="o"&gt;(&lt;/span&gt;this.state.enable ? &lt;span class="s2"&gt;&amp;quot;True&amp;quot;&lt;/span&gt; : &lt;span class="s2"&gt;&amp;quot;False&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    enable&lt;span class="o"&gt;(&lt;/span&gt;event&lt;span class="o"&gt;){&lt;/span&gt;
        debugger&lt;span class="p"&gt;;&lt;/span&gt;
        this.setState&lt;span class="o"&gt;({&lt;/span&gt;enable: event.target.checked &lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    render&lt;span class="o"&gt;(){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&amp;lt;Row&amp;gt;
            &amp;lt;Col &lt;span class="nv"&gt;sm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;12&amp;quot;&lt;/span&gt;&amp;gt;
                &amp;lt;div&amp;gt;防恶意软件安全测试 &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;nbsp&lt;span class="p"&gt;;&amp;amp;&lt;/span&gt;nbsp&lt;span class="p"&gt;;&amp;amp;&lt;/span&gt;nbsp&lt;span class="p"&gt;;&amp;amp;&lt;/span&gt;nbsp&lt;span class="p"&gt;;&amp;amp;&lt;/span&gt;nbsp&lt;span class="p"&gt;;&lt;/span&gt;
                &amp;lt;Input &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;checkbox&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;={&lt;/span&gt;this.enable&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="nv"&gt;checked&lt;/span&gt;&lt;span class="o"&gt;={&lt;/span&gt;this.state.enable&lt;span class="o"&gt;}&lt;/span&gt; /&amp;gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&amp;lt;/div&amp;gt;
                &amp;lt;Card&amp;gt;
                    &amp;lt;CardHeader &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;AVTogglerAPT&amp;quot;&lt;/span&gt;&amp;gt;高级威胁扫描&amp;lt;/CardHeader&amp;gt;
                    &amp;lt;UncontrolledCollapse &lt;span class="nv"&gt;toggler&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#AVTogglerAPT&amp;quot;&lt;/span&gt;&amp;gt;
                        &amp;lt;CardBody&amp;gt;
                            &amp;lt;Button&amp;gt;Go somewhere&amp;lt;/Button&amp;gt;
                        &amp;lt;/CardBody&amp;gt;
                    &amp;lt;/UncontrolledCollapse&amp;gt;
                &amp;lt;/Card&amp;gt;
                &amp;lt;Card&amp;gt;
                    &amp;lt;CardHeader &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;AVTogglerExtension&amp;quot;&lt;/span&gt;&amp;gt;文件扩展名&amp;lt;/CardHeader&amp;gt;
                    &amp;lt;UncontrolledCollapse &lt;span class="nv"&gt;toggler&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#AVTogglerExtension&amp;quot;&lt;/span&gt;&amp;gt;
                        &amp;lt;CardBody&amp;gt;
                            &amp;lt;Button&amp;gt;Go somewhere&amp;lt;/Button&amp;gt;
                        &amp;lt;/CardBody&amp;gt;
                    &amp;lt;/UncontrolledCollapse&amp;gt;
                &amp;lt;/Card&amp;gt;
                &amp;lt;Card&amp;gt;
                    &amp;lt;CardHeader &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;AVTogglerScan&amp;quot;&lt;/span&gt;&amp;gt;扫描优化&amp;lt;/CardHeader&amp;gt;
                    &amp;lt;UncontrolledCollapse &lt;span class="nv"&gt;toggler&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#AVTogglerScan&amp;quot;&lt;/span&gt;&amp;gt;
                        &amp;lt;CardBody&amp;gt;
                            &amp;lt;Button&amp;gt;Go somewhere&amp;lt;/Button&amp;gt;
                        &amp;lt;/CardBody&amp;gt;
                    &amp;lt;/UncontrolledCollapse&amp;gt;
                &amp;lt;/Card&amp;gt;
                &amp;lt;Card&amp;gt;
                    &amp;lt;CardHeader &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;AVTogglerEmail&amp;quot;&lt;/span&gt;&amp;gt;防恶意邮件设置&amp;lt;/CardHeader&amp;gt;
                    &amp;lt;UncontrolledCollapse &lt;span class="nv"&gt;toggler&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#AVTogglerEmail&amp;quot;&lt;/span&gt;&amp;gt;
                        &amp;lt;CardBody&amp;gt;
                            &amp;lt;Button&amp;gt;Go somewhere&amp;lt;/Button&amp;gt;
                        &amp;lt;/CardBody&amp;gt;
                    &amp;lt;/UncontrolledCollapse&amp;gt;
                &amp;lt;/Card&amp;gt;
                &amp;lt;Button &lt;span class="nv"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;={&lt;/span&gt;this.apply&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="nv"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;primary&amp;quot;&lt;/span&gt;&amp;gt;应用&amp;lt;/Button&amp;gt; &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;nbsp&lt;span class="p"&gt;;&amp;amp;&lt;/span&gt;nbsp&lt;span class="p"&gt;;&lt;/span&gt;
                &amp;lt;Button&amp;gt;重置&amp;lt;/Button&amp;gt;
            &amp;lt;/Col&amp;gt;
        &amp;lt;/Row&amp;gt;
        &lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/web/react_sharing_0009.png" /&gt;
&lt;/div&gt;
&lt;p&gt;Let's add some CSS / 添加修改 CSS 即可实现基本相似的页面效果.&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/web/react_sharing_0010.png" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="test"&gt;
&lt;h2&gt;4. &lt;a class="toc-backref" href="#id4"&gt;Test / 测试&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Recommendation : Airbnb ( &lt;a class="reference external" href="http://airbnb.io/enzyme/"&gt;http://airbnb.io/enzyme/&lt;/a&gt; )&lt;/p&gt;
&lt;p&gt;React 本身的测试框架并不是很完善， 官方推荐的是 Airbnb 的测试框架  enzyme .&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Install 安装：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;npm i --save-dev enzyme enzyme-adapter-react-16 chai sinon jest-fetch-mock
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;class SubAV extends React.Component &lt;span class="o"&gt;{&lt;/span&gt;
    ...
    render&lt;span class="o"&gt;(){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&amp;lt;Row &lt;span class="nv"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;subAV&amp;quot;&lt;/span&gt; &amp;gt;
            &amp;lt;Col &lt;span class="nv"&gt;sm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;12&amp;quot;&lt;/span&gt;&amp;gt;
                &amp;lt;div &lt;span class="nv"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;aisPanel&amp;quot;&lt;/span&gt;&amp;gt;
                    &amp;lt;Card&amp;gt;
                        &amp;lt;CardHeader &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;AVTogglerAPT&amp;quot;&lt;/span&gt;&amp;gt;高级威胁扫描&amp;lt;/CardHeader&amp;gt;
                    &amp;lt;/Card&amp;gt;
                    &amp;lt;Card&amp;gt;
                        &amp;lt;CardHeader &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;AVTogglerExtension&amp;quot;&lt;/span&gt;&amp;gt;文件扩展名&amp;lt;/CardHeader&amp;gt;
                    &amp;lt;/Card&amp;gt;
                    &amp;lt;Card&amp;gt;
                        &amp;lt;CardHeader &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;AVTogglerScan&amp;quot;&lt;/span&gt;&amp;gt;扫描优化&amp;lt;/CardHeader&amp;gt;
                    &amp;lt;/Card&amp;gt;
                    &amp;lt;Card&amp;gt;
                        &amp;lt;CardHeader &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;AVTogglerEmail&amp;quot;&lt;/span&gt;&amp;gt;防恶意邮件设置&amp;lt;/CardHeader&amp;gt;
                    &amp;lt;/Card&amp;gt;
                &amp;lt;/div&amp;gt;
            &amp;lt;/Col&amp;gt;
        &amp;lt;/Row&amp;gt;
        &lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;  SubAV &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;class SampleRest extends Component &lt;span class="o"&gt;{&lt;/span&gt;
    constructor&lt;span class="o"&gt;(&lt;/span&gt;props&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        super&lt;span class="o"&gt;(&lt;/span&gt;props&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        this.state &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        members: &lt;span class="o"&gt;[]&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    componentDidMount&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        fetch&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://localhost:3001/rest/de_members&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
        .then&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; response.json&lt;span class="o"&gt;())&lt;/span&gt;
        .then&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;
            console.log&lt;span class="o"&gt;(&lt;/span&gt;data&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            this.setState&lt;span class="o"&gt;({&lt;/span&gt;members: data&lt;span class="o"&gt;})&lt;/span&gt;
        &lt;span class="o"&gt;})&lt;/span&gt;
        .catch&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; console.log&lt;span class="o"&gt;(&lt;/span&gt;err&lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    render&lt;span class="o"&gt;(){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &amp;lt;div&amp;gt;
        &amp;lt;h2&amp;gt;Network1&amp;lt;/h2&amp;gt;
        &amp;lt;p&amp;gt;Response from localhost:3001 CROS and run in localhost:3000&amp;lt;/p&amp;gt;
        &lt;span class="o"&gt;{&lt;/span&gt;this.state.members.map&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;item&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;gt;&lt;span class="o"&gt;(&lt;/span&gt;&amp;lt;span&amp;gt;&lt;span class="o"&gt;{&lt;/span&gt;item&lt;span class="o"&gt;}&lt;/span&gt;&amp;lt;br /&amp;gt;&amp;lt;/span&amp;gt;&lt;span class="o"&gt;))}&lt;/span&gt;
        &amp;lt;/div&amp;gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;import React from &lt;span class="s1"&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
import &lt;span class="o"&gt;{&lt;/span&gt; expect &lt;span class="o"&gt;}&lt;/span&gt; from &lt;span class="s1"&gt;&amp;#39;chai&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
import &lt;span class="o"&gt;{&lt;/span&gt; shallow, mount, configure &lt;span class="o"&gt;}&lt;/span&gt; from &lt;span class="s1"&gt;&amp;#39;enzyme&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
import sinon from &lt;span class="s1"&gt;&amp;#39;sinon&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
import &lt;span class="o"&gt;{&lt;/span&gt; SampleRest &lt;span class="o"&gt;}&lt;/span&gt; from &lt;span class="s1"&gt;&amp;#39;components/SampleRest.js&amp;#39;&lt;/span&gt;
import &lt;span class="o"&gt;{&lt;/span&gt;SubAV&lt;span class="o"&gt;}&lt;/span&gt; from &lt;span class="s1"&gt;&amp;#39;components/SubAV.js&amp;#39;&lt;/span&gt;
global.fetch &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;jest-fetch-mock&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
import &lt;span class="o"&gt;{&lt;/span&gt;  Row, Card &lt;span class="o"&gt;}&lt;/span&gt; from &lt;span class="s1"&gt;&amp;#39;reactstrap&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
import Adapter from &lt;span class="s1"&gt;&amp;#39;enzyme-adapter-react-16&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
configure&lt;span class="o"&gt;({&lt;/span&gt; adapter: new Adapter&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
//jest.setTimeout&lt;span class="o"&gt;(&lt;/span&gt;10000&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

describe&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;SubAV /&amp;gt;&amp;#39;&lt;/span&gt;, &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;
    it&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;renders 1 &amp;lt;Row /&amp;gt; components&amp;#39;&lt;/span&gt;, &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;
        const &lt;span class="nv"&gt;wrapper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; shallow&lt;span class="o"&gt;(&lt;/span&gt;&amp;lt;SubAV /&amp;gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        expect&lt;span class="o"&gt;(&lt;/span&gt;wrapper.find&lt;span class="o"&gt;(&lt;/span&gt;Row&lt;span class="o"&gt;))&lt;/span&gt;.to.have.lengthOf&lt;span class="o"&gt;(&lt;/span&gt;1&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    it&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;renders 4 &amp;lt;Card /&amp;gt; components&amp;#39;&lt;/span&gt;, &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;
        const &lt;span class="nv"&gt;wrapper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; shallow&lt;span class="o"&gt;(&lt;/span&gt;&amp;lt;SubAV /&amp;gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        expect&lt;span class="o"&gt;(&lt;/span&gt;wrapper.find&lt;span class="o"&gt;(&lt;/span&gt;Card&lt;span class="o"&gt;))&lt;/span&gt;.to.have.lengthOf&lt;span class="o"&gt;(&lt;/span&gt;4&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    it&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;calls componentDidMount&amp;#39;&lt;/span&gt;, &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;
        expect&lt;span class="o"&gt;(&lt;/span&gt;SubAV.prototype.componentDidMount&lt;span class="o"&gt;)&lt;/span&gt;.to.eq&lt;span class="o"&gt;(&lt;/span&gt;undefined&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

describe&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;SampleRest /&amp;gt;&amp;#39;&lt;/span&gt;, &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;
    beforeEach&lt;span class="o"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;
        fetch.resetMocks&lt;span class="o"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;})&lt;/span&gt;

    it&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;calls componentDidMount&amp;#39;&lt;/span&gt;, &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;
        sinon.spy&lt;span class="o"&gt;(&lt;/span&gt;SampleRest.prototype, &lt;span class="s1"&gt;&amp;#39;componentDidMount&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        fetch.mockResponseOnce&lt;span class="o"&gt;(&lt;/span&gt;JSON.stringify&lt;span class="o"&gt;([&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Fred&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;Fay&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]))&lt;/span&gt;
        const &lt;span class="nv"&gt;wrapper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; mount&lt;span class="o"&gt;(&lt;/span&gt;&amp;lt;SampleRest /&amp;gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        expect&lt;span class="o"&gt;(&lt;/span&gt;SampleRest.prototype.componentDidMount&lt;span class="o"&gt;)&lt;/span&gt;.to.have.property&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;callCount&amp;#39;&lt;/span&gt;, 1&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        setTimeout&lt;span class="o"&gt;(()=&lt;/span&gt;&amp;gt;&lt;span class="o"&gt;{&lt;/span&gt;
            console.log&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;haha&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            console.log&lt;span class="o"&gt;(&lt;/span&gt;wrapper.text&lt;span class="o"&gt;())&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            wrapper.update&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            expect&lt;span class="o"&gt;(&lt;/span&gt;wrapper.contains&lt;span class="o"&gt;(&lt;/span&gt;&amp;lt;span&amp;gt;Fay&amp;lt;br /&amp;gt;&amp;lt;/span&amp;gt;&lt;span class="o"&gt;))&lt;/span&gt;.to.equal&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;, 100&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Results / 结果 :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;PASS  src/pages/App.test.js
&amp;lt;SubAV /&amp;gt;
    ✓ renders &lt;span class="m"&gt;1&lt;/span&gt; &amp;lt;Row /&amp;gt; components &lt;span class="o"&gt;(&lt;/span&gt;6ms&lt;span class="o"&gt;)&lt;/span&gt;
    ✓ renders &lt;span class="m"&gt;4&lt;/span&gt; &amp;lt;Card /&amp;gt; components &lt;span class="o"&gt;(&lt;/span&gt;3ms&lt;span class="o"&gt;)&lt;/span&gt;
    ✓ calls componentDidMount
&amp;lt;SampleRest /&amp;gt;
    ✓ calls componentDidMount &lt;span class="o"&gt;(&lt;/span&gt;115ms&lt;span class="o"&gt;)&lt;/span&gt;

Test Suites: &lt;span class="m"&gt;1&lt;/span&gt; passed, &lt;span class="m"&gt;1&lt;/span&gt; total
Tests:       &lt;span class="m"&gt;4&lt;/span&gt; passed, &lt;span class="m"&gt;4&lt;/span&gt; total
Snapshots:   &lt;span class="m"&gt;0&lt;/span&gt; total
Time:        1.881s, estimated 2s
Ran all &lt;span class="nb"&gt;test&lt;/span&gt; suites related to changed files.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="l10n"&gt;
&lt;h2&gt;5. &lt;a class="toc-backref" href="#id5"&gt;L10N / 本地化&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;React itself cannot support L10N. We have to rely on other libraries to implement this.
As one of the most popular library id &lt;code&gt;react-intl&lt;/code&gt; (Developed by yahoo 8K).&lt;/p&gt;
&lt;p&gt;React 本身不支持 L10N， 我们需要依赖于其他的模块。 最流行的目前是 yahoo 的 &lt;code&gt;react-intl&lt;/code&gt; .&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;Other choice: 其他的选择为:&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;&lt;code&gt;react-i18next&lt;/code&gt;  ( &lt;a class="reference external" href="https://github.com/i18next/react-i18next"&gt;https://github.com/i18next/react-i18next&lt;/a&gt;  2K)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;react-intl-universal&lt;/code&gt; ( &lt;a class="reference external" href="https://github.com/alibaba/react-intl-universal"&gt;https://github.com/alibaba/react-intl-universal&lt;/a&gt; Supported by Alibaba 206)&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Sample with &lt;code&gt;react-intl&lt;/code&gt; / 以 &lt;code&gt;react-intl&lt;/code&gt;  为例。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Install / 安装  &lt;code&gt;npm install react-intl&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Code in &lt;code&gt;l10n.zh.json&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;common&amp;quot;&lt;/span&gt; : &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;PRODUCT_NAME&amp;quot;&lt;/span&gt; : &lt;span class="s2"&gt;&amp;quot;亚信安全&amp;amp;trade; AIS Edge&amp;quot;&lt;/span&gt;,
        &lt;span class="s2"&gt;&amp;quot;PRODUCT_LONG_NAME&amp;quot;&lt;/span&gt; : &lt;span class="s2"&gt;&amp;quot;亚信安全&amp;amp;trade; Deep Edge&amp;quot;&lt;/span&gt;,
        &lt;span class="s2"&gt;&amp;quot;PRODUCT_FULL_NAME&amp;quot;&lt;/span&gt; : &lt;span class="s2"&gt;&amp;quot;Deep Edge&amp;quot;&lt;/span&gt;,
        &lt;span class="s2"&gt;&amp;quot;PRODUCT_SHORT_NAME&amp;quot;&lt;/span&gt; : &lt;span class="s2"&gt;&amp;quot;TM-DE&amp;quot;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Code in &lt;code&gt;l10n.en.json&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;common&amp;quot;&lt;/span&gt; : &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;PRODUCT_NAME&amp;quot;&lt;/span&gt; : &lt;span class="s2"&gt;&amp;quot;Trend Micro&amp;amp;trade; Deep Edge&amp;quot;&lt;/span&gt;,
        &lt;span class="s2"&gt;&amp;quot;PRODUCT_LONG_NAME&amp;quot;&lt;/span&gt; : &lt;span class="s2"&gt;&amp;quot;Trend Micro&amp;amp;trade; Deep Edge&amp;quot;&lt;/span&gt;,
        &lt;span class="s2"&gt;&amp;quot;PRODUCT_FULL_NAME&amp;quot;&lt;/span&gt; : &lt;span class="s2"&gt;&amp;quot;Deep Edge&amp;quot;&lt;/span&gt;,
        &lt;span class="s2"&gt;&amp;quot;PRODUCT_SHORT_NAME&amp;quot;&lt;/span&gt; : &lt;span class="s2"&gt;&amp;quot;TM-DE&amp;quot;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Load data and init: / 导入数据 并且初始化：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;en&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; flat&lt;span class="o"&gt;(&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;./public/l10n/l10n.en.json&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
const &lt;span class="nv"&gt;zh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; flat&lt;span class="o"&gt;(&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;./public/l10n/l10n.zh.json&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

ReactDOM.render&lt;span class="o"&gt;(&lt;/span&gt;
    &amp;lt;IntlProvider &lt;span class="nv"&gt;locale&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;en&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;messages&lt;/span&gt;&lt;span class="o"&gt;={&lt;/span&gt;en&lt;span class="o"&gt;}&lt;/span&gt;&amp;gt;
        &amp;lt;Router&amp;gt;
            &amp;lt;App /&amp;gt;
        &amp;lt;/Router&amp;gt;
    &amp;lt;/IntlProvider&amp;gt;,
    document.getElementById&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;root&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
registerServiceWorker&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;How to use it / 如何使用:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;class SampleL10N extends Component &lt;span class="o"&gt;{&lt;/span&gt;

    constructor&lt;span class="o"&gt;(&lt;/span&gt;props&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        super&lt;span class="o"&gt;(&lt;/span&gt;props&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    render&lt;span class="o"&gt;(){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &amp;lt;FormattedMessage &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;common.PRODUCT_NAME&amp;quot;&lt;/span&gt; /&amp;gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/web/react_sharing_0006.png" /&gt;
&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/web/react_sharing_0007.png" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="router-conception-router"&gt;
&lt;h2&gt;6. &lt;a class="toc-backref" href="#id6"&gt;Router Conception / Router的概念&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;React has its own compatible router module.&lt;/p&gt;
&lt;p&gt;React的路由是开放的，但是facebook 仍然提供了一个比较官方的路由模块。&lt;/p&gt;
&lt;p&gt;Ref: &lt;a class="reference external" href="https://reacttraining.com/react-router/web/guides/philosophy"&gt;https://reacttraining.com/react-router/web/guides/philosophy&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Routers / 总路由模块&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;use a &amp;lt;BrowserRouter&amp;gt; if you have a server that responds to requests and&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;BrowserRouter : 存在server端逻辑&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;use a &amp;lt;HashRouter&amp;gt; if you are using a static file server.&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first"&gt;HashRouter : server端只需要提供静态文件和其他的 Restful API&lt;/p&gt;
&lt;dl class="last docutils"&gt;
&lt;dt&gt;IE: &lt;a class="reference external" href="https://10.21.137.42/policy/objects"&gt;https://10.21.137.42/policy/objects&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;blockquote class="first"&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;=&amp;gt; It can be a server API or a Page router&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;这个URL 在浏览器中输入时，浏览器向后端请求的就是完整的 API， 可能是一个静态页面，也可能是一个Restful API&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/blockquote&gt;
&lt;dl class="last docutils"&gt;
&lt;dt&gt;&lt;a class="reference external" href="https://10.21.137.42/#/policy/objects"&gt;https://10.21.137.42/#/policy/objects&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;dl class="first last docutils"&gt;
&lt;dt&gt;=&amp;gt; It will always call  &lt;a class="reference external" href="https://10.21.137.42/"&gt;https://10.21.137.42/&lt;/a&gt; to get static file and render nextly.&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;这个URL 则一定是 &lt;a class="reference external" href="https://10.21.137.42/"&gt;https://10.21.137.42/&lt;/a&gt; 的静态文件，Hash 后面的参数是在后面render的时候使用的。&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Route Matching / 路由匹配&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;You can include a &amp;lt;Route&amp;gt; anywhere that you want to render content based on the location.&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;It will often make sense to list a number of possible &amp;lt;Route&amp;gt;s next to each other.
路由匹配将 URL 和对应的 组件相关联。&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;The &amp;lt;Switch&amp;gt; component is used to group &amp;lt;Route&amp;gt;s together.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;Route &lt;span class="nv"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/about&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;component&lt;/span&gt;&lt;span class="o"&gt;={&lt;/span&gt;About&lt;span class="o"&gt;}&lt;/span&gt;/&amp;gt; // renders &amp;lt;About/&amp;gt;
&amp;lt;Route &lt;span class="nv"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/contact&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;component&lt;/span&gt;&lt;span class="o"&gt;={&lt;/span&gt;Contact&lt;span class="o"&gt;}&lt;/span&gt;/&amp;gt; // renders null
&amp;lt;Route &lt;span class="nv"&gt;component&lt;/span&gt;&lt;span class="o"&gt;={&lt;/span&gt;Always&lt;span class="o"&gt;}&lt;/span&gt;/&amp;gt; // renders &amp;lt;Always/&amp;gt;

&amp;lt;Switch&amp;gt;
    &amp;lt;Route exact &lt;span class="nv"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;component&lt;/span&gt;&lt;span class="o"&gt;={&lt;/span&gt;Home&lt;span class="o"&gt;}&lt;/span&gt;/&amp;gt;
    &amp;lt;Route &lt;span class="nv"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/about&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;component&lt;/span&gt;&lt;span class="o"&gt;={&lt;/span&gt;About&lt;span class="o"&gt;}&lt;/span&gt;/&amp;gt;
    &amp;lt;Route &lt;span class="nv"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/contact&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;component&lt;/span&gt;&lt;span class="o"&gt;={&lt;/span&gt;Contact&lt;span class="o"&gt;}&lt;/span&gt;/&amp;gt;
&amp;lt;/Switch&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Route Rendering Props / 路由渲染属性&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;Route&amp;gt;: component, render, and children  可以使用这三种方法， 但是推荐的做法是 component 和 children.
You should not use the component prop with an inline function to pass in-scope variables because you will get undesired component unmounts/remounts.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;/* &lt;span class="k"&gt;do&lt;/span&gt; not &lt;span class="k"&gt;do&lt;/span&gt; this */&lt;span class="o"&gt;}&lt;/span&gt;
&amp;lt;Route
    &lt;span class="nv"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/contact&amp;#39;&lt;/span&gt;
    &lt;span class="nv"&gt;component&lt;/span&gt;&lt;span class="o"&gt;={(&lt;/span&gt;props&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &amp;lt;Contact &lt;span class="o"&gt;{&lt;/span&gt;...props&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="nv"&gt;extra&lt;/span&gt;&lt;span class="o"&gt;={&lt;/span&gt;someVariable&lt;span class="o"&gt;}&lt;/span&gt; /&amp;gt;&lt;span class="o"&gt;}&lt;/span&gt;
/&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Navigation / 导航&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;React Router provides a &amp;lt;Link&amp;gt; component to create links in your application.&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;Wherever you render a &amp;lt;Link&amp;gt;, an anchor (&amp;lt;a&amp;gt;) will be rendered in your application’s HTML.
Route 是确定什么样的URL 渲染怎样的组件， 而 Link 和 NavLink 则是 UI 上怎么显示这些锚点 并且相关联。&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;The &amp;lt;NavLink&amp;gt; is a special type of &amp;lt;Link&amp;gt; that can style itself as “active” when its to prop matches the current location.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="warning"&gt;
&lt;p class="first admonition-title"&gt;Warning&lt;/p&gt;
&lt;div class="last line-block"&gt;
&lt;div class="line"&gt;NavLink can cause conflict with reactstrap NavLink, when imported, please add alias to escape.&lt;/div&gt;
&lt;div class="line"&gt;NavLink 会和 reactstrap NavLink 产生冲突，引入时请指定别名。&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="route-implement"&gt;
&lt;h2&gt;7. &lt;a class="toc-backref" href="#id7"&gt;Route implement / 路由使用实现&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Install / 安装&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;npm install react-router-dom&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(The &lt;code&gt;create-react-app&lt;/code&gt; will download it automatically as it is so basic  / 默认是安装好的)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Bootstrap install (for theme) / 安装 Bootstrap 和 Reactstrap (CSS 样式和默认组件).&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;reactstrap&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^6.4.0&amp;quot;&lt;/span&gt;,
&lt;span class="s2"&gt;&amp;quot;bootstrap&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;4.1.1&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Use &lt;code&gt;NavBar&lt;/code&gt; in reactstrap to render basic CSS.&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first"&gt;使用 reactstrap 的 &lt;code&gt;NavBar&lt;/code&gt; 就会有基本的CSS 样式。&lt;/p&gt;
&lt;div class="last"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;import &lt;span class="o"&gt;{&lt;/span&gt; NavLink as RouterNavLink, Link,  Route &lt;span class="o"&gt;}&lt;/span&gt; from &lt;span class="s1"&gt;&amp;#39;react-router-dom&amp;#39;&lt;/span&gt;
import &lt;span class="o"&gt;{&lt;/span&gt;Button, Navbar, Nav, NavItem, NavLink as BoostNavLink, UncontrolledDropdown,
    DropdownToggle, DropdownMenu, DropdownItem&lt;span class="o"&gt;}&lt;/span&gt; from &lt;span class="s1"&gt;&amp;#39;reactstrap&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

const &lt;span class="nv"&gt;Dashboard&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;(&lt;/span&gt;
&amp;lt;div&amp;gt;
    &amp;lt;h2&amp;gt;Dashboard&amp;lt;/h2&amp;gt;
&amp;lt;/div&amp;gt;
&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

class App extends Component &lt;span class="o"&gt;{&lt;/span&gt;
    constructor&lt;span class="o"&gt;(&lt;/span&gt;props&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        super&lt;span class="o"&gt;(&lt;/span&gt;props&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    render&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;
        &amp;lt;div&amp;gt;
            &amp;lt;Navbar &lt;span class="nv"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;dark&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;expand&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;md&amp;quot;&lt;/span&gt;&amp;gt;
            &amp;lt;img &lt;span class="nv"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;navLogo&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;src&lt;/span&gt;&lt;span class="o"&gt;={&lt;/span&gt;toplogo&lt;span class="o"&gt;}&lt;/span&gt; /&amp;gt;
            &amp;lt;Nav navbar&amp;gt;
                &amp;lt;NavItem&amp;gt;
                &amp;lt;Button &lt;span class="nv"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;link&amp;quot;&lt;/span&gt;&amp;gt;
                    &amp;lt;Link &lt;span class="nv"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/dashboard&amp;quot;&lt;/span&gt;&amp;gt;实时监控&amp;lt;/Link&amp;gt;
                &amp;lt;/Button&amp;gt;
                &amp;lt;/NavItem&amp;gt;
                ...
            &amp;lt;/Nav&amp;gt;
            &amp;lt;/Navbar&amp;gt;

        &amp;lt;Route &lt;span class="nv"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/dashboard&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;component&lt;/span&gt;&lt;span class="o"&gt;={&lt;/span&gt;Dashboard&lt;span class="o"&gt;}&lt;/span&gt; /&amp;gt;
        &amp;lt;Route &lt;span class="nv"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/network&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;component&lt;/span&gt;&lt;span class="o"&gt;={&lt;/span&gt;Network&lt;span class="o"&gt;}&lt;/span&gt; /&amp;gt;
        &amp;lt;/div&amp;gt;
        &lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And the results / 结果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/web/react_sharing_0001.png" /&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="deploy-and-debug"&gt;
&lt;h2&gt;8. &lt;a class="toc-backref" href="#id8"&gt;Deploy and Debug 部署和调试&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Debug / 调试&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If we just want to develop a pure web Application, it will be quite easy, we didn't have to do anything as React has done it for us.
However, everything is not so easy.&lt;/p&gt;
&lt;p&gt;如果我们只是想开发一个单纯的没有后台交互的Web App, 非常简单，我们不需要做任何其他的操作就可以直接调试。 React已经做好了所有的事情。
但是， 我们的Web不可能只有前台。&lt;/p&gt;
&lt;p&gt;As reference to Graylog, which I'm quite familiar with, I think the best way is to use local Web Resources with remote.&lt;/p&gt;
&lt;p&gt;参考比较大型正规的框架  Graylog，最简单和实用的办法是: 使用本地的UI 资源和远端的Restful API.&lt;/p&gt;
&lt;p&gt;please refer to how to set up a Web Server with Express quickly .&lt;/p&gt;
&lt;p&gt;如何构建一个简单地后台Restful 程序， 请参考：WebSharing (两分钟上手).&lt;/p&gt;
&lt;p&gt;Now lets use web in local and rest API in remote.&lt;/p&gt;
&lt;p&gt;现在我们来验证这种模式.&lt;/p&gt;
&lt;p&gt;Let's modify Network Page.&lt;/p&gt;
&lt;p&gt;首先是更新一下 网络 页面:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;class Network extends Component &lt;span class="o"&gt;{&lt;/span&gt;
    constructor&lt;span class="o"&gt;(&lt;/span&gt;props&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        super&lt;span class="o"&gt;(&lt;/span&gt;props&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        this.state &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        members: &lt;span class="o"&gt;[]&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    componentDidMount&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        fetch&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://localhost:3001/rest/de_members&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
        .then&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; response.json&lt;span class="o"&gt;())&lt;/span&gt;
        .then&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; this.setState&lt;span class="o"&gt;({&lt;/span&gt;members: data&lt;span class="o"&gt;}))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    render&lt;span class="o"&gt;(){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &amp;lt;div&amp;gt;
            &amp;lt;h2&amp;gt;Network1&amp;lt;/h2&amp;gt;
            &amp;lt;p&amp;gt;Response from localhost:3001 CROS and run in localhost:3000&amp;lt;/p&amp;gt;
            &lt;span class="o"&gt;{&lt;/span&gt;this.state.members.map&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;item&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;gt;&lt;span class="o"&gt;(&lt;/span&gt;&amp;lt;span&amp;gt;&lt;span class="o"&gt;{&lt;/span&gt;item&lt;span class="o"&gt;}&lt;/span&gt;&amp;lt;br /&amp;gt;&amp;lt;/span&amp;gt;&lt;span class="o"&gt;))}&lt;/span&gt;
        &amp;lt;/div&amp;gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We enable CORS on the server so that we can fetch results and apply in another App.&lt;/p&gt;
&lt;p&gt;在后台， 我们需要使能 CORS, 这是个漏洞，但是调试很方便。这样的话我们就能跨域拿到资源。&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/web/react_sharing_0003.png" /&gt;
&lt;/div&gt;
&lt;p&gt;All API are provided from backend, so we may have to modify our Backend App to provide  a more friendly API.&lt;/p&gt;
&lt;p&gt;现在我们看到的Restful 都是 后台拿到的， UI 用的是本地的资源。 这样开发的话， DE 的后台可能也需要进项相应的修改已提供更友好的 Restful API.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Deploy / 部署&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Generate static file: &lt;code&gt;npm run build&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;将React 代码编译成 IE9+ 可以接受的语法： &lt;code&gt;npm run build&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Let's see what has been generated.&lt;/p&gt;
&lt;p&gt;可以查看下生成了什么:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;build/
├── asset-manifest.json
├── favicon.png
├── index.css
├── index.html
├── manifest.json
├── service-worker.js
└── static
    ├── css
    │   ├── main.331fc925.css
    │   └── main.331fc925.css.map
    └── js
        ├── main.9f57e139.js
        └── main.9f57e139.js.map
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All js and lib files are combined into 1 file, which is &lt;code&gt;main.9f57e139.js&lt;/code&gt; .
&lt;code&gt;main.9f57e139.js.map&lt;/code&gt; is used for debugging.&lt;/p&gt;
&lt;p&gt;所有的库文件 和 我们的代码文件都会被压缩合并到同一个文件中.&lt;/p&gt;
&lt;p&gt;Let's run it in a static file server.&lt;/p&gt;
&lt;p&gt;我们可以将这些静态文件用一个静态服务器运行:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;npm install -g serve
serve -s build
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Visit / 访问他:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/web/react_sharing_0004.png" /&gt;
&lt;/div&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;However, usually we will use Webpack and Loadable. / 当然， 通常我们会使用 Webpack 和 Loadable.&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;Webpack: Compress, uglify and minimize files. / 用于压缩 编译 最小化文件&lt;/li&gt;
&lt;li&gt;Loadable: Separate into different files. / 用户将单个 JS 拆分成多个 防止单个文件过大&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="React"></category><category term="Store"></category><category term="Reflux"></category><category term="Web"></category><category term="node"></category></entry><entry><title>Vue Sharing / Vue 框架分享</title><link href="https://brianshen1990.github.io/Vue_Sharing.html" rel="alternate"></link><published>2018-09-19T00:00:00+08:00</published><updated>2018-09-19T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:brianshen1990.github.io,2018-09-19:/Vue_Sharing.html</id><summary type="html">&lt;p class="first last"&gt;Vue Sharing&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#intro" id="id1"&gt;Intro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#dev-environment-establish" id="id2"&gt;Dev Environment Establish / 开发环境搭建&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#basic-components" id="id3"&gt;Basic Components / 基础组件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#test" id="id4"&gt;Test / 测试&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#l10n" id="id5"&gt;L10N / 本地化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#router-conception-and-router-implementation" id="id6"&gt;Router Conception and Router Implementation / 路由概念和实现&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#debug-and-deploy" id="id7"&gt;Debug And Deploy / 调试和部署&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="intro"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id1"&gt;Intro&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Amazing compatibility. / 无限的融合和兼容&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Upgrade =&amp;gt; React Components&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;向上可以到达React 模式
React + Reflux =&amp;gt; Vuejs + Vuex&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Downgrade =&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;向下可以到达 AngularJS 声明式 和 双向绑定&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="dev-environment-establish"&gt;
&lt;span id="vue-sharing-rst"&gt;&lt;/span&gt;&lt;h2&gt;2. &lt;a class="toc-backref" href="#id2"&gt;Dev Environment Establish / 开发环境搭建&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Install / 安装:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Download Node from &lt;a class="reference external" href="https://nodejs.org/en/"&gt;https://nodejs.org/en/&lt;/a&gt; and install.&lt;/p&gt;
&lt;p&gt;下载 Node 并且安装。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;npm install -g @vue/cli
vue create hello-world
npm run serve
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;let's have a look at what files have been generated / 看一下Vue 脚手架程序自动生成的目录:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./
├── README.md
├── babel.config.js &lt;span class="o"&gt;(&lt;/span&gt;ES6 解析&lt;span class="o"&gt;)&lt;/span&gt;
├── node_modules  &lt;span class="o"&gt;(&lt;/span&gt;库&lt;span class="o"&gt;)&lt;/span&gt;
├── package-lock.json
├── package.json  &lt;span class="o"&gt;(&lt;/span&gt;依赖声明和脚本&lt;span class="o"&gt;)&lt;/span&gt;
├── public   &lt;span class="o"&gt;(&lt;/span&gt;静态库&lt;span class="o"&gt;)&lt;/span&gt;
    ├── favicon.ico
    └── index.html
└── src  &lt;span class="o"&gt;(&lt;/span&gt;代码&lt;span class="o"&gt;)&lt;/span&gt;
    ├── App.vue  &lt;span class="o"&gt;(&lt;/span&gt;默认App&lt;span class="o"&gt;)&lt;/span&gt;
    ├── assets   &lt;span class="o"&gt;(&lt;/span&gt;使用文件&lt;span class="o"&gt;)&lt;/span&gt;
    │   └── logo.png
    ├── components &lt;span class="o"&gt;(&lt;/span&gt;组件&lt;span class="o"&gt;)&lt;/span&gt;
    │   └── HelloWorld.vue
    └── main.js &lt;span class="o"&gt;(&lt;/span&gt;主入口&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="basic-components"&gt;
&lt;h2&gt;3. &lt;a class="toc-backref" href="#id3"&gt;Basic Components / 基础组件&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;SubAV: Most code is copied from bootstrapVue.  /大部分的代码拷贝自 bootstrapVue .&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;template&amp;gt;
    &amp;lt;div&amp;gt;
    &amp;lt;b-form-checkbox &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;checkbox1&amp;quot;&lt;/span&gt;
                        v-model&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;
                        &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;
                        unchecked-value&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;&amp;gt;
        防恶意软件安全措施
        &amp;lt;/b-form-checkbox&amp;gt;
            &amp;lt;b-card&amp;gt;
            &amp;lt;h5 &lt;span class="nv"&gt;slot&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;header&amp;quot;&lt;/span&gt; v-b-toggle.collapse1&amp;gt;高级威胁扫描&amp;lt;/h5&amp;gt;
            &amp;lt;b-collapse &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;collapse1&amp;quot;&lt;/span&gt; visible&amp;gt;
            &amp;lt;b-form-checkbox &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;checkbox2&amp;quot;&lt;/span&gt;
                        v-model&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;status2&amp;quot;&lt;/span&gt;
                        &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;
                        unchecked-value&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;&amp;gt;
                启用高级威胁扫描引擎
            &amp;lt;/b-form-checkbox&amp;gt;
            &amp;lt;br /&amp;gt;
            &amp;lt;b-form-checkbox &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;checkbox3&amp;quot;&lt;/span&gt;
                        v-model&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;status3&amp;quot;&lt;/span&gt;
                        &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;
                        unchecked-value&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;&amp;gt;
                集成深度威胁发现设备 TDA 拒绝列表
            &amp;lt;/b-form-checkbox&amp;gt;
            &amp;lt;/b-collapse&amp;gt;
        &amp;lt;/b-card&amp;gt;
        &amp;lt;b-card &amp;gt;
        &amp;lt;h5 &lt;span class="nv"&gt;slot&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;header&amp;quot;&lt;/span&gt; v-b-toggle.collapse2&amp;gt;防恶意软件&amp;lt;/h5&amp;gt;
            &amp;lt;b-collapse &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;collapse2&amp;quot;&lt;/span&gt;&amp;gt;
            &amp;lt;p &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;card-text&amp;quot;&lt;/span&gt;&amp;gt;Header and footers using props.&amp;lt;/p&amp;gt;
            &amp;lt;/b-collapse&amp;gt;
        &amp;lt;/b-card&amp;gt;
        &amp;lt;b-card &amp;gt;
            &amp;lt;h5 &lt;span class="nv"&gt;slot&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;header&amp;quot;&lt;/span&gt; v-b-toggle.collapse3&amp;gt;扫描优化&amp;lt;/h5&amp;gt;
            &amp;lt;b-collapse &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;collapse3&amp;quot;&lt;/span&gt;&amp;gt;
            &amp;lt;p &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;card-text&amp;quot;&lt;/span&gt;&amp;gt;Header and footers using props.&amp;lt;/p&amp;gt;
            &amp;lt;/b-collapse&amp;gt;
        &amp;lt;/b-card&amp;gt;
        &amp;lt;b-card&amp;gt;
            &amp;lt;h5 &lt;span class="nv"&gt;slot&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;header&amp;quot;&lt;/span&gt; v-b-toggle.collapse4&amp;gt;防恶意软件设置&amp;lt;/h5&amp;gt;
            &amp;lt;b-collapse &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;collapse4&amp;quot;&lt;/span&gt;&amp;gt;
            &amp;lt;p &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;card-text&amp;quot;&lt;/span&gt;&amp;gt;Header and footers using props.&amp;lt;/p&amp;gt;
            &amp;lt;/b-collapse&amp;gt;
        &amp;lt;/b-card&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
&lt;span class="nb"&gt;export&lt;/span&gt; default &lt;span class="o"&gt;{&lt;/span&gt;
    name: &lt;span class="s1"&gt;&amp;#39;SubAV&amp;#39;&lt;/span&gt;,
    data &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            status: &lt;span class="s1"&gt;&amp;#39;false&amp;#39;&lt;/span&gt;,
            status2: &lt;span class="s1"&gt;&amp;#39;false&amp;#39;&lt;/span&gt;,
            status3: &lt;span class="s1"&gt;&amp;#39;false&amp;#39;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use it / 组件定义好后可以被引用，就像一个模块一样:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;template&amp;gt;
    &amp;lt;div&amp;gt;
        &amp;lt;b-tabs&amp;gt;
        &amp;lt;b-tab &lt;span class="nv"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;入侵防御及虚拟补丁&amp;quot;&lt;/span&gt; active&amp;gt;
            &amp;lt;br&amp;gt;I&lt;span class="s1"&gt;&amp;#39;m the first fading tab&lt;/span&gt;
&lt;span class="s1"&gt;        &amp;lt;/b-tab&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;        &amp;lt;b-tab title=&amp;quot;防恶意软件&amp;quot; &amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;            &amp;lt;br&amp;gt; &amp;lt;subAV&amp;gt;&amp;lt;/subAV&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;        &amp;lt;/b-tab&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;        &amp;lt;b-tab title=&amp;quot;反垃圾邮件&amp;quot; &amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;            &amp;lt;br&amp;gt;I&amp;#39;&lt;/span&gt;m the second tab content
        &amp;lt;/b-tab&amp;gt;
        &amp;lt;b-tab &lt;span class="nv"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Web信誉服务&amp;quot;&lt;/span&gt; &amp;gt;
            &amp;lt;br&amp;gt;I&lt;span class="s1"&gt;&amp;#39;m the second tab content&lt;/span&gt;
&lt;span class="s1"&gt;        &amp;lt;/b-tab&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;        &amp;lt;/b-tabs&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

&lt;span class="s1"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;    import SubAV from &amp;#39;&lt;/span&gt;./SubAV.vue&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;    export default {&lt;/span&gt;
&lt;span class="s1"&gt;        name: &amp;#39;&lt;/span&gt;ComponentSample&lt;span class="s1"&gt;&amp;#39;,&lt;/span&gt;
&lt;span class="s1"&gt;        components: {&lt;/span&gt;
&lt;span class="s1"&gt;            &amp;#39;&lt;/span&gt;subAV&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;: SubAV,
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/web/vue_sharing_0004.png" /&gt;
&lt;/div&gt;
&lt;p&gt;Add some CSS / 添加CSS :&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/web/vue_sharing_0005.png" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="test"&gt;
&lt;h2&gt;4. &lt;a class="toc-backref" href="#id4"&gt;Test / 测试&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Install:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vue add @vue/unit-mocha
npm install moxios --save-dev
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Component / 看一下组件代码:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;template&amp;gt;
    &amp;lt;div&amp;gt;
        RestSample
        &amp;lt;p&amp;gt;Following info are from remote:&amp;lt;/p&amp;gt;
        &amp;lt;ul&amp;gt;
            &amp;lt;li v-for&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;(item, index) in items&amp;quot;&lt;/span&gt; :key&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;index&amp;quot;&lt;/span&gt;&amp;gt;
                &lt;span class="o"&gt;{{&lt;/span&gt; item &lt;span class="o"&gt;}}&lt;/span&gt;
            &amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
    import axios from &lt;span class="s1"&gt;&amp;#39;axios&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;export&lt;/span&gt; default &lt;span class="o"&gt;{&lt;/span&gt;
        data&lt;span class="o"&gt;(){&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            items: &lt;span class="o"&gt;[]&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;,
        mounted: &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
            const &lt;span class="nv"&gt;_that&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; this&lt;span class="p"&gt;;&lt;/span&gt;
            axios.get&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://localhost:3001/rest/de_members&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
            .then&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;response&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                // handle success
                // console.log&lt;span class="o"&gt;(&lt;/span&gt;response&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                _that.items &lt;span class="o"&gt;=&lt;/span&gt; response.data&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="o"&gt;})&lt;/span&gt;
            .catch&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                // handle error
                //console.log&lt;span class="o"&gt;(&lt;/span&gt;error&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="o"&gt;})&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;,
        methods:&lt;span class="o"&gt;{&lt;/span&gt;

        &lt;span class="o"&gt;}&lt;/span&gt;,
        name: &lt;span class="s1"&gt;&amp;#39;RestSample&amp;#39;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/web/Vue_Lifecycle.png" /&gt;
&lt;/div&gt;
&lt;p&gt;Test / 看一下如何测试:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;import Vue from &lt;span class="s1"&gt;&amp;#39;vue&amp;#39;&lt;/span&gt;
import &lt;span class="o"&gt;{&lt;/span&gt; expect &lt;span class="o"&gt;}&lt;/span&gt; from &lt;span class="s1"&gt;&amp;#39;chai&amp;#39;&lt;/span&gt;
import &lt;span class="o"&gt;{&lt;/span&gt; shallowMount &lt;span class="o"&gt;}&lt;/span&gt; from &lt;span class="s1"&gt;&amp;#39;@vue/test-utils&amp;#39;&lt;/span&gt;
import Dashboard from &lt;span class="s1"&gt;&amp;#39;@/components/Dashboard.vue&amp;#39;&lt;/span&gt;
import RestSample from &lt;span class="s1"&gt;&amp;#39;@/components/RestSample.vue&amp;#39;&lt;/span&gt;
import moxios from &lt;span class="s1"&gt;&amp;#39;moxios&amp;#39;&lt;/span&gt;

describe&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Dashboard.vue&amp;#39;&lt;/span&gt;, &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;
    it&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;renders&amp;#39;&lt;/span&gt;, &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;
        const &lt;span class="nv"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Dashboard&amp;#39;&lt;/span&gt;
        const &lt;span class="nv"&gt;wrapper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; shallowMount&lt;span class="o"&gt;(&lt;/span&gt;Dashboard&lt;span class="o"&gt;)&lt;/span&gt;
        expect&lt;span class="o"&gt;(&lt;/span&gt;wrapper.text&lt;span class="o"&gt;())&lt;/span&gt;.to.include&lt;span class="o"&gt;(&lt;/span&gt;msg&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;})&lt;/span&gt;
&lt;span class="o"&gt;})&lt;/span&gt;

describe&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;RestSample Static&amp;#39;&lt;/span&gt;, &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;
    it&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;has a mounted hook&amp;#39;&lt;/span&gt;, &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;
        expect&lt;span class="o"&gt;(&lt;/span&gt;typeof RestSample.mounted&lt;span class="o"&gt;)&lt;/span&gt;.to.eq&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;function&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;})&lt;/span&gt;
    it&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sets the correct default data&amp;#39;&lt;/span&gt;, &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;
        expect&lt;span class="o"&gt;(&lt;/span&gt;typeof RestSample.data&lt;span class="o"&gt;)&lt;/span&gt;.to.eq&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;function&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
        const &lt;span class="nv"&gt;defaultData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; RestSample.data&lt;span class="o"&gt;()&lt;/span&gt;
        expect&lt;span class="o"&gt;(&lt;/span&gt;defaultData.items.length&lt;span class="o"&gt;)&lt;/span&gt;.to.eq&lt;span class="o"&gt;(&lt;/span&gt;0&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;})&lt;/span&gt;
&lt;span class="o"&gt;})&lt;/span&gt;

describe&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;RestSample Async&amp;#39;&lt;/span&gt;, &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    beforeEach&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        // import and pass your custom axios instance to this method
        moxios.install&lt;span class="o"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;})&lt;/span&gt;
    afterEach&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        // import and pass your custom axios instance to this method
        moxios.uninstall&lt;span class="o"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;})&lt;/span&gt;
    it&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Mounted Fetch, should fetch and render correctly&amp;#39;&lt;/span&gt;, &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;
        const &lt;span class="nv"&gt;vm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; new Vue&lt;span class="o"&gt;(&lt;/span&gt;RestSample&lt;span class="o"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;$mount&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
        Vue.nextTick&lt;span class="o"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;
            moxios.wait&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; moxios.requests.mostRecent&lt;span class="o"&gt;()&lt;/span&gt;
                request.respondWith&lt;span class="o"&gt;({&lt;/span&gt;
                    status: 200,
                    response: &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Fred&amp;quot;&lt;/span&gt; ,&lt;span class="s2"&gt;&amp;quot;Ben&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
                &lt;span class="o"&gt;})&lt;/span&gt;.then&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                    expect&lt;span class="o"&gt;(&lt;/span&gt;vm.items&lt;span class="o"&gt;)&lt;/span&gt;.to.eql&lt;span class="o"&gt;([&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Fred&amp;quot;&lt;/span&gt; ,&lt;span class="s2"&gt;&amp;quot;Ben&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;])&lt;/span&gt;
                    expect&lt;span class="o"&gt;(&lt;/span&gt;vm.&lt;span class="nv"&gt;$el&lt;/span&gt;.textContent&lt;span class="o"&gt;)&lt;/span&gt;.to.include&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Ben&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
                    expect&lt;span class="o"&gt;(&lt;/span&gt;vm.&lt;span class="nv"&gt;$el&lt;/span&gt;.textContent&lt;span class="o"&gt;)&lt;/span&gt;.to.include&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Fred&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
                    //expect&lt;span class="o"&gt;(&lt;/span&gt;vm.&lt;span class="nv"&gt;$el&lt;/span&gt;.textContent&lt;span class="o"&gt;)&lt;/span&gt;.to.eq&lt;span class="o"&gt;(&lt;/span&gt;2&lt;span class="o"&gt;)&lt;/span&gt;
                    &lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
                &lt;span class="o"&gt;})&lt;/span&gt;
            &lt;span class="o"&gt;})&lt;/span&gt;
        &lt;span class="o"&gt;})&lt;/span&gt;
    &lt;span class="o"&gt;})&lt;/span&gt;
&lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Results / 结果:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;WEBPACK  Compiled successfully in 3252ms
MOCHA  Testing...

Dashboard.vue
    ✓ renders &lt;span class="o"&gt;(&lt;/span&gt;42ms&lt;span class="o"&gt;)&lt;/span&gt;

RestSample Static
    ✓ has a mounted hook
    ✓ sets the correct default data

RestSample Async
    ✓ Mounted Fetch, should fetch and render correctly &lt;span class="o"&gt;(&lt;/span&gt;323ms&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="m"&gt;4&lt;/span&gt; passing &lt;span class="o"&gt;(&lt;/span&gt;453ms&lt;span class="o"&gt;)&lt;/span&gt;

MOCHA  Tests completed successfully
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="l10n"&gt;
&lt;h2&gt;5. &lt;a class="toc-backref" href="#id5"&gt;L10N / 本地化&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Official Recommendation: &lt;code&gt;Vue-i18n&lt;/code&gt;  /  Vue 因为是新生产物，基本上每一个都有官方的库。推荐 &lt;code&gt;Vue-i18n&lt;/code&gt;  .&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;Install / 安装:&lt;/dt&gt;
&lt;dd&gt;&lt;code&gt;npm install vue-i18n&lt;/code&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Load it and init it / 导入并且初始化:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;import Vue from &lt;span class="s1"&gt;&amp;#39;vue&amp;#39;&lt;/span&gt;
import App from &lt;span class="s1"&gt;&amp;#39;./App.vue&amp;#39;&lt;/span&gt;
import router from &lt;span class="s2"&gt;&amp;quot;./router.js&amp;quot;&lt;/span&gt;
import &lt;span class="s1"&gt;&amp;#39;bootstrap/dist/css/bootstrap.css&amp;#39;&lt;/span&gt;
import &lt;span class="s1"&gt;&amp;#39;bootstrap-vue/dist/bootstrap-vue.css&amp;#39;&lt;/span&gt;
import VueI18n from &lt;span class="s1"&gt;&amp;#39;vue-i18n&amp;#39;&lt;/span&gt;

Vue.use&lt;span class="o"&gt;(&lt;/span&gt;VueI18n&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

const &lt;span class="nv"&gt;messages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    en: require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;./assets/l10n/l10n.en.json&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;,
    zh: require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;./assets/l10n/l10n.zh.json&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
const &lt;span class="nv"&gt;i18n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; new VueI18n&lt;span class="o"&gt;({&lt;/span&gt;
    locale: &lt;span class="s1"&gt;&amp;#39;zh&amp;#39;&lt;/span&gt;, // &lt;span class="nb"&gt;set&lt;/span&gt; locale
    messages, // &lt;span class="nb"&gt;set&lt;/span&gt; locale messages
&lt;span class="o"&gt;})&lt;/span&gt;

new Vue&lt;span class="o"&gt;({&lt;/span&gt;
    el: &lt;span class="s1"&gt;&amp;#39;#app&amp;#39;&lt;/span&gt;,
    router,
    i18n,
    render: &lt;span class="nv"&gt;h&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; h&lt;span class="o"&gt;(&lt;/span&gt;App&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use it / 使用:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;template&amp;gt;
    &amp;lt;div&amp;gt;
        L10N Sample
        &amp;lt;p&amp;gt;l10n&amp;lt;/p&amp;gt;
        &amp;lt;div&amp;gt;
        &amp;lt;p&amp;gt;&lt;span class="o"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;$t&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;common.PRODUCT_NAME&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;}}&lt;/span&gt;&amp;lt;/p&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
    &lt;span class="nb"&gt;export&lt;/span&gt; default &lt;span class="o"&gt;{&lt;/span&gt;
        name: &lt;span class="s1"&gt;&amp;#39;L10NSample&amp;#39;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/web/vue_sharing_0003.png" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="router-conception-and-router-implementation"&gt;
&lt;h2&gt;6. &lt;a class="toc-backref" href="#id6"&gt;Router Conception and Router Implementation / 路由概念和实现&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Install / 安装&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;a class="reference external" href="https://bootstrap-vue.js.org/docs/components/navbar"&gt;https://bootstrap-vue.js.org/docs/components/navbar&lt;/a&gt;)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;npm install vue-router
npm i bootstrap-vue   &lt;span class="o"&gt;[&lt;/span&gt;For them 为了添加样式&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now let's add some files to support router:&lt;/p&gt;
&lt;p&gt;我们可以添加一些文件来支持路由:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;src/
├── App.vue
├── assets
│   └── logo.png
├── components
│   ├── About.vue
│   ├── Dashboard.vue   &lt;span class="o"&gt;(&lt;/span&gt;Add/添加&lt;span class="o"&gt;)&lt;/span&gt;
│   ├── Home.vue   &lt;span class="o"&gt;(&lt;/span&gt;Add/添加&lt;span class="o"&gt;)&lt;/span&gt;
│   └── RestSample.vue  &lt;span class="o"&gt;(&lt;/span&gt;Add/添加&lt;span class="o"&gt;)&lt;/span&gt;
├── main.js
└── router.js  &lt;span class="o"&gt;(&lt;/span&gt;Add/添加&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;main.js&lt;/code&gt; :  use App and Router / 加载App 和 路由&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;import Vue from &lt;span class="s1"&gt;&amp;#39;vue&amp;#39;&lt;/span&gt;
import App from &lt;span class="s1"&gt;&amp;#39;./App.vue&amp;#39;&lt;/span&gt;
import router from &lt;span class="s2"&gt;&amp;quot;./router.js&amp;quot;&lt;/span&gt;
import &lt;span class="s1"&gt;&amp;#39;bootstrap/dist/css/bootstrap.css&amp;#39;&lt;/span&gt;
import &lt;span class="s1"&gt;&amp;#39;bootstrap-vue/dist/bootstrap-vue.css&amp;#39;&lt;/span&gt;

new Vue&lt;span class="o"&gt;({&lt;/span&gt;
    el: &lt;span class="s1"&gt;&amp;#39;#app&amp;#39;&lt;/span&gt;,
    router,
    render: &lt;span class="nv"&gt;h&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; h&lt;span class="o"&gt;(&lt;/span&gt;App&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;App.vue&lt;/code&gt; : html (Most code is copied from BootstrapVue / 发部分的模板拷贝自 BootstrapVue)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;template&amp;gt;
    &amp;lt;div &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;app&amp;quot;&lt;/span&gt;&amp;gt;
        &amp;lt;b-navbar &lt;span class="nv"&gt;toggleable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;md&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;variant&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;info&amp;quot;&lt;/span&gt;&amp;gt;
        &amp;lt;b-navbar-toggle &lt;span class="nv"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;nav_collapse&amp;quot;&lt;/span&gt;&amp;gt;&amp;lt;/b-navbar-toggle&amp;gt;
        &amp;lt;b-collapse is-nav &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;nav_collapse&amp;quot;&lt;/span&gt;&amp;gt;
            &amp;lt;b-navbar-nav&amp;gt;
            &amp;lt;b-nav-item&amp;gt;&amp;lt;router-link &lt;span class="nv"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/dashboard&amp;quot;&lt;/span&gt;&amp;gt;实时监控&amp;lt;/router-link&amp;gt;&amp;lt;/b-nav-item&amp;gt;
            &amp;lt;b-nav-item-dropdown &lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;网络&amp;quot;&lt;/span&gt; left&amp;gt;
                &amp;lt;b-dropdown-item&amp;gt;&amp;lt;router-link &lt;span class="nv"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/rest&amp;quot;&lt;/span&gt;&amp;gt;Sample Rest&amp;lt;/router-link&amp;gt;&amp;lt;/b-dropdown-item&amp;gt;
                &amp;lt;b-dropdown-item&amp;gt;&amp;lt;router-link &lt;span class="nv"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/l10n&amp;quot;&lt;/span&gt;&amp;gt;Sample L10N&amp;lt;/router-link&amp;gt;&amp;lt;/b-dropdown-item&amp;gt;
                &amp;lt;b-dropdown-item&amp;gt;&amp;lt;router-link &lt;span class="nv"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/components&amp;quot;&lt;/span&gt;&amp;gt;Sample Components&amp;lt;/router-link&amp;gt;&amp;lt;/b-dropdown-item&amp;gt;
            &amp;lt;/b-nav-item-dropdown&amp;gt;
            &amp;lt;b-nav-item&amp;gt;&amp;lt;router-link &lt;span class="nv"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/policy&amp;quot;&lt;/span&gt;&amp;gt;策略&amp;lt;/router-link&amp;gt;&amp;lt;/b-nav-item&amp;gt;
            &amp;lt;b-nav-item&amp;gt;&amp;lt;router-link &lt;span class="nv"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/report&amp;quot;&lt;/span&gt;&amp;gt;分析与报告&amp;lt;/router-link&amp;gt;&amp;lt;/b-nav-item&amp;gt;
            &amp;lt;b-nav-item&amp;gt;&amp;lt;router-link &lt;span class="nv"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/admin&amp;quot;&lt;/span&gt;&amp;gt;管理&amp;lt;/router-link&amp;gt;&amp;lt;/b-nav-item&amp;gt;
            &amp;lt;/b-navbar-nav&amp;gt;
        &amp;lt;/b-collapse&amp;gt;
        &amp;lt;/b-navbar&amp;gt;
        &amp;lt;router-view&amp;gt;&amp;lt;/router-view&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
    &lt;span class="nb"&gt;export&lt;/span&gt; default &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;router.js&lt;/code&gt; : define routes / 定义路由&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;import Vue from &lt;span class="s2"&gt;&amp;quot;vue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
import VueRouter from &lt;span class="s2"&gt;&amp;quot;vue-router&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
import BootstrapVue from &lt;span class="s1"&gt;&amp;#39;bootstrap-vue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
import Dashboard from &lt;span class="s1"&gt;&amp;#39;./components/Dashboard.vue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
import Home from &lt;span class="s1"&gt;&amp;#39;./components/Home.vue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
import About from &lt;span class="s1"&gt;&amp;#39;./components/About.vue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
import RestSample from &lt;span class="s1"&gt;&amp;#39;./components/RestSample.vue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

Vue.use&lt;span class="o"&gt;(&lt;/span&gt;VueRouter&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
Vue.use&lt;span class="o"&gt;(&lt;/span&gt;BootstrapVue&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

const &lt;span class="nv"&gt;routes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt; path:&lt;span class="s2"&gt;&amp;quot;/dashboard&amp;quot;&lt;/span&gt;, component: Dashboard &lt;span class="o"&gt;}&lt;/span&gt;,
    &lt;span class="o"&gt;{&lt;/span&gt; path:&lt;span class="s2"&gt;&amp;quot;/home&amp;quot;&lt;/span&gt;, component: Home &lt;span class="o"&gt;}&lt;/span&gt;,
    &lt;span class="o"&gt;{&lt;/span&gt; path:&lt;span class="s2"&gt;&amp;quot;/rest&amp;quot;&lt;/span&gt;, component: RestSample &lt;span class="o"&gt;}&lt;/span&gt;,
    &lt;span class="o"&gt;{&lt;/span&gt; path: &lt;span class="s2"&gt;&amp;quot;/about&amp;quot;&lt;/span&gt;, component: About&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
var &lt;span class="nv"&gt;router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  new VueRouter&lt;span class="o"&gt;({&lt;/span&gt;
    routes
&lt;span class="o"&gt;})&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; default router&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Dashboard.vue&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;template&amp;gt;
    &amp;lt;div&amp;gt;
        Dashboard
    &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
    &lt;span class="nb"&gt;export&lt;/span&gt; default &lt;span class="o"&gt;{&lt;/span&gt;
        name: &lt;span class="s1"&gt;&amp;#39;Dashboard&amp;#39;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Results: / 运行结果:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/web/vue_sharing_0001.png" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="debug-and-deploy"&gt;
&lt;h2&gt;7. &lt;a class="toc-backref" href="#id7"&gt;Debug And Deploy / 调试和部署&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Debug / 调试&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For Restful API, install &lt;code&gt;npm install axios&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;为了获取远端资源， 安装 &lt;code&gt;npm install axios&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="warning"&gt;
&lt;p class="first admonition-title"&gt;Warning&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;If you want to use console and debugger, in package.json:&lt;/div&gt;
&lt;div class="line"&gt;如果想使用  console 和 debugger， 请在  package.json里面添加:&lt;/div&gt;
&lt;/div&gt;
&lt;div class="last"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rules&amp;quot;&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;comma-dangle&amp;quot;&lt;/span&gt;: 0,
    &lt;span class="s2"&gt;&amp;quot;no-console&amp;quot;&lt;/span&gt;: 0,
    &lt;span class="s2"&gt;&amp;quot;no-debugger&amp;quot;&lt;/span&gt;: 0
&lt;span class="o"&gt;}&lt;/span&gt;,
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Use remote side API and local UI / 使用远端API 和 本地 UI:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;template&amp;gt;
    &amp;lt;div&amp;gt;
        RestSample
        &amp;lt;p&amp;gt;Following info are from remote:&amp;lt;/p&amp;gt;
        &amp;lt;ul&amp;gt;
        &amp;lt;li v-for&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;(item, index) in items&amp;quot;&lt;/span&gt; :key&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;index&amp;quot;&lt;/span&gt;&amp;gt;
            &lt;span class="o"&gt;{{&lt;/span&gt; item &lt;span class="o"&gt;}}&lt;/span&gt;
        &amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
    import axios from &lt;span class="s1"&gt;&amp;#39;axios&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;export&lt;/span&gt; default &lt;span class="o"&gt;{&lt;/span&gt;
        data&lt;span class="o"&gt;(){&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                items: &lt;span class="o"&gt;[]&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;,
        mounted: &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
            const &lt;span class="nv"&gt;_that&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; this&lt;span class="p"&gt;;&lt;/span&gt;
            axios.get&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://localhost:3001/rest/de_members&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
            .then&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;response&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                // handle success
                console.log&lt;span class="o"&gt;(&lt;/span&gt;response&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                debugger&lt;span class="p"&gt;;&lt;/span&gt;
                _that.items &lt;span class="o"&gt;=&lt;/span&gt; response.data&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="o"&gt;})&lt;/span&gt;
            .catch&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;error&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                // handle error
                console.log&lt;span class="o"&gt;(&lt;/span&gt;error&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="o"&gt;})&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;,
        name: &lt;span class="s1"&gt;&amp;#39;RestSample&amp;#39;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Deploy / 部署&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;npm run build
&lt;span class="c1"&gt;# npm install -g serve&lt;/span&gt;
serve -s dist

.. code-block:: bash

    ./dist/
    ├── css
    │   └── chunk-vendors.18ce9b24.css
    ├── favicon.ico
    ├── index.html
    └── js
        ├── app.2c52c92f.js
        ├── app.2c52c92f.js.map
        ├── chunk-vendors.9e2f9af0.js
        └── chunk-vendors.9e2f9af0.js.map

.. figure:: /images/web/vue_sharing_0002.png
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Amazing easy! 是非常容易的， 因为直接可以测试变量.&lt;/p&gt;
&lt;/div&gt;
</content><category term="React"></category><category term="Store"></category><category term="Reflux"></category><category term="Node"></category></entry><entry><title>Web Frameworks Sharing / Web框架分享</title><link href="https://brianshen1990.github.io/Web_Sharing.html" rel="alternate"></link><published>2018-09-19T00:00:00+08:00</published><updated>2018-09-19T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:brianshen1990.github.io,2018-09-19:/Web_Sharing.html</id><summary type="html">&lt;p class="first last"&gt;Web Knowledge&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;span id="web-sharing-rst"&gt;&lt;/span&gt;&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#why-we-should-use-ui-frameworks" id="id1"&gt;Why we should use UI Frameworks? / 为什么我们要使用框架&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#example" id="id2"&gt;Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#for-de" id="id3"&gt;For DE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#comparison" id="id4"&gt;Comparison 对比介绍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#react" id="id5"&gt;React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#vue" id="id6"&gt;Vue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#ui-debug-tips" id="id7"&gt;UI Debug Tips&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#web-server-with-express-express-web-server" id="id8"&gt;Web Server with Express / 使用 Express 搭建Web Server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="why-we-should-use-ui-frameworks"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id1"&gt;Why we should use UI Frameworks? / 为什么我们要使用框架&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;These are reasons, but not why we use it. / 这些是理由，但是，其实并不是真正的原因:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;They are based on components; / 组件基础&lt;/li&gt;
&lt;li&gt;They have a strong community; / 强大的社区&lt;/li&gt;
&lt;li&gt;They have plenty of third party libraries to deal with things; /  第三方模块和库&lt;/li&gt;
&lt;li&gt;They have useful third party components;  / 第三方组件&lt;/li&gt;
&lt;li&gt;They have browser extensions that help debugging things;  / 浏览器调试更加的方便&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;The most important thing is that: / 最重要的是:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Keeping the UI in sync with the state is hard. / 将 UI 保持与状态一致， 是一件非常困难的事情.&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;It is not possible to write complex, efficient and easy to maintain UIs with Pure JavaScript.
如果不引入这些框架， 我们很难写出复杂 高效 和 可维护的App.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Keep focusing on data handling. / 将更多的精力集中在写有用的代码上。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="example"&gt;
&lt;h3&gt;1.1. &lt;a class="toc-backref" href="#id2"&gt;Example&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Let's write a simple UI with state.
我们写一个简单的带state 的UI 进行查看。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;html&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;script &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;jquery-3.3.1.min.js&amp;quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;
        &amp;lt;script &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;test.js&amp;quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;div&amp;gt;
            &amp;lt;h5&amp;gt;Test&amp;lt;/h5&amp;gt;
            &amp;lt;input &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt; /&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;nbsp&lt;span class="p"&gt;;&lt;/span&gt;
            &amp;lt;input &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;button&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;butonClick&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Add&amp;quot;&lt;/span&gt; /&amp;gt;
            &amp;lt;ul &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;names&amp;quot;&lt;/span&gt;&amp;gt;
            &amp;lt;/ul&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;

&lt;span class="k"&gt;$(&lt;/span&gt;document&lt;span class="k"&gt;)&lt;/span&gt;.ready&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
    &lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;rebindClick&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
        &lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.deleteBtn&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;.click&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
            &lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;this&lt;span class="k"&gt;)&lt;/span&gt;.attr&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; names.indexOf&lt;span class="o"&gt;(&lt;/span&gt;item&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;index &amp;gt; -1&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            names.splice&lt;span class="o"&gt;(&lt;/span&gt;index, 1&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
            reRender&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;reRender&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
        &lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;htmls&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        names.map&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;item&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;gt;&lt;span class="o"&gt;{&lt;/span&gt;
            htmls +&lt;span class="o"&gt;=&lt;/span&gt; item + &lt;span class="s1"&gt;&amp;#39;&amp;amp;nbsp;&amp;lt;input class=&amp;quot;deleteBtn&amp;quot; type=&amp;quot;button&amp;quot; data=&amp;quot;&amp;#39;&lt;/span&gt; + item + &lt;span class="s1"&gt;&amp;#39;&amp;quot; value=&amp;quot;Delete&amp;quot; /&amp;gt;&amp;#39;&lt;/span&gt;
        &lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#names&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;.html&lt;span class="o"&gt;(&lt;/span&gt;htmls&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        rebindClick&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#butonClick&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;.click&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
        &lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#name&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;.val&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        names.push&lt;span class="o"&gt;(&lt;/span&gt;value&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        reRender&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/web/web_sharing_0002.png" /&gt;
&lt;/div&gt;
&lt;p&gt;When &lt;code&gt;names&lt;/code&gt; updates, ui won't update unless we manually handle it.
In this situation, we only have one global variable, so it seems we can still handle it.
But if we have thousands of variables, it will be a diasaster to handle and watch them all.&lt;/p&gt;
&lt;p&gt;当全局状态 &lt;code&gt;names&lt;/code&gt; 更新时， UI 并不会跟着改变，除非我们手动的去处理他。
在这种情况下， 我们只有一个全局变量， 我们跟踪起来已经需要做很多的事情了，如果变量多时， 处理和监听这些变量需要花费很多的精力。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;import React, &lt;span class="o"&gt;{&lt;/span&gt; Component &lt;span class="o"&gt;}&lt;/span&gt; from &lt;span class="s1"&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

class SampleState extends Component &lt;span class="o"&gt;{&lt;/span&gt;
    constructor&lt;span class="o"&gt;(&lt;/span&gt;props&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        super&lt;span class="o"&gt;(&lt;/span&gt;props&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        this.clickAdd &lt;span class="o"&gt;=&lt;/span&gt; this.clickAdd.bind&lt;span class="o"&gt;(&lt;/span&gt;this&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        this.clickDelete &lt;span class="o"&gt;=&lt;/span&gt; this.clickDelete.bind&lt;span class="o"&gt;(&lt;/span&gt;this&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        this.nameChange &lt;span class="o"&gt;=&lt;/span&gt; this.nameChange.bind&lt;span class="o"&gt;(&lt;/span&gt;this&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        this.state &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            inputValue: &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;,
            names: &lt;span class="o"&gt;[]&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    nameChange&lt;span class="o"&gt;(&lt;/span&gt;event&lt;span class="o"&gt;){&lt;/span&gt;
        this.setState&lt;span class="o"&gt;({&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;inputValue&amp;quot;&lt;/span&gt; : event.target.value&lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    clickAdd&lt;span class="o"&gt;(){&lt;/span&gt;
        &lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; this.state.names&lt;span class="p"&gt;;&lt;/span&gt;
        names.push&lt;span class="o"&gt;(&lt;/span&gt;this.state.inputValue&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        this.setState&lt;span class="o"&gt;({&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;names&amp;quot;&lt;/span&gt;: names&lt;span class="o"&gt;})&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    clickDelete&lt;span class="o"&gt;(&lt;/span&gt;item&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; this.state.names&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; names.indexOf&lt;span class="o"&gt;(&lt;/span&gt;item&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;index &amp;gt; -1&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            names.splice&lt;span class="o"&gt;(&lt;/span&gt;index, 1&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        this.setState&lt;span class="o"&gt;({&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;names&amp;quot;&lt;/span&gt;: names,
            &lt;span class="s2"&gt;&amp;quot;inputValue&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    render&lt;span class="o"&gt;(){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &amp;lt;div&amp;gt;
            &amp;lt;h5&amp;gt;Test&amp;lt;/h5&amp;gt;
            &amp;lt;input &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;={&lt;/span&gt;this.state.inputValue&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="nv"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;={&lt;/span&gt;this.nameChange&lt;span class="o"&gt;}&lt;/span&gt;/&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;nbsp&lt;span class="p"&gt;;&lt;/span&gt;
            &amp;lt;input &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;button&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;={&lt;/span&gt;this.clickAdd&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Add&amp;quot;&lt;/span&gt; /&amp;gt;
            &amp;lt;ul&amp;gt;
            &lt;span class="o"&gt;{&lt;/span&gt; this.state.names.map&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;item&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt; &amp;lt;li&amp;gt;
                &lt;span class="o"&gt;{&lt;/span&gt;item&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;nbsp&lt;span class="p"&gt;;&lt;/span&gt;&amp;lt;input &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;button&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;={()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt; this.clickDelete&lt;span class="o"&gt;(&lt;/span&gt;item&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;}}&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Delete&amp;quot;&lt;/span&gt; /&amp;gt;
            &amp;lt;/li&amp;gt;&lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
            &amp;lt;/ul&amp;gt;
        &amp;lt;/div&amp;gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;  SampleState &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Every time we update state, UI will update automatically. We only need to focus on our data.&lt;/p&gt;
&lt;p&gt;每一个当我们去更改state的时候， UI 会自动跟着改变。 因此，我们只需要关注数据即可， 数据正确， 渲染，一定也是正确的。UI 一定会保持与数据的一致性。&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/web/web_sharing_0001.png" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="for-de"&gt;
&lt;h3&gt;1.2. &lt;a class="toc-backref" href="#id3"&gt;For DE&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Easy coding &amp;amp; efficiency / 简化编程， 提高效率&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;Do less, get more. / 写更少的程序，获得更好的效果&lt;/li&gt;
&lt;li&gt;Understandable code. / 易懂的代码&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Easy Learning for all RD / 学习曲线平滑， 容易入门， RD 可修改&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;Backend developers can also add simple features without problem. / 后端工程师也能够快速的实现自己想要添加的修修改改&lt;/li&gt;
&lt;li&gt;Frontend developers can do better and do enhancements. / 前端工程师 在优化时 可控&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Scalability &amp;amp; Ecosystem / 扩展性 和 生态系统&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;Plugins and Modules / 丰富的插件 和 模块，开发者社区&lt;/li&gt;
&lt;li&gt;Maintainability / 可维护性&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Cost of Upgrading / 升级代价&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;No framework to framework / 从无框架到有框架的扩展&lt;/li&gt;
&lt;li&gt;Framework self upgrading / 框架本身升级&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As one of Node users,
I will recommend React because everything is composed of Node, ES6, Object and strict data flow.
It bridges the gap between Node backend and UI.&lt;/p&gt;
&lt;p&gt;作为了一个 Node 的使用者，我会毫不犹豫的推荐React， React 的一切都是由 Node ES6 对象 和 严格的数据流构成的。
在前后端基本没有太多的区别， 很多模块都是共用的。&lt;/p&gt;
&lt;p&gt;And that is the reason why I recommend React for DE as most of us are backend developers.
We don't want to touch difficult HTML, CSS. But for ES (JS), it looks like Python and any other languages.&lt;/p&gt;
&lt;p&gt;这也是我为什么会去推荐 DE 团队 以及 整个亚信安全 这一块的人都去使用React， 因为大多数人都是后端开发者。
更多的人并不了解 HTML CSS 怎么去工作，我们更愿意像写一个 Python 类一样去写一个组件。
Vue.js 给了我们太多的可选择性，上下兼顾，很容易被写成 AngularJS + React 的混合语法， 导致歧义。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="comparison"&gt;
&lt;h2&gt;2. &lt;a class="toc-backref" href="#id4"&gt;Comparison 对比介绍&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When building apps. we care those things best:&lt;/p&gt;
&lt;p&gt;当构建Web 应用时，我们比较注意的是一下几点：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Basic components / 页面组件&lt;/li&gt;
&lt;li&gt;Tests / 测试&lt;/li&gt;
&lt;li&gt;L10N / 本地化&lt;/li&gt;
&lt;li&gt;Router / 路由&lt;/li&gt;
&lt;li&gt;Debug &amp;amp; Deploy / 调试和部署&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let's explore in React, Vue to see how to implement those features.&lt;/p&gt;
&lt;p&gt;我们会去探索 React, Vue 来了解如何实现这些功能。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="react"&gt;
&lt;h2&gt;3. &lt;a class="toc-backref" href="#id5"&gt;React&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;a class="reference external" href="React_Sharing.html"&gt;React Sharing&lt;/a&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="vue"&gt;
&lt;h2&gt;4. &lt;a class="toc-backref" href="#id6"&gt;Vue&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;a class="reference external" href="Vue_Sharing.html"&gt;Vue Sharing&lt;/a&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="ui-debug-tips"&gt;
&lt;h2&gt;5. &lt;a class="toc-backref" href="#id7"&gt;UI Debug Tips&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;div class="section" id="web-server-with-express-express-web-server"&gt;
&lt;span id="express-server"&gt;&lt;/span&gt;&lt;h2&gt;6. &lt;a class="toc-backref" href="#id8"&gt;Web Server with Express / 使用 Express 搭建Web Server&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Install  / 安装&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;npm install body-parser
npm install express
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Server / 搭建服务器&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;express&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
const &lt;span class="nv"&gt;bodyParser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;body-parser&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
const &lt;span class="nv"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; express&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

app.use&lt;span class="o"&gt;(&lt;/span&gt;bodyParser.urlencoded&lt;span class="o"&gt;({&lt;/span&gt; extended: &lt;span class="nb"&gt;false&lt;/span&gt; &lt;span class="o"&gt;}))&lt;/span&gt;
app.use&lt;span class="o"&gt;(&lt;/span&gt;bodyParser.json&lt;span class="o"&gt;())&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

app.use&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;req, res, next&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    res.header&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Access-Control-Allow-Origin&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;*&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    res.header&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Access-Control-Allow-Headers&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;Origin, X-Requested-With, Content-Type, Accept&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    next&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
app.get&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/rest/de_members&amp;#39;&lt;/span&gt;, &lt;span class="o"&gt;(&lt;/span&gt;req, res&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;
    res.send&lt;span class="o"&gt;([&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;Fred&amp;quot;&lt;/span&gt;,
        &lt;span class="s2"&gt;&amp;quot;Ben&amp;quot;&lt;/span&gt;,
        &lt;span class="s2"&gt;&amp;quot;So on&amp;quot;&lt;/span&gt;
    &lt;span class="o"&gt;])&lt;/span&gt;
&lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
app.post&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/rest/hello&amp;#39;&lt;/span&gt;, &lt;span class="o"&gt;(&lt;/span&gt;req, res&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;
    res.send&lt;span class="o"&gt;({&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;welcome, &amp;#39;&lt;/span&gt; + &lt;span class="o"&gt;(&lt;/span&gt; req.body.name &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;undefined&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt; + &lt;span class="s2"&gt;&amp;quot;!&amp;quot;&lt;/span&gt;
    &lt;span class="o"&gt;})&lt;/span&gt;
&lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

app.listen&lt;span class="o"&gt;(&lt;/span&gt;3001, &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; console.log&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Example app listening on port 3001!&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Run &lt;code&gt;node server.js&lt;/code&gt;  / 运行服务器&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/web/react_sharing_0002.png" /&gt;
&lt;/div&gt;
&lt;p&gt;Client: Restlet Client&lt;/p&gt;
&lt;p&gt;使用的测试工具: Restlet Client, Chrome 的插件，好东西，一生推... :)&lt;/p&gt;
&lt;/div&gt;
</content><category term="React"></category><category term="Store"></category><category term="Reflux"></category><category term="Web"></category><category term="Node"></category></entry><entry><title>PDF To Word / PDF转Word格式</title><link href="https://brianshen1990.github.io/pdf_to_word.html" rel="alternate"></link><published>2018-09-13T00:00:00+08:00</published><updated>2018-09-13T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:brianshen1990.github.io,2018-09-13:/pdf_to_word.html</id><summary type="html">&lt;p class="first last"&gt;PDF To Word&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;span id="pdf-to-word-rst"&gt;&lt;/span&gt;&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#intro" id="id1"&gt;Intro / 简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#success-libreoffice" id="id2"&gt;Success - LibreOffice&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#failure-attempts" id="id3"&gt;Failure Attempts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#failure-abiword" id="id4"&gt;Failure - abiword&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#failure-pandoc" id="id5"&gt;Failure - pandoc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="intro"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id1"&gt;Intro / 简介&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here is the situation. I met some clients and they need reports. A quite normal feature request. I generated report using PhantomJS and sent them PDF reports.&lt;/p&gt;
&lt;p&gt;一些客户需要产生报告，这是很正常的功能，我们可以通过 PhantomJS 产生PDF的报告。&lt;/p&gt;
&lt;p&gt;But they were not satisfied because they need other editable formats like MS Word so that they can modify the report and use it.&lt;/p&gt;
&lt;p&gt;但是客户并不满足与PDF的报告，他们还需要像Word这样的格式。&lt;/p&gt;
&lt;p&gt;Word Format is not a standard format actually. So I faced lots difficulties. And since I already have HTML and PDF version, I don't want to change code up and down, I wish them controllable. So I searched for solutions how I can convert html or PDF to doc.&lt;/p&gt;
&lt;p&gt;Word 并不是标准的格式，更不是面向代码的。这种情况下，既然有PDF 文档了，我更希望以最小的改动实现这个功能。&lt;/p&gt;
&lt;p&gt;PhantomJS cannot do this. There is little solutions. I tried following ones and finally chose the solution using LibreOffice because the basic format can be kept.&lt;/p&gt;
&lt;p&gt;PhantomJS 不能够完成这项任务。 解决方案很少。最终我是使用了LibreOffice 进行转换， 因为基本的格式都能够被保存下来。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="success-libreoffice"&gt;
&lt;h2&gt;2. &lt;a class="toc-backref" href="#id2"&gt;Success - LibreOffice&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Documents that generated by LibreOffice keeps most formats, and it looks almost like the PDF content. That's great!&lt;/p&gt;
&lt;p&gt;通过LibreOffice产生的文档基本保留了全部的格式，并且与PDF 有相同的渲染。非常棒。&lt;/p&gt;
&lt;p&gt;But I still have some concerns. For example, it costs disk and makes installation more complex. But after compared with other solutions listed behind, I think it is totally acceptable.&lt;/p&gt;
&lt;p&gt;但这里仍然会有一些疑虑，比方说，LibreOffice会使得安装过程更加的复杂，需要额外的磁盘等等。
但是比较完搜索到的方案，这些还是可以接受的。&lt;/p&gt;
&lt;p&gt;While installing LibreOffice in Ubuntu and CentOS is very easy, just remember to install &lt;code&gt;gtk2.0&lt;/code&gt; and so on because they are prerequisites.&lt;/p&gt;
&lt;p&gt;在 Ubuntu 和 CentOS上安装 LibreOffice是非常方便的，但是一定要记得先安装  &lt;code&gt;gtk2.0&lt;/code&gt; ， 因为这是前提。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-get update
apt-get install gtk2.0
apt-get install -y software-properties-common
&lt;span class="nb"&gt;cd&lt;/span&gt; /root/LibreOffice_5.3.6.1_Linux_x86-64_deb/
dpkg -i *.deb
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And use this &lt;code&gt;/opt/libreoffice5.3/program/soffice&lt;/code&gt; in command line.&lt;/p&gt;
&lt;p&gt;命令行中使用 &lt;code&gt;/opt/libreoffice5.3/program/soffice&lt;/code&gt;  调用。&lt;/p&gt;
&lt;p&gt;Convert &lt;code&gt;soffice --infilter=&amp;quot;writer_pdf_import&amp;quot; --convert-to doc file.pdf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;转换使用的命令： &lt;code&gt;soffice --infilter=&amp;quot;writer_pdf_import&amp;quot; --convert-to doc file.pdf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;See what happened:
转换完之后，我们看下PDF 和 Word的对比。&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/tools/pdf_to_word_01.png" /&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;But I met obstacles in Docker because docker is not equipped with many dependencies.
This is my Dockerfile: (I downloaded the 5.3.6 version and copied them to docker.)&lt;/p&gt;
&lt;p&gt;因为产品环境实在docker中运行的，安装还是有一些问题。
下面Dockerfile 文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;FROM node:6.14.0
ADD . Libre
RUN apt-get -y update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get install -y software-properties-common &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get -y install gtk2.0  &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; /Libre/LibreOffice_5.3.6.1_Linux_x86-64_deb/ &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; dpkg -i *.deb
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;when use this docker image and call LibreOffice, there are tips as docker environment has no display.&lt;/p&gt;
&lt;p&gt;在docker中使用 LibreOffice 时，会调用失败，如果不做特殊的设定的话。 因为docker环境默认是没有显示的。&lt;/p&gt;
&lt;p&gt;Here is how to solve it:&lt;/p&gt;
&lt;p&gt;可以 通过这样的方式解决：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;xxx:
  image: xxx
  container_name: xxx
  volumes:
    - /tmp/.X11-unix:/tmp/.X11-unix
  environment:
    - &lt;span class="nv"&gt;DISPLAY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;unix:0
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="failure-attempts"&gt;
&lt;h3&gt;2.1. &lt;a class="toc-backref" href="#id3"&gt;Failure Attempts&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;From LibreOffice official site (&lt;a class="reference external" href="https://www.libreoffice.org/get-help/system-requirements/"&gt;https://www.libreoffice.org/get-help/system-requirements/&lt;/a&gt;), there are some prerequisites:&lt;/p&gt;
&lt;p&gt;在 LibreOffice的官网中，提到了一些前提， 要注意选择性的安装，否则会导致安装失败。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;glibc2 version 2.5 or higher  (check)(ldd --version)&lt;/li&gt;
&lt;li&gt;apt-get install gtk2.0 (check)(dpkg -l libgtk2.0-0 libgtk-3-0)&lt;/li&gt;
&lt;li&gt;Gnome 2.16 or higher&lt;/li&gt;
&lt;li&gt;Instal from ppa&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;RUN awk &lt;span class="s1"&gt;&amp;#39;$1 ~ &amp;quot;^deb&amp;quot; { $3 = $3 &amp;quot;-backports&amp;quot;; print; exit }&amp;#39;&lt;/span&gt; /etc/apt/sources.list &amp;gt; /etc/apt/sources.list.d/backports.list
apt-get update
apt-get install -y software-properties-common
add-apt-repository -y ppa:libreoffice/ppa
apt-get install -y &lt;span class="nv"&gt;libreoffice&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;5.3.6.1
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Install GNOME&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-get install task-gnome-desktop --no-install-recommends
sudo apt-get install ubuntu-gnome-desktop --no-install-recommends
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="failure-abiword"&gt;
&lt;h2&gt;3. &lt;a class="toc-backref" href="#id4"&gt;Failure - abiword&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-get -y update
apt-get -y install abiword
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The output document keeps nearly no cascading styles. So give up this one.&lt;/p&gt;
&lt;p&gt;abiword 导出的 Word 文件，基本是没有任何的 样式的。&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;Reference:&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://askubuntu.com/questions/37548/pdf-to-word-conversion-software"&gt;https://askubuntu.com/questions/37548/pdf-to-word-conversion-software&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="failure-pandoc"&gt;
&lt;h2&gt;4. &lt;a class="toc-backref" href="#id5"&gt;Failure - pandoc&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;code&gt;yum install pandoc&lt;/code&gt;&lt;/blockquote&gt;
&lt;p&gt;The output document only include basic text. Still give it up.&lt;/p&gt;
&lt;p&gt;pandoc 导出的文件也是没有格式的。&lt;/p&gt;
&lt;/div&gt;
</content><category term="Linux"></category><category term="Docker"></category><category term="LibreOffice"></category><category term="PDF"></category></entry><entry><title>Build RPM / 构建 RPM</title><link href="https://brianshen1990.github.io/Build_RPM.html" rel="alternate"></link><published>2018-07-16T00:00:00+08:00</published><updated>2018-07-16T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:brianshen1990.github.io,2018-07-16:/Build_RPM.html</id><summary type="html">&lt;p class="first last"&gt;Build RPM&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;span id="build-rpm-rst"&gt;&lt;/span&gt;&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#why-i-need-rpm-packages-rpm" id="id1"&gt;Why I need RPM packages? / 为什么需要RPM包&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#how-to-set-env" id="id2"&gt;How to set Env / 搭建环境&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#preparations" id="id3"&gt;Preparations / 准备&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#needed-dev-and-build-environments" id="id4"&gt;Needed dev and build environments / 需要的开发环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#make-essential-directories" id="id5"&gt;Make Essential Directories / 创建必要的目录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#prepare-a-sample-file" id="id6"&gt;Prepare a sample file / 准备一个示例文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#define-a-spec-file-to-list-steps-spec" id="id7"&gt;Define a SPEC file to list steps / 定义SPEC文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#when-we-want-to-ignore-some-steps" id="id8"&gt;When we want to ignore some steps / 如果我们想忽略一些步骤的话&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#continue-with-our-sample" id="id9"&gt;Continue with our sample / 继续&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#concerns" id="id10"&gt;Concerns / 一些考量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#other-tips" id="id11"&gt;Other tips / 其他的技巧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#reference" id="id12"&gt;Reference:&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="why-i-need-rpm-packages-rpm"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id1"&gt;Why I need RPM packages? / 为什么需要RPM包&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here is the thing, I have to delivery my softwares to my customers. I developed it , deployed it and configured it. Everything works just perfect fine. But how should my customers use them, I cannot just gave it to them all the jar, js and shell packages. They need a packed executable binary and it would be more welcome if little configuration is needed.&lt;/p&gt;
&lt;p&gt;我需要向客户提交最终的安装软件。所有的事情在本地都是OK的，开发，部署 以及 配置。但是，客户们应该怎么使用他们？ 我不能将所有的开发编译文件直接发给客户，复杂的配置 会让客户失去耐心。他们需要的只是一个安装包，如果开箱即用 或者 根本不用配置的话，那么将会非常棒。&lt;/p&gt;
&lt;p&gt;Based on the situation, it is necessarily to give customers what they want, a RPM package.
However, it is either easy or difficult, but I have to say I spend a whole day in successfully building one.&lt;/p&gt;
&lt;p&gt;在这种情况下，最好是给出一个rpm安装包。 这项工作其实不简单 也 不困难，但是我实实在在用了一整天。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="how-to-set-env"&gt;
&lt;h2&gt;2. &lt;a class="toc-backref" href="#id2"&gt;How to set Env / 搭建环境&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="preparations"&gt;
&lt;h3&gt;2.1. &lt;a class="toc-backref" href="#id3"&gt;Preparations / 准备&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;CentOS 7 1511&lt;/li&gt;
&lt;li&gt;Minimal installation  / 最小化安装&lt;/li&gt;
&lt;li&gt;Network configured / 配置好网络&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="needed-dev-and-build-environments"&gt;
&lt;h3&gt;2.2. &lt;a class="toc-backref" href="#id4"&gt;Needed dev and build environments / 需要的开发环境&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;code&gt;sudo yum install rpmdevtools rpmlint -y&lt;/code&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="make-essential-directories"&gt;
&lt;h3&gt;2.3. &lt;a class="toc-backref" href="#id5"&gt;Make Essential Directories / 创建必要的目录&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Now go to home directory and make essential sub directories.&lt;/p&gt;
&lt;p&gt;去往 用户目录 并且创建他们。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~
rpmdev-setuptree
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's see what happened. ( &lt;code&gt;tree&lt;/code&gt; ) / 看看发生了什么。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rpmbuild/
├── BUILD     : All files will be put here during rpm building
├── RPMS      : Built packages will finally be in RPMS and SRPMS
├── SOURCES   : Source files you want to include or use in RPM
├── SPECS     : Instruction of how to build RPM
└── SRPMS     : Built packages will finally be in RPMS and SRPMS
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="prepare-a-sample-file"&gt;
&lt;h3&gt;2.4. &lt;a class="toc-backref" href="#id6"&gt;Prepare a sample file / 准备一个示例文件&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To avoid any complexities, we only build a rpm package including a bash command.&lt;/p&gt;
&lt;p&gt;为了避免复杂，我们开发一个只包含一个bash命令的rpm包。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir briansample-1.0
&lt;span class="nb"&gt;cd&lt;/span&gt; briansample-1.0/
vi briansample.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the shell file, the content is &lt;code&gt;echo &amp;quot;Brian Sample&amp;quot;&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;shell文件的内容是： &lt;code&gt;echo &amp;quot;Brian Sample&amp;quot;&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;And we compress them into a tar file. &lt;code&gt;tar -cf briansample.tar briansample-1.0/&lt;/code&gt; .
Remember the folder name &lt;code&gt;briansample-1.0&lt;/code&gt; (name-version) because it will usually be used in somewhere else.&lt;/p&gt;
&lt;p&gt;将这个文件放入tar包。
记住，这个文件夹的名字是 &lt;code&gt;briansample-1.0&lt;/code&gt; ， 也就是 是 名字 + 版本号。 这会在其他地方用到。 而且名字版本号的匹配至关重要。&lt;/p&gt;
&lt;p&gt;Copy the tar file to &lt;code&gt;SOURCE&lt;/code&gt; directory.
将这个源文件 tar 包 拷贝到 &lt;code&gt;SOURCE&lt;/code&gt; 目录下。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="define-a-spec-file-to-list-steps-spec"&gt;
&lt;h3&gt;2.5. &lt;a class="toc-backref" href="#id7"&gt;Define a SPEC file to list steps / 定义SPEC文件&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; rpmbuild/SPECS/
rpmdev-newspec
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This command will create a SPEC file under the directory. ( &lt;code&gt;tree&lt;/code&gt; )&lt;/p&gt;
&lt;p&gt;上一条命令将会创建一个 SPEC 规范文件。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;.
└── newpackage.spec
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See what it contains ( &lt;code&gt;cat newpackage.spec&lt;/code&gt; ) :&lt;/p&gt;
&lt;p&gt;看看里面的内容。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Name:
Version:
Release:        1%&lt;span class="o"&gt;{&lt;/span&gt;?dist&lt;span class="o"&gt;}&lt;/span&gt;
Summary:

License:
URL:
Source0:

BuildRequires:
Requires:

%description


%prep
%setup -q


%build
%configure
make %&lt;span class="o"&gt;{&lt;/span&gt;?_smp_mflags&lt;span class="o"&gt;}&lt;/span&gt;


%install
rm -rf &lt;span class="nv"&gt;$RPM_BUILD_ROOT&lt;/span&gt;
%make_install


%files
%doc



%changelog
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is very clear that it consists of two many parts:&lt;/p&gt;
&lt;p&gt;非常直观，其实包括两个部分：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Basic descriptions / 基本描述&lt;/li&gt;
&lt;li&gt;RPM steps / RPM 编译步骤&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Definitions / 一些定义:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;code&gt;%description&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A full description of the software packaged in the RPM. This description can span multiple lines and can be broken into paragraphs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;code&gt;%prep&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Command or series of commands to prepare the software to be built, for example, unpacking the archive in Source0. This directive can contain a shell script.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;code&gt;%build&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Command or series of commands for actually building the software into machine code (for compiled languages) or byte code (for some interpreted languages).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;code&gt;%install&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Command or series of commands for copying the desired build artifacts from the %builddir (where the build happens) to the %buildroot directory (which contains the directory structure with the files to be packaged). This usually means copying files from ~/rpmbuild/BUILD to ~/rpmbuild/BUILDROOT and creating the necessary directories in ~/rpmbuild/BUILDROOT. This is only run when creating a package, not when the end-user installs the package. See Working with SPEC files for details.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;code&gt;%check&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Command or series of commands to test the software. This normally includes things such as unit tests.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;code&gt;%files&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The list of files that will be installed in the end user’s system.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;code&gt;%changelog&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A record of changes that have happened to the package between different Version or Release builds.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="when-we-want-to-ignore-some-steps"&gt;
&lt;h3&gt;2.6. &lt;a class="toc-backref" href="#id8"&gt;When we want to ignore some steps / 如果我们想忽略一些步骤的话&lt;/a&gt;&lt;/h3&gt;
&lt;div class="warning"&gt;
&lt;p class="first admonition-title"&gt;Warning&lt;/p&gt;
&lt;p&gt;When I wanted to ignore some steps, I like to comment out them. For example, NodeJS and Python programs do not need build step.&lt;/p&gt;
&lt;p&gt;当我想要忽略这些步骤的时候，本能的反映是 注释掉他们。 比方说 NodeJS 或者Python 程序，就不需要 build 步骤。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;%build
with
&lt;span class="c1"&gt;#%build&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But !!!!!!! This doesn't actually comment it out. and it will still run.
So deleting &lt;code&gt;%build&lt;/code&gt; and &lt;code&gt;%configure&lt;/code&gt; makes things work as expected.&lt;/p&gt;
&lt;p class="last"&gt;但是！！！ 这并不会阻止这些程序继续运行。需要去删除这些步骤 才能工作正常。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="continue-with-our-sample"&gt;
&lt;h3&gt;2.7. &lt;a class="toc-backref" href="#id9"&gt;Continue with our sample / 继续&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Copy our project tar files to &lt;code&gt;rpmbuild/SOURCES/&lt;/code&gt; by code:&lt;/p&gt;
&lt;p&gt;将整个工程拷贝至 &lt;code&gt;rpmbuild/SOURCES/&lt;/code&gt; 。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~
cp briansample.tar rpmbuild/SOURCES/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now edit our SPEC file: / 现在我们来更改SPEC 文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Name:           briansample  &lt;span class="c1"&gt;#####watch the name  注意名称&lt;/span&gt;
Version:        1.0          &lt;span class="c1"&gt;#####watch the version 注意版本&lt;/span&gt;
Release:        1%&lt;span class="o"&gt;{&lt;/span&gt;?dist&lt;span class="o"&gt;}&lt;/span&gt;
Summary:        sample

License:        GPL
Source0:        briansample.tar


%description

%prep
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;BrianSample Prepare&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# this Step will unpack the tar file briansample.tar&lt;/span&gt;
%setup -q

%install
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;BrianSample Install&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# this Step will enter ./briansample-1.0 , just like the name and Version&lt;/span&gt;
&lt;span class="c1"&gt;# And then you can execute commands here&lt;/span&gt;
&lt;span class="c1"&gt;# So we copy file (ths bash file) to virtual directory %{buildroot}/usr/briansample&lt;/span&gt;
mkdir -p %&lt;span class="o"&gt;{&lt;/span&gt;buildroot&lt;span class="o"&gt;}&lt;/span&gt;/usr/briansample
&lt;span class="nb"&gt;pwd&lt;/span&gt;
cp -rf ./* %&lt;span class="o"&gt;{&lt;/span&gt;buildroot&lt;span class="o"&gt;}&lt;/span&gt;/usr/briansample

%post
&lt;span class="c1"&gt;# execute when installed in the real machine&lt;/span&gt;

%files
%doc
&lt;span class="c1"&gt;# files will in teh virtual directory will be copied here in teh real machine&lt;/span&gt;
/usr/briansample/*

%changelog
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And we can now build our RPM package. / 现在我们可以去编译 RPM 包了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;code&gt;rpmbuild -ba newpackage.spec&lt;/code&gt;&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rpmbuild -ba newpackage.spec
    Executing&lt;span class="o"&gt;(&lt;/span&gt;%prep&lt;span class="o"&gt;)&lt;/span&gt;: /bin/sh -e /var/tmp/rpm-tmp.h7l5eo
    + &lt;span class="nb"&gt;umask&lt;/span&gt; 022
    + &lt;span class="nb"&gt;cd&lt;/span&gt; /home/admin/rpmbuild/BUILD
    + &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;BrianSample Prepare&amp;#39;&lt;/span&gt;
    BrianSample Prepare
    + &lt;span class="nb"&gt;cd&lt;/span&gt; /home/admin/rpmbuild/BUILD
    + rm -rf briansample-1.0
    + /usr/bin/tar -xf /home/admin/rpmbuild/SOURCES/briansample.tar
    + &lt;span class="nb"&gt;cd&lt;/span&gt; briansample-1.0
    + /usr/bin/chmod -Rf a+rX,u+w,g-w,o-w .
    + &lt;span class="nb"&gt;exit&lt;/span&gt; 0
    Executing&lt;span class="o"&gt;(&lt;/span&gt;%install&lt;span class="o"&gt;)&lt;/span&gt;: /bin/sh -e /var/tmp/rpm-tmp.HEqZg2
    + &lt;span class="nb"&gt;umask&lt;/span&gt; 022
    + &lt;span class="nb"&gt;cd&lt;/span&gt; /home/admin/rpmbuild/BUILD
    + &lt;span class="s1"&gt;&amp;#39;[&amp;#39;&lt;/span&gt; /home/admin/rpmbuild/BUILDROOT/briansample-1.0-1.el7.centos.x86_64 &lt;span class="s1"&gt;&amp;#39;!=&amp;#39;&lt;/span&gt; / &lt;span class="s1"&gt;&amp;#39;]&amp;#39;&lt;/span&gt;
    + rm -rf /home/admin/rpmbuild/BUILDROOT/briansample-1.0-1.el7.centos.x86_64
    ++ dirname /home/admin/rpmbuild/BUILDROOT/briansample-1.0-1.el7.centos.x86_64
    + mkdir -p /home/admin/rpmbuild/BUILDROOT
    + mkdir /home/admin/rpmbuild/BUILDROOT/briansample-1.0-1.el7.centos.x86_64
    + &lt;span class="nb"&gt;cd&lt;/span&gt; briansample-1.0
    + &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;BrianSample Install&amp;#39;&lt;/span&gt;
    BrianSample Install
    + mkdir -p /home/admin/rpmbuild/BUILDROOT/briansample-1.0-1.el7.centos.x86_64/usr/briansample
    + &lt;span class="nb"&gt;pwd&lt;/span&gt;
    /home/admin/rpmbuild/BUILD/briansample-1.0
    + cp -rf ./briansample.sh ./briansample.tar /home/admin/rpmbuild/BUILDROOT/briansample-1.0-1.el7.centos.x86_64/usr/briansample
    + &lt;span class="s1"&gt;&amp;#39;[&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%{buildarch}&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; noarch &lt;span class="s1"&gt;&amp;#39;]&amp;#39;&lt;/span&gt;
    + &lt;span class="nv"&gt;QA_CHECK_RPATHS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
    + &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;QA_CHECK_RPATHS&lt;/span&gt;&lt;span class="k"&gt;:-&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; in
    + /usr/lib/rpm/check-rpaths
    + /usr/lib/rpm/check-buildroot
    + /usr/lib/rpm/redhat/brp-compress
    + /usr/lib/rpm/redhat/brp-strip /usr/bin/strip
    + /usr/lib/rpm/redhat/brp-strip-comment-note /usr/bin/strip /usr/bin/objdump
    + /usr/lib/rpm/redhat/brp-strip-static-archive /usr/bin/strip
    + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1
    + /usr/lib/rpm/redhat/brp-python-hardlink
    + /usr/lib/rpm/redhat/brp-java-repack-jars
    Processing files: briansample-1.0-1.el7.centos.x86_64
    Provides: &lt;span class="nv"&gt;briansample&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 1.0-1.el7.centos briansample&lt;span class="o"&gt;(&lt;/span&gt;x86-64&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 1.0-1.el7.centos
    Requires&lt;span class="o"&gt;(&lt;/span&gt;interp&lt;span class="o"&gt;)&lt;/span&gt;: /bin/sh
    Requires&lt;span class="o"&gt;(&lt;/span&gt;rpmlib&lt;span class="o"&gt;)&lt;/span&gt;: rpmlib&lt;span class="o"&gt;(&lt;/span&gt;CompressedFileNames&lt;span class="o"&gt;)&lt;/span&gt; &amp;lt;&lt;span class="o"&gt;=&lt;/span&gt; 3.0.4-1 rpmlib&lt;span class="o"&gt;(&lt;/span&gt;FileDigests&lt;span class="o"&gt;)&lt;/span&gt; &amp;lt;&lt;span class="o"&gt;=&lt;/span&gt; 4.6.0-1 rpmlib&lt;span class="o"&gt;(&lt;/span&gt;PayloadFilesHavePrefix&lt;span class="o"&gt;)&lt;/span&gt; &amp;lt;&lt;span class="o"&gt;=&lt;/span&gt; 4.0-1
    Requires&lt;span class="o"&gt;(&lt;/span&gt;post&lt;span class="o"&gt;)&lt;/span&gt;: /bin/sh
    Checking &lt;span class="k"&gt;for&lt;/span&gt; unpackaged file&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt;: /usr/lib/rpm/check-files /home/admin/rpmbuild/BUILDROOT/briansample-1.0-1.el7.centos.x86_64
    Wrote: /home/admin/rpmbuild/SRPMS/briansample-1.0-1.el7.centos.src.rpm
    Wrote: /home/admin/rpmbuild/RPMS/x86_64/briansample-1.0-1.el7.centos.x86_64.rpm
    Executing&lt;span class="o"&gt;(&lt;/span&gt;%clean&lt;span class="o"&gt;)&lt;/span&gt;: /bin/sh -e /var/tmp/rpm-tmp.UhdYZ0
    + &lt;span class="nb"&gt;umask&lt;/span&gt; 022
    + &lt;span class="nb"&gt;cd&lt;/span&gt; /home/admin/rpmbuild/BUILD
    + &lt;span class="nb"&gt;cd&lt;/span&gt; briansample-1.0
    + /usr/bin/rm -rf /home/admin/rpmbuild/BUILDROOT/briansample-1.0-1.el7.centos.x86_64
    + &lt;span class="nb"&gt;exit&lt;/span&gt; 0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now let's see what had been generated :code:` tree /home/admin/rpmbuild/`
现在看看生成了什么！&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/home/admin/rpmbuild/
├── BUILD
│   └── briansample-1.0
│       ├── briansample.sh
│       └── briansample.tar
├── BUILDROOT
├── RPMS
│   └── x86_64
│       └── briansample-1.0-1.el7.centos.x86_64.rpm
├── SOURCES
│   └── briansample.tar
├── SPECS
│   └── newpackage.spec
└── SRPMS
    └── briansample-1.0-1.el7.centos.src.rpm
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And we can just install the package:
我们可以去安装这个 RPM 包。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo yum install ./briansample-1.0-1.el7.centos.x86_64.rpm&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And after installation, let's see what happened. Do all files copied to the destination?
安装完毕后，看看是否执行正确。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tree /usr/briansample/
/usr/briansample/
├── briansample.sh
└── briansample.tar
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yes, now our work is done.
是的，工作完成&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="concerns"&gt;
&lt;h2&gt;3. &lt;a class="toc-backref" href="#id10"&gt;Concerns / 一些考量&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;How can I install other packages during the installation.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果我有一些 依赖的 rpm 包应该怎么办？&lt;/p&gt;
&lt;p&gt;For example, I also want to install some helper tools like &lt;code&gt;vim&lt;/code&gt; and I have the rpm packages. But we cannot do this, because yum will lock DB during installation, you will get DB locked error in the &lt;code&gt;%post&lt;/code&gt; section.&lt;/p&gt;
&lt;p&gt;比方说，我需要安装一些辅助的工具，比如 &lt;code&gt;vim&lt;/code&gt; ， 并且我能下载这些rpm包。其实很难做到这一点。因为 yum 在安装过程中会将 DB 锁住。 如果我们在 &lt;code&gt;%post&lt;/code&gt;  安装其他rpm 包的时候，会得到一个 DB 锁无法获取的错误。&lt;/p&gt;
&lt;p&gt;One solution is to  remove the lock &lt;code&gt;rm -rf /var/lib/rpm/.rpm.lock&lt;/code&gt; . However, this is not recommended.&lt;/p&gt;
&lt;p&gt;有一个解决方法是 ， 移除这个锁，但是并不推荐。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;What about un-installation?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;What about patch?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="other-tips"&gt;
&lt;h2&gt;4. &lt;a class="toc-backref" href="#id11"&gt;Other tips / 其他的技巧&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Unpack the rpm file / 如何解压一个 rpm 包&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In Windows, you can use 7z software todo this.
Windows 下可以使用 7z 这样的软件。&lt;/p&gt;
&lt;p&gt;In Linux: &lt;code&gt;rpm2cpio ./packagecloud-test-1.1-1.x86_64.rpm | cpio -idmv&lt;/code&gt;
Linux 下使用这个命令工具； rpm2cpio 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;How to force to install packages / 如何强制安装软件包&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If your rpm database is destroyed, it is much difficult to restore it.
The only way that I found is to download in the same machine and install it then.&lt;/p&gt;
&lt;p&gt;如果 rpm 元数据库被损坏的话，非常难去恢复。
一个办法就是 去同样环境的机器上 下载，强制安装软件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rpm -Uvh /usr/uap/repo/*rpm --nodeps --scripts --force
-i install packages
-v provide more details
-h print &lt;span class="nb"&gt;hash&lt;/span&gt; marks to show progress
--nodepes:  don&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;t verify package dependencies
--scripts: list install/erase scriptlets from package&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt;
--force:
    --replacefiles                   ignore file conflicts between packages
    --replacepkgs                    reinstall &lt;span class="k"&gt;if&lt;/span&gt; the package is already present

rpm -ivh ./*rpm --justdb --nodeps --scripts --force
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="reference"&gt;
&lt;h2&gt;5. &lt;a class="toc-backref" href="#id12"&gt;Reference:&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Set Up an RPM Build Environment under CentOS : &lt;a class="reference external" href="https://wiki.centos.org/HowTos/SetupRpmBuildEnvironment"&gt;https://wiki.centos.org/HowTos/SetupRpmBuildEnvironment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Rpmbuild Tutorial &lt;a class="reference external" href="https://rpmbuildtut.wordpress.com/"&gt;https://rpmbuildtut.wordpress.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;RPM Packaging Guide &lt;a class="reference external" href="https://rpm-packaging-guide.github.io/"&gt;https://rpm-packaging-guide.github.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
</content><category term="Linux"></category><category term="CentOS7"></category><category term="RPM"></category></entry><entry><title>Linux Fonts / 字体支持</title><link href="https://brianshen1990.github.io/linux_fonts.html" rel="alternate"></link><published>2018-06-06T00:00:00+08:00</published><updated>2018-06-06T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:brianshen1990.github.io,2018-06-06:/linux_fonts.html</id><summary type="html">&lt;p class="first last"&gt;Linux Fonts&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;span id="linux-fonts-rst"&gt;&lt;/span&gt;&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#install-fontconfig-fontconfig" id="id1"&gt;Install &lt;code&gt;fontconfig&lt;/code&gt; / 安装 &lt;code&gt;fontconfig&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#copy-fonts" id="id2"&gt;Copy fonts / 拷贝字体&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;It's usually this case that we choose to install an OS in &lt;code&gt;minimal&lt;/code&gt; mode because it only costs little resource.&lt;/p&gt;
&lt;p&gt;为了节约资源，我们常常会以最小化的形式全装一个系统。&lt;/p&gt;
&lt;p&gt;If our environment is totally in EN, there won't be any mistake.&lt;/p&gt;
&lt;p&gt;如果我们的系统只需要支持 英文环境， 那么一切都会OK。&lt;/p&gt;
&lt;p&gt;Unfortunately, we have to do L10N, especially in Asia. Missing basic fonts would make whole result totally a mess.&lt;/p&gt;
&lt;p&gt;但是，常常出现的情况是 我们要做本地化。 缺失基本的字体 会使得整个系统一团糟。&lt;/p&gt;
&lt;p&gt;Recently I have encountered such a situation that the PDF report generated by &lt;code&gt;phantomjs&lt;/code&gt; cannot show Chinese character.&lt;/p&gt;
&lt;p&gt;最近我遇到了一个问题就是，使用  &lt;code&gt;phantomjs&lt;/code&gt; 去生成PDF 报告。但是这个报告却不能够呈现中文。&lt;/p&gt;
&lt;p&gt;After I searched on Google and implemented some suggestions, I found that the following steps are the solutions.&lt;/p&gt;
&lt;p&gt;其实很简单，只需要两个步骤就能解决这个问题。&lt;/p&gt;
&lt;div class="section" id="install-fontconfig-fontconfig"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id1"&gt;Install &lt;code&gt;fontconfig&lt;/code&gt; / 安装 &lt;code&gt;fontconfig&lt;/code&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;However, I found it optional. Because I tried to ignore this step in a Docker environment, and found that it still works correctly.&lt;/p&gt;
&lt;p&gt;不过这一步似乎是可选的，因为我们docker 环境下 忽略了这一步。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yum -y install fontconfig&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="copy-fonts"&gt;
&lt;h2&gt;2. &lt;a class="toc-backref" href="#id2"&gt;Copy fonts / 拷贝字体&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Find a fully installed OS and go to the corresponding folder &lt;code&gt;/usr/shared/fonts&lt;/code&gt;
In this folder, we will see lots fonts:&lt;/p&gt;
&lt;p&gt;从一个完整安装的系统上 去 拷贝对应的字体文件夹。 这个文件夹里面有很多的字体。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls
abattis-cantarell         lklug             lohit-punjabi        sil-abyssinica
cjkuni-uming              lohit-assamese    lohit-tamil          sil-nuosu
default                   lohit-bengali     lohit-telugu         sil-padauk
dejavu                    lohit-devanagari  madan                smc
gnu-free                  lohit-gujarati    nhn-nanum            stix
google-crosextra-caladea  lohit-kannada     open-sans            thai-scalable
google-crosextra-carlito  lohit-malayalam   opensymbol           ucs-miscfixed
jomolhari                 lohit-marathi     overpass             vlgothic
khmeros                   lohit-nepali      paktype-naskh-basic  wqy-microhei
liberation                lohit-oriya       paratype-pt-sans     wqy-zenhei
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Copy them to new Env, things will work OK.&lt;/p&gt;
&lt;p&gt;将这些字体拷贝到新的环境中，就能 渲染出正常的字体。&lt;/p&gt;
&lt;p&gt;Reference: &lt;a class="reference external" href="https://blog.csdn.net/wlwlwlwl015/article/details/51482065"&gt;https://blog.csdn.net/wlwlwlwl015/article/details/51482065&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="Linux"></category><category term="CentOS7"></category><category term="fonts"></category></entry><entry><title>Program As Service at Windows Using NSSM</title><link href="https://brianshen1990.github.io/Program_As_Service_at_Windows.html" rel="alternate"></link><published>2018-04-02T00:00:00+08:00</published><updated>2018-04-02T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:brianshen1990.github.io,2018-04-02:/Program_As_Service_at_Windows.html</id><summary type="html">&lt;p class="first last"&gt;Program As Service at Windows&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;span id="tools-nssm-windwos-rst"&gt;&lt;/span&gt;&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#what-s-the-problem" id="id1"&gt;What's The Problem / 问题是什么&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#sc" id="id2"&gt;sc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#nssm" id="id3"&gt;NSSM&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#using-gui-gui" id="id4"&gt;Using GUI / 使用 GUI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#using-command" id="id5"&gt;Using command / 使用 命令行&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="what-s-the-problem"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id1"&gt;What's The Problem / 问题是什么&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here is the thing, I met a customer, and they can not provide their data using TCP through ssl.
Even though they are willing to cooperate and give me the data to generate report for them.
they said, the only way that they can provide these data is to use https.
Our device doesn't have the function so I have to write a windows program as an adapter.&lt;/p&gt;
&lt;p&gt;情况是这样的，有一个客户，他们需要将数据接入到Saas系统，但是他们不能够使用TCP SSL 加密的方式传输。
虽然他们很愿意合作 并且 提供数据以便获得报告。
而客户的情况是他们只能够将数据通过 https的方式提供出来。
我们的设备不支持 https 传输数据， 因此我需要写一个程序来做转换。&lt;/p&gt;
&lt;p&gt;The program is just a simply python scripts. I thought that they will provide a Linux platform to run the program, actually not, is a Windows.&lt;/p&gt;
&lt;p&gt;程序很简单，只是python脚本。我以为会是 Linux， 结果是 Windows。&lt;/p&gt;
&lt;p&gt;Unlike Linux, start a program as a service in Windows is rather tough.&lt;/p&gt;
&lt;p&gt;与 Linux 不同，在 Windows 下 让程序像服务一样运行并不容易。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sc"&gt;
&lt;h2&gt;2. &lt;a class="toc-backref" href="#id2"&gt;sc&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;One main solution is to use &lt;code&gt;sc&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;一个主流的解决方式是使用  &lt;code&gt;sc&lt;/code&gt; 命令。&lt;/p&gt;
&lt;p&gt;There is the sample: / 这是一个例子。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sc create BrianTest &lt;span class="nv"&gt;binPath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;C:\Python27\python.exe --C:\AsiaLogTransferWindows\AsiaLogTransfer.py&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/tools/nssm_01.png" /&gt;
&lt;/div&gt;
&lt;p&gt;Without any difficulty. Then go to &lt;code&gt;Control Panel\System and Security\Administrative Tools\services&lt;/code&gt;
But when I started the service, an error occurred.&lt;/p&gt;
&lt;p&gt;这样作很简单。接着去往 &lt;code&gt;Control Panel\System and Security\Administrative Tools\services&lt;/code&gt; 查看服务。
但是当我启动这个服务的时候， 一个错误发生了。&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/tools/nssm_02.png" /&gt;
&lt;/div&gt;
&lt;p&gt;What a pity. Actually, the exe should act like a real service, but it didn't. So this is the problem.&lt;/p&gt;
&lt;p&gt;很遗憾。 一个可执行程序 应该像一个服务一样运行的，但是实际上并没有。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="nssm"&gt;
&lt;h2&gt;3. &lt;a class="toc-backref" href="#id3"&gt;NSSM&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Then how to solve it? Yes, magic &lt;code&gt;NSSM&lt;/code&gt; (&lt;a class="reference external" href="https://nssm.cc/"&gt;https://nssm.cc/&lt;/a&gt;)
It is so elegant, simple and easy to use, I would recommend to everyone.
Download from the website then unzip it.&lt;/p&gt;
&lt;p&gt;那么如何解决这个问题？ 对的，就是使用  &lt;code&gt;NSSM&lt;/code&gt; 。
非常的优雅，简单 并且 容易。
从官网下载 并且 解压。&lt;/p&gt;
&lt;div class="section" id="using-gui-gui"&gt;
&lt;h3&gt;3.1. &lt;a class="toc-backref" href="#id4"&gt;Using GUI / 使用 GUI&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Step 1: start a service by giving it a name: &lt;code&gt;nssm64.exe install AsiaLogTransfer&lt;/code&gt;
第一步，准备注册一个服务，并且给它一个名字。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Step 2: Using GUI to find the service:&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first"&gt;使用 GUI 来找到程序的位置。&lt;/p&gt;
&lt;div class="last figure"&gt;
&lt;img alt="" src="/images/tools/nssm_03.png" /&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Step 3: Start the service: &lt;code&gt;nssm64.exe start AsiaLogTransfer&lt;/code&gt;
第三步，启动服务。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now you can restart the OS without any concern of losing it.
And there are many other options, I only use the simplest of it. Wish you can enjoy the amazing tool.&lt;/p&gt;
&lt;p&gt;现在我们可以随意的启停系统，而不会有出现丢失服务的风险。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="using-command"&gt;
&lt;h3&gt;3.2. &lt;a class="toc-backref" href="#id5"&gt;Using command / 使用 命令行&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can also use command line so that customer can install with 1 click.
也可以使用命令行，这样用户只需要点击运行 即可。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; C:&lt;span class="se"&gt;\A&lt;/span&gt;siaLogTransferWindows
:: Automatically add the program to service list.
:: So that it can be run in background and restart automatically.
nssm64.exe install AsiaLogTransfer C:&lt;span class="se"&gt;\\&lt;/span&gt;AsiaLogTransferWindows&lt;span class="se"&gt;\\&lt;/span&gt;AsiaLogTransfer.bat
nssm64.exe start AsiaLogTransfer
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And in &lt;code&gt;AsiaLogTransfer.bat&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; C:&lt;span class="se"&gt;\\&lt;/span&gt;AsiaLogTransferWindows
C:&lt;span class="se"&gt;\\&lt;/span&gt;Python27&lt;span class="se"&gt;\\&lt;/span&gt;python AsiaLogTransfer.py
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="Windows"></category><category term="NSSM"></category></entry><entry><title>GEvent &amp;&amp; Zeromq</title><link href="https://brianshen1990.github.io/GEvent_and_Zeromq.html" rel="alternate"></link><published>2017-12-18T00:00:00+08:00</published><updated>2017-12-18T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:brianshen1990.github.io,2017-12-18:/GEvent_and_Zeromq.html</id><summary type="html">&lt;p class="first last"&gt;GEvent &amp;amp;&amp;amp; Zeromq&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;span id="gevent-and-zeromq-rst"&gt;&lt;/span&gt;&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#gevent" id="id3"&gt;GEvent&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#reference" id="id4"&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#code-sample" id="id5"&gt;Code Sample&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#zeromq" id="id6"&gt;Zeromq&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id1" id="id7"&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id8"&gt;Code Sample&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="gevent"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id3"&gt;GEvent&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;gevent is a concurrency library based around libev. It provides a clean API for a variety of concurrency and network related tasks.&lt;/p&gt;
&lt;div class="section" id="reference"&gt;
&lt;h3&gt;1.1. &lt;a class="toc-backref" href="#id4"&gt;Reference&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://sdiehl.github.io/gevent-tutorial/"&gt;https://sdiehl.github.io/gevent-tutorial/&lt;/a&gt;  (An excellent tutorial website)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/gevent/gevent"&gt;https://github.com/gevent/gevent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.gevent.org/intro.html#installation"&gt;http://www.gevent.org/intro.html#installation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="code-sample"&gt;
&lt;h3&gt;1.2. &lt;a class="toc-backref" href="#id5"&gt;Code Sample&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;gevent&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;gevent&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;gevent&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;queue&lt;/span&gt;

&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;Sample 1: Simple, usage for execute them in order&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;urls&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;www.baidu.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;www.python.org&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;jobs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;gevent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gethostbyname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;urls&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;gevent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;joinall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;jobs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;job&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;job&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;jobs&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;Sample 2: Simple, usage for execute them in order&lt;/span&gt;
&lt;span class="sd"&gt;But it will spare cpu to  other if there exists ant waiting&lt;/span&gt;
&lt;span class="sd"&gt;(Remember to use gevent.sleep instead of time.sleep )&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;waitandprint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pstr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;default&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;init&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;pstr&lt;/span&gt;
    &lt;span class="n"&gt;gevent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Important&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pstr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;jobs_loop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;gevent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;waitandprint&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;jobs_loop&lt;/span&gt;
&lt;span class="n"&gt;gevent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;joinall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;jobs_loop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;Sample 3: Simple, usage for consumer and assigner&lt;/span&gt;
&lt;span class="sd"&gt;But it will spare cpu to  other if there exists ant waiting&lt;/span&gt;
&lt;span class="sd"&gt;(Remember to use gevent.sleep instead of time.sleep )&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;wait_forever_and_print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;gevent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Incomming: [&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;]&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Empty&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Quitting&amp;quot;&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;generate_forever_and_print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;beginnum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;gevent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;beginnum&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;beginnum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;beginnum&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
                &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;outting=&amp;gt;[&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;]&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;beginnum&lt;/span&gt;
                &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;beginnum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;
            &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;task_done&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;task_queue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;JoinableQueue&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;task_queue&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;jobs_loop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;gevent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wait_forever_and_print&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;task_queue&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="n"&gt;gevent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;generate_forever_and_print&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;task_queue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;gevent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;joinall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;jobs_loop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Done&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="zeromq"&gt;
&lt;h2&gt;2. &lt;a class="toc-backref" href="#id6"&gt;Zeromq&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Much simple!&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;2.1. &lt;a class="toc-backref" href="#id7"&gt;Reference&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://sdiehl.github.io/gevent-tutorial/"&gt;https://sdiehl.github.io/gevent-tutorial/&lt;/a&gt;  (An excellent tutorial website)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/zeromq/pyzmq"&gt;https://github.com/zeromq/pyzmq&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;2.2. &lt;a class="toc-backref" href="#id8"&gt;Code Sample&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;gevent&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;zmq.green&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;zmq&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;gevent.server&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;StreamServer&lt;/span&gt;

&lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zmq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;server&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;server_socket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zmq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;REQ&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;server_socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tcp://127.0.0.1:5000&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;server_socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Switched to Server for &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;server_socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;client&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;client_socket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zmq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;REP&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;client_socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tcp://127.0.0.1:5000&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

        &lt;span class="n"&gt;client_socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Switched to Client for &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;# Implicit context switch occurs here&lt;/span&gt;
        &lt;span class="n"&gt;client_socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;World&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;publisher&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gevent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;client&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gevent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;gevent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;joinall&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;publisher&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# On Unix: Access with ``$ nc 127.0.0.1 5001``&lt;/span&gt;
&lt;span class="c1"&gt;# On Window: Access with ``$ telnet 127.0.0.1 5001``&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello from a telnet!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;StreamServer&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;127.0.0.1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5001&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;serve_forever&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/python/python_gevent_01.png" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="Python"></category></entry><entry><title>Local Yum Repo (CentOS 7) / 本地Yum源</title><link href="https://brianshen1990.github.io/local_yum_repo.html" rel="alternate"></link><published>2017-11-14T00:00:00+08:00</published><updated>2017-11-14T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:brianshen1990.github.io,2017-11-14:/local_yum_repo.html</id><summary type="html">&lt;p class="first last"&gt;Local Yum Repo&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;span id="local-yum-repo-rst"&gt;&lt;/span&gt;&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#intro" id="id1"&gt;Intro 简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#prepare-the-packages" id="id2"&gt;Prepare the packages / 准备安装包&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#use-your-own-repo-yum" id="id3"&gt;Use your own REPO / 使用这个Yum源&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#installation" id="id4"&gt;Installation / 安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#reference" id="id5"&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="intro"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id1"&gt;Intro 简介&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This article is sampled by installing Java.&lt;/p&gt;
&lt;p&gt;基于JAVA介绍如何使用本地Yum源。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="prepare-the-packages"&gt;
&lt;h2&gt;2. &lt;a class="toc-backref" href="#id2"&gt;Prepare the packages / 准备安装包&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Find a clean CentOS with network available.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;找一个干净的 CentOS 环境，并且接通网络。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Download Software Packages 下载软件包&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To download software and their dependencies, you can just use native &lt;code&gt;yum&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;只需要使用 &lt;code&gt;yum&lt;/code&gt; 就可以下载并且解析依赖包。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Create a folder / 创建文件夹&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir ais_repo
&lt;span class="nb"&gt;cd&lt;/span&gt; ais_repo
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Download OpenJDK / 下载 OpenJDK&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo yum install --downloadonly --downloaddir ./ java-1.8.0-openjdk-headless.x86_64
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/tools/local_repo_01.png" /&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Make Local Repo / 制作本地 Yum 库&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It seems quite hard to create your own repo, since there are lots of package information to create and add.
But actually it is quite simple, and you can just make repo with simple commands.&lt;/p&gt;
&lt;p&gt;看起来很是复杂，因为有很多的依赖关系，但实际上，只需要很简单的命令就可以。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Install &lt;code&gt;createrepo&lt;/code&gt; / 安装 &lt;code&gt;createrepo&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;sudo yum install createrepo&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;create a directory to put packages and then make repo in that folder&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;创建一个目录来保存这些安装包。并且，制作安装包的元文件信息。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo mkdir /usr/share/ais_repo
sudo mv ./* /usr/share/ais_repo
sudo createrepo -v /usr/share/ais_repo
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's see what happened: / 看看发生了什么&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/tools/local_repo_02.png" /&gt;
&lt;/div&gt;
&lt;p&gt;As you can notice, there is an extra folder &lt;code&gt;repodata&lt;/code&gt; . Now, this is a local repo.&lt;/p&gt;
&lt;p&gt;可以看出来，文件夹中多了一个 &lt;code&gt;repodata&lt;/code&gt; 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="use-your-own-repo-yum"&gt;
&lt;h2&gt;3. &lt;a class="toc-backref" href="#id3"&gt;Use your own REPO / 使用这个Yum源&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Backup all the repo files. / 备份已经存在的 Yum 源配置文件&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /etc/yum.repos.d/
sudo mkdir bak
sudo mv *.repo ./bak
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Create local repo source file &lt;code&gt;/etc/yum.repos.d/local.repo&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为本地的Yum源添加配置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#name&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;local_server&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;#description&lt;/span&gt;
&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Thisis a &lt;span class="nb"&gt;local&lt;/span&gt; repo
&lt;span class="c1"&gt;#yum source&lt;/span&gt;
&lt;span class="nv"&gt;baseurl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;file:///usr/share/ais_repo
&lt;span class="nv"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;span class="c1"&gt;#check GPG-KEY&lt;/span&gt;
&lt;span class="nv"&gt;gpgcheck&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Make local yum source, clear cache and start cache. 清除缓存，开始使用本地Yum源。&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo yum clean all
sudo yum makecache
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="installation"&gt;
&lt;h2&gt;4. &lt;a class="toc-backref" href="#id4"&gt;Installation / 安装&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /usr/share/ais_repo/
sudo yum install java-1.8.0-openjdk-headless-1.8.0.144-0.b01.el7_4.x86_64.rpm
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="reference"&gt;
&lt;h2&gt;5. &lt;a class="toc-backref" href="#id5"&gt;Reference&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://yq.aliyun.com/ziliao/97558/"&gt;https://yq.aliyun.com/ziliao/97558/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Linux"></category><category term="CentOS"></category></entry><entry><title>Sphinx And RST</title><link href="https://brianshen1990.github.io/Sphinx_And_RST.html" rel="alternate"></link><published>2017-11-08T00:00:00+08:00</published><updated>2017-11-08T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:brianshen1990.github.io,2017-11-08:/Sphinx_And_RST.html</id><summary type="html">&lt;p class="first last"&gt;Sphinx And RST&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#what-is-sphinx-sphinx" id="id3"&gt;What is &lt;code&gt;Sphinx&lt;/code&gt; / 什么是 &lt;code&gt;Sphinx&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#how-to-install-sphinx" id="id4"&gt;How to install &lt;code&gt;Sphinx&lt;/code&gt; / 怎么安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#best-practice" id="id5"&gt;Best Practice / 最佳实践&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#rst-language-rst" id="id6"&gt;RST Language / RST 语言简介&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#section" id="id7"&gt;Section / 章节&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#words-style" id="id8"&gt;Words Style / 样式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#list" id="id9"&gt;List / 清单&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#reference-link" id="id10"&gt;Reference Link / 参考链接&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#codes" id="id11"&gt;Codes / 代码段&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#pictures" id="id12"&gt;Pictures / 图片&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#tables" id="id13"&gt;Tables / 表格&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="what-is-sphinx-sphinx"&gt;
&lt;span id="id1"&gt;&lt;/span&gt;&lt;h2&gt;1. &lt;a class="toc-backref" href="#id3"&gt;What is &lt;code&gt;Sphinx&lt;/code&gt; / 什么是 &lt;code&gt;Sphinx&lt;/code&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Reference : &lt;a class="reference external" href="http://www.sphinx-doc.org/en/stable/"&gt;Official Page&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sphinx is a tool that makes it easy to create intelligent and beautiful documentation.&lt;/p&gt;
&lt;p&gt;Sphinx 可以让你轻松地创建只能而漂亮的文档。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="how-to-install-sphinx"&gt;
&lt;h2&gt;2. &lt;a class="toc-backref" href="#id4"&gt;How to install &lt;code&gt;Sphinx&lt;/code&gt; / 怎么安装&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Prerequisite / 前提:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;li&gt;Pip&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Open cmd and execute:  / 打开命令行执行：
&lt;code&gt;pip install sphinx&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Usually, most people use a theme named &lt;code&gt;rtd&lt;/code&gt; , so install this theme: / 我们通常看到的主题的名字叫 &lt;code&gt;rtd&lt;/code&gt; ，可以这样安装：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pip install sphinx_rtd_theme&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Create a folder, then run command: / 新建文件夹 并且运行命令：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sphinx-quickstart&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;After input some essential information, &lt;code&gt;sphinx&lt;/code&gt; has created some files.&lt;/p&gt;
&lt;p&gt;再输入一些必要的信息之后， &lt;code&gt;sphinx&lt;/code&gt; 以及自动的为你创建了一些文件。&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/tools/sphinx_02.png" /&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Sphinx
├── _build          &lt;span class="c1"&gt;# output&lt;/span&gt;
├── _static         &lt;span class="c1"&gt;# resource, like pictures and files&lt;/span&gt;
├── _templates      &lt;span class="c1"&gt;# ignore&lt;/span&gt;
├── conf.py         &lt;span class="c1"&gt;# Sphinx configuration file&lt;/span&gt;
├── index.rst       &lt;span class="c1"&gt;# entry&lt;/span&gt;
├── make.bat        &lt;span class="c1"&gt;# Window make file&lt;/span&gt;
├── Makefile        &lt;span class="c1"&gt;# Linux make file&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;index.rst&lt;/code&gt; is the entry file, &lt;code&gt;sphinx&lt;/code&gt; will use this file and include other files mentioned in it.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;index.rst&lt;/code&gt; 是主入口文件，&lt;code&gt;sphinx&lt;/code&gt; 创建的 文档会包含其中的所有的其他链接文件。&lt;/p&gt;
&lt;p&gt;Modify the configuration file &lt;code&gt;conf.py&lt;/code&gt; / 修改配置文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# sys.path.insert(0, os.path.abspath(&amp;#39;.&amp;#39;))&lt;/span&gt;
import sphinx_rtd_theme

&lt;span class="c1"&gt;# html_theme = &amp;#39;alabaster&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;html_theme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;sphinx_rtd_theme&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now run &lt;code&gt;.\make.bat html&lt;/code&gt; , it will automatically turn &lt;code&gt;rst&lt;/code&gt; into &lt;code&gt;html&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;现在，可以运行 &lt;code&gt;.\make.bat html&lt;/code&gt; ，这将会自动的将 &lt;code&gt;rst&lt;/code&gt; 转换为 &lt;code&gt;html&lt;/code&gt; 文件。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Sphinx
├── _build
│   ├── html
│   │    ├── index.html &lt;span class="o"&gt;(&lt;/span&gt;Open this&lt;span class="o"&gt;)&lt;/span&gt;
├── _static
├── _templates
├── conf.py
├── index.rst
├── make.bat
├── Makefile
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/tools/sphinx_03.png" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="best-practice"&gt;
&lt;h2&gt;3. &lt;a class="toc-backref" href="#id5"&gt;Best Practice / 最佳实践&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;No matter we use &lt;code&gt;Sphinx&lt;/code&gt; for personal documents or for team projects documents, there will be a lot of documents. So, how to organize them?&lt;/p&gt;
&lt;p&gt;无论是用 &lt;code&gt;Sphinx&lt;/code&gt; 来记录个人文档 还是 团队文档，毫无疑问都会慢慢积累大量的文档，所以，如何去组织他们呢？&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Create a folder named &lt;code&gt;_content&lt;/code&gt; for original documents, and include them in the main entry file &lt;code&gt;index.rst&lt;/code&gt; .&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;创建一个文件夹，叫 &lt;code&gt;_content&lt;/code&gt; 来存放原始的 rst 文件，并且 将需要的文档包括进 &lt;code&gt;index.rst&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;The content of &lt;code&gt;index.rst&lt;/code&gt; .&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Welcome to my documentation!
&lt;span class="o"&gt;==============================&lt;/span&gt;

.. toctree::
:maxdepth: 2
       :caption: Contents:

       ./_content/content_one.rst
       ./_content/content_two.rst
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The content of &lt;code&gt;content_one.rst&lt;/code&gt; / &lt;code&gt;content_one.rst&lt;/code&gt; 的内容：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Sphinx Content one
&lt;span class="c1"&gt;##################&lt;/span&gt;

RST Language one
^^^^^^^^^^^^^^^^

Header Sample One
*****************
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Compile and open in chrome: / 编译并且在 浏览器中打开：&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/tools/sphinx_04.png" /&gt;
&lt;/div&gt;
&lt;p&gt;If we need numbers, add &lt;code&gt;:numbered:&lt;/code&gt; in &lt;code&gt;index.rst&lt;/code&gt; .
如果我们需要序号的话，可以加上 &lt;code&gt;:numbered:&lt;/code&gt;  标志。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;.. toctree::
   :maxdepth: 2
   :numbered:
   :caption: Contents:
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Compile and open in chrome。 / 编译再次在浏览器中打开即可。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Multi Projects / 多个工程&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If we have two or projects, then how to organize?&lt;/p&gt;
&lt;p&gt;如果我们有多个工程的话，那么怎么组织文件结构呢？&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;index.rst
content/
├── Node
│   ├── NodeIndex.rst
│   └── Node_Scheduler.rst
├── Tools
│   ├── ToolIndex.rst
│   ├── Tools_DiskMount.rst
│   ├── Tools_LocalYumRepo.rst
│   └── Tools_PDFToWord.rst
└── images
    └── tools
        ├── local_repo_01.png
        ├── local_repo_02.png
        ├── mount_disk_01.png
        └── pdf_to_word_01.png
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The content of &lt;code&gt;index.rst&lt;/code&gt; .&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Welcome to my documentation!
&lt;span class="o"&gt;==============================&lt;/span&gt;

.. toctree::
:maxdepth: 2
       :caption: Contents:

       ./_content/Tools/ToolsIndex.rst
       ./_content/Node/NodeIndex.rst
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The content of &lt;code&gt;ToolsIndex.rst&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Project &lt;span class="nv"&gt;Tools&lt;/span&gt;
&lt;span class="o"&gt;==============&lt;/span&gt;

.. toctree::
:maxdepth: 2
       :caption: Contents:

       ./Tools_DiskMount.rst
       ./Tools_LocalYumRepo.rst
       ./Tools_PDFToWord.rst
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this way, every folder can become a project and the main entry &lt;code&gt;index.rst&lt;/code&gt; doesn't need to care about the structure of sub directory..&lt;/p&gt;
&lt;p&gt;这样的结构， 每一个文件夹就是一个工程，并且 顶层 不需要关心 子目录的结构。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="rst-language-rst"&gt;
&lt;h2&gt;4. &lt;a class="toc-backref" href="#id6"&gt;RST Language / RST 语言简介&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Reference : &lt;a class="reference external" href="http://www.sphinx-doc.org/en/stable/rest.html#internal-links"&gt;RST reference&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="section"&gt;
&lt;h3&gt;4.1. &lt;a class="toc-backref" href="#id7"&gt;Section / 章节&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Header&lt;/span&gt;
Sphinx Introduction
&lt;span class="c1"&gt;###################&lt;/span&gt;

&lt;span class="c1"&gt;# Sub Header&lt;/span&gt;
RST Language
^^^^^^^^^^^^

&lt;span class="c1"&gt;# Small Header&lt;/span&gt;
Header Sample
*************
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Although official suggestion is the following, but use the previous one, it is compatible with many platforms.&lt;/p&gt;
&lt;p&gt;虽然官方推荐是以下的标志，但是还是推荐上面的格式，因为兼容性更好。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# with overline, for parts&lt;/span&gt;
* with overline, &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;chapters&lt;/span&gt;
&lt;span class="o"&gt;=&lt;/span&gt;, &lt;span class="k"&gt;for&lt;/span&gt; sections
-, &lt;span class="k"&gt;for&lt;/span&gt; subsections
^, &lt;span class="k"&gt;for&lt;/span&gt; subsubsections
&lt;span class="s2"&gt;&amp;quot;, for paragraphs&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="words-style"&gt;
&lt;h3&gt;4.2. &lt;a class="toc-backref" href="#id8"&gt;Words Style / 样式&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;emphasis – alternate spelling for &lt;em&gt;emphasis&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;strong – alternate spelling for &lt;strong&gt;strong&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;literal – alternate spelling for &lt;tt class="docutils literal"&gt;literal&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;subscript – subscript text&lt;/li&gt;
&lt;li&gt;superscript – superscript text&lt;/li&gt;
&lt;li&gt;title-reference – for titles of books, periodicals, and other materials&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;*emphasis* , **strong**,  &lt;span class="sb"&gt;``&lt;/span&gt;literal&lt;span class="sb"&gt;``&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sample / 示例 :&lt;/p&gt;
&lt;blockquote&gt;
&lt;em&gt;emphasis&lt;/em&gt; , &lt;strong&gt;strong&lt;/strong&gt;,  &lt;tt class="docutils literal"&gt;literal&lt;/tt&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="list"&gt;
&lt;h3&gt;4.3. &lt;a class="toc-backref" href="#id9"&gt;List / 清单&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;* This is a bulleted list.
* It has two items, the second
  item uses two lines.

1. This is a numbered list.
2. It has two items too.

&lt;span class="c1"&gt;#. This is a numbered list.&lt;/span&gt;
&lt;span class="c1"&gt;#. It has two items too.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Sample / 示例:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;This is a bulleted list.&lt;/li&gt;
&lt;li&gt;It has two items, the second
item uses two lines.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;This is a numbered list.&lt;/li&gt;
&lt;li&gt;It has two items too.&lt;/li&gt;
&lt;li&gt;This is a numbered list.&lt;/li&gt;
&lt;li&gt;It has two items too.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="reference-link"&gt;
&lt;h3&gt;4.4. &lt;a class="toc-backref" href="#id10"&gt;Reference Link / 参考链接&lt;/a&gt;&lt;/h3&gt;
&lt;ul id="sphinx-external"&gt;
&lt;li&gt;&lt;p class="first"&gt;External Link / 外部链接&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;Official Page &amp;lt;http://www.sphinx-doc.org/en/stable/&amp;gt;&lt;span class="sb"&gt;`&lt;/span&gt;_
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sample / 样例:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.sphinx-doc.org/en/stable/"&gt;Official Page&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Internal Link / 内部链接&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Add a link flag in document. / 在文档中添加一个连接标志&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;.. _sphinx-external:

- External Link
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To use this link: / 使用它：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:ref:&lt;span class="sb"&gt;`&lt;/span&gt;Go to External &amp;lt;sphinx-external&amp;gt;&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sample / 示例(Fail in pelican)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="codes"&gt;
&lt;h3&gt;4.5. &lt;a class="toc-backref" href="#id11"&gt;Codes / 代码段&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Simple Code / 示例代码&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;This is an introduction to :code:&lt;span class="sb"&gt;`&lt;/span&gt;Sphinx&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;Sample / 示例:&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;This is an introduction to &lt;code&gt;Sphinx&lt;/code&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Doc tree / 文档树&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;.. code-block:: bash

    storage_env
    ├── config
    ├── storage
    │   ├── provision  &lt;span class="o"&gt;(&lt;/span&gt;provision core codes&lt;span class="o"&gt;)&lt;/span&gt;
    │   │    ├── salesforce_provision.py
    │   │    ├── salesforce_sandbox_provision.py
    │   │    ├── salesforce_production_provision.py
    │   │    └── salesforce_utils
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sample / 示例:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;storage_env
├── config
├── storage
│   ├── provision  &lt;span class="o"&gt;(&lt;/span&gt;provision core codes&lt;span class="o"&gt;)&lt;/span&gt;
│   │    ├── salesforce_provision.py
│   │    ├── salesforce_sandbox_provision.py
│   │    ├── salesforce_production_provision.py
│   │    └── salesforce_utils
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Javascript / JS 代码&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;.. code-block:: javascript

    console.log&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Sphinx&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sample / 示例:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Sphinx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="pictures"&gt;
&lt;h3&gt;4.6. &lt;a class="toc-backref" href="#id12"&gt;Pictures / 图片&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;.. figure::  /images/tools/sphinx_01.png
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sample / 示例:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/tools/sphinx_01.png" /&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="tables"&gt;
&lt;h3&gt;4.7. &lt;a class="toc-backref" href="#id13"&gt;Tables / 表格&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;.. list-table::
    :widths: &lt;span class="m"&gt;25&lt;/span&gt; &lt;span class="m"&gt;25&lt;/span&gt; 50
    :header-rows: 1

    * - Heading row 1, column 1
      - Heading row 1, column 2
      - Heading row 1, column 3
    * - Row 1, column 1
      -
      - Row 1, column 3
    * - Row 2, column 1
      - Row 2, column 2
      - Row 2, column 3
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Sample / 示例&lt;/li&gt;
&lt;/ul&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="25%" /&gt;
&lt;col width="25%" /&gt;
&lt;col width="50%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Heading row 1, column 1&lt;/th&gt;
&lt;th class="head"&gt;Heading row 1, column 2&lt;/th&gt;
&lt;th class="head"&gt;Heading row 1, column 3&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Row 1, column 1&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;Row 1, column 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Row 2, column 1&lt;/td&gt;
&lt;td&gt;Row 2, column 2&lt;/td&gt;
&lt;td&gt;Row 2, column 3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="Sphinx"></category><category term="RST"></category></entry></feed>