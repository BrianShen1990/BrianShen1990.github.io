<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>KNOWN</title><link href="/" rel="alternate"></link><link href="/feeds/all.atom.xml" rel="self"></link><id>/</id><updated>2018-12-18T00:00:00+08:00</updated><entry><title>Node Webpack</title><link href="/Node_Webpack.html" rel="alternate"></link><published>2018-12-18T00:00:00+08:00</published><updated>2018-12-18T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:None,2018-12-18:/Node_Webpack.html</id><summary type="html">&lt;p class="first last"&gt;Node Webpack&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;span id="node-webpack-rst"&gt;&lt;/span&gt;&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#asset-management" id="id1"&gt;Asset Management 资产管理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#output-management" id="id2"&gt;Output Management / 输出管理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#development" id="id3"&gt;Development / 友好开发&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#hot-module-replacement" id="id4"&gt;Hot Module Replacement / 热模块加载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#tree-shaking" id="id5"&gt;Tree Shaking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#production" id="id6"&gt;Production / 生产环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#code-splitting" id="id7"&gt;Code Splitting / 代码分割&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#lazy-loading" id="id8"&gt;Lazy Loading / 懒加载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#caching" id="id9"&gt;Caching / 缓存&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#authoring-libraries" id="id10"&gt;Authoring Libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#shimming" id="id11"&gt;Shimming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#progressive-web-application-web" id="id12"&gt;Progressive Web Application / 渐进式Web应用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#type-script" id="id13"&gt;Type Script&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#sample" id="id14"&gt;Sample / 示例&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#webpack-common-js" id="id15"&gt;webpack.common.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#webpack-dev-js" id="id16"&gt;webpack.dev.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#webpack-prod-js" id="id17"&gt;webpack.prod.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#package-json" id="id18"&gt;package.json&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#tsconfig-json" id="id19"&gt;tsconfig.json&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;Basic Usage of Webpack.  / Webpack 的简单使用。&lt;/p&gt;
&lt;div class="section" id="asset-management"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id1"&gt;Asset Management 资产管理&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Mainly how to manipulate rules to support them.&lt;/p&gt;
&lt;p&gt;主要是如何通过配置规则 来 支持各种文件资产类型。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;module: &lt;span class="o"&gt;{&lt;/span&gt;
  rules: &lt;span class="o"&gt;[&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
      test: /&lt;span class="se"&gt;\.&lt;/span&gt;css$/,
      use: &lt;span class="o"&gt;[&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;style-loader&amp;#39;&lt;/span&gt;,
        &lt;span class="s1"&gt;&amp;#39;css-loader&amp;#39;&lt;/span&gt;,
      &lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;,
    &lt;span class="o"&gt;{&lt;/span&gt;
      test: /&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;png&lt;span class="p"&gt;|&lt;/span&gt;svg&lt;span class="p"&gt;|&lt;/span&gt;jpg&lt;span class="p"&gt;|&lt;/span&gt;gif&lt;span class="o"&gt;)&lt;/span&gt;$/,
      use: &lt;span class="o"&gt;[&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;file-loader&amp;#39;&lt;/span&gt;,
      &lt;span class="o"&gt;]&lt;/span&gt;,
    &lt;span class="o"&gt;}&lt;/span&gt;,
  &lt;span class="o"&gt;]&lt;/span&gt;,
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="output-management"&gt;
&lt;h2&gt;2. &lt;a class="toc-backref" href="#id2"&gt;Output Management / 输出管理&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Mainly &lt;code&gt;Entry&lt;/code&gt; and &lt;code&gt;Output&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;主要是 入口点 和 输出。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;entry: &lt;span class="o"&gt;{&lt;/span&gt;
  index: &lt;span class="s1"&gt;&amp;#39;./src/index.js&amp;#39;&lt;/span&gt;,
&lt;span class="o"&gt;}&lt;/span&gt;,
output: &lt;span class="o"&gt;{&lt;/span&gt;
  filename: &lt;span class="s1"&gt;&amp;#39;[name].[hash].js&amp;#39;&lt;/span&gt;,
  chunkFilename: &lt;span class="s1"&gt;&amp;#39;[name].[hash].js&amp;#39;&lt;/span&gt;,
  path: path.resolve&lt;span class="o"&gt;(&lt;/span&gt;__dirname, &lt;span class="s1"&gt;&amp;#39;dist&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And clear dist by &lt;code&gt;CleanWebpackPlugin&lt;/code&gt; :
如果想要清除目标文件夹中的文件，使用插件 &lt;code&gt;CleanWebpackPlugin&lt;/code&gt; 。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;CleanWebpackPlugin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;clean-webpack-plugin&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

plugins: &lt;span class="o"&gt;[&lt;/span&gt;
  new CleanWebpackPlugin&lt;span class="o"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dist&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt;,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And generate html &lt;code&gt;index.html&lt;/code&gt; automatically。&lt;/p&gt;
&lt;p&gt;如果想要自动的产生 &lt;code&gt;index.html&lt;/code&gt; 。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;CleanWebpackPlugin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;clean-webpack-plugin&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

new HtmlWebpackPlugin&lt;span class="o"&gt;({&lt;/span&gt;
  title: &lt;span class="s1"&gt;&amp;#39;Output01&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;})&lt;/span&gt;,
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="development"&gt;
&lt;h2&gt;3. &lt;a class="toc-backref" href="#id3"&gt;Development / 友好开发&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Add source map to debug in UI:
在 UI 中加入 source map 以便调试。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;devtool: &lt;span class="s1"&gt;&amp;#39;inline-source-map&amp;#39;&lt;/span&gt;,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And &lt;code&gt;webpack-dev-server&lt;/code&gt; :
开发是也可以使用 &lt;code&gt;webpack-dev-server&lt;/code&gt; 来启动本地服务器。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;devServer: &lt;span class="o"&gt;{&lt;/span&gt;
  contentBase: &lt;span class="s1"&gt;&amp;#39;./dist&amp;#39;&lt;/span&gt;,
  hot: true,
&lt;span class="o"&gt;}&lt;/span&gt;,
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="hot-module-replacement"&gt;
&lt;h2&gt;4. &lt;a class="toc-backref" href="#id4"&gt;Hot Module Replacement / 热模块加载&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Advanced Feature.
Haven't used it yet.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="tree-shaking"&gt;
&lt;h2&gt;5. &lt;a class="toc-backref" href="#id5"&gt;Tree Shaking&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Remove unnecessary modules of code for ES2015&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Add &lt;code&gt;sideEffects&lt;/code&gt; to indicate which files are pure ES2015 MODULES.&lt;/p&gt;
&lt;p&gt;主要是用来移除不必要的模块。
将那些单纯的ES2015的代码，整理到 &lt;code&gt;sideEffects&lt;/code&gt; tag 下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Minify the Output (Uglify)&lt;/p&gt;
&lt;p&gt;最小化代码。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mode: &lt;span class="s1"&gt;&amp;#39;production&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="production"&gt;
&lt;h2&gt;6. &lt;a class="toc-backref" href="#id6"&gt;Production / 生产环境&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Use &lt;code&gt;webpack-merge&lt;/code&gt; and&lt;/p&gt;
&lt;p&gt;使用   &lt;code&gt;webpack-merge&lt;/code&gt; 模块，&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;webpack.common.js
webpack.dev.js
webpack.prod.js
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;so that we can have different configurations in different environment.
Also meed to update npm scripts as well.&lt;/p&gt;
&lt;p&gt;这样的话，开发 和 部署环境会有不同的配置。 当然我们也需要在 npm 代码中进行相应的修改。&lt;/p&gt;
&lt;p&gt;source mapping in production: &lt;code&gt;devtool: 'source-map'&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;source mapping 永远是被推荐的，即使是在生产环境中。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="code-splitting"&gt;
&lt;h2&gt;7. &lt;a class="toc-backref" href="#id7"&gt;Code Splitting / 代码分割&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Multi Entries / 多入口点&lt;/p&gt;
&lt;p&gt;Multi Entries will split code but will also cause Duplication.&lt;/p&gt;
&lt;p&gt;即使定义了多个入口点，编译出来的单独的文件 是互相隔离的，会导致重复代码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Prevent Duplication / 避免重复代码。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;optimization: &lt;span class="o"&gt;{&lt;/span&gt;
  splitChunks: &lt;span class="o"&gt;{&lt;/span&gt;
    chunks: &lt;span class="s1"&gt;&amp;#39;all&amp;#39;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Dynamic Imports / 动态加载&lt;/p&gt;
&lt;p&gt;Instead of using optimization, we use&lt;/p&gt;
&lt;p&gt;与 优化不同，这边会将所有的依赖打包成单个文件。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;output: &lt;span class="o"&gt;{&lt;/span&gt;
  filename: &lt;span class="s1"&gt;&amp;#39;[name].bundle.js&amp;#39;&lt;/span&gt;,
  chunkFilename: &lt;span class="s1"&gt;&amp;#39;[name].bundle.js&amp;#39;&lt;/span&gt;,
  path: path.resolve&lt;span class="o"&gt;(&lt;/span&gt;__dirname, &lt;span class="s1"&gt;&amp;#39;dist&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and use dynamic imports. A little unfriendly for developers.&lt;/p&gt;
&lt;p&gt;并且动态的加载。 对开发还是有些不利的。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="o"&gt;{&lt;/span&gt; default: _ &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; await import&lt;span class="o"&gt;(&lt;/span&gt;/* webpackChunkName: &lt;span class="s2"&gt;&amp;quot;lodash&amp;quot;&lt;/span&gt; */ &lt;span class="s1"&gt;&amp;#39;lodash&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
element.innerHTML &lt;span class="o"&gt;=&lt;/span&gt; _.join&lt;span class="o"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Hello&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;webpack&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Prefetching/Preloading modules&lt;/p&gt;
&lt;p&gt;预先加载代码的话，直接使用 import 就可以了。&lt;/p&gt;
&lt;p&gt;Using import.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="lazy-loading"&gt;
&lt;h2&gt;8. &lt;a class="toc-backref" href="#id8"&gt;Lazy Loading / 懒加载&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;More complex and is very unfriend to developers.&lt;/p&gt;
&lt;p&gt;更加的复杂， 对开发也不是很友好。&lt;/p&gt;
&lt;p&gt;Dynamic load during events like click.&lt;/p&gt;
&lt;p&gt;懒加载 就是， 直到某个事件发生了， 要去使用一个资源，我们再去动态的加载。&lt;/p&gt;
&lt;p&gt;However, there are some frameworks: / 针对不同前端库，其实有自己的一些框架。&lt;/p&gt;
&lt;blockquote&gt;
&lt;a class="reference external" href="https://reacttraining.com/react-router/web/guides/code-splitting"&gt;https://reacttraining.com/react-router/web/guides/code-splitting&lt;/a&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="caching"&gt;
&lt;h2&gt;9. &lt;a class="toc-backref" href="#id9"&gt;Caching / 缓存&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Add hash to name so that whenever a file updates, the name will change as well.&lt;/p&gt;
&lt;p&gt;在文件名中加上 hash 值，这样的话 文件只要有变动，名字也会跟着改变。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;output: &lt;span class="o"&gt;{&lt;/span&gt;
  filename: &lt;span class="s1"&gt;&amp;#39;[name].[hash].js&amp;#39;&lt;/span&gt;,
  chunkFilename: &lt;span class="s1"&gt;&amp;#39;[name].[hash].js&amp;#39;&lt;/span&gt;,
  path: path.resolve&lt;span class="o"&gt;(&lt;/span&gt;__dirname, &lt;span class="s1"&gt;&amp;#39;dist&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Combine vendors in node_modules.
可以将 node_modules 文件夹中不变的内容 都让在一个 文件里面， 因为他们是不变动的。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;optimization: &lt;span class="o"&gt;{&lt;/span&gt;
  usedExports: true,
  runtimeChunk: &lt;span class="s1"&gt;&amp;#39;single&amp;#39;&lt;/span&gt;,
  splitChunks: &lt;span class="o"&gt;{&lt;/span&gt;
    cacheGroups: &lt;span class="o"&gt;{&lt;/span&gt;
      vendor: &lt;span class="o"&gt;{&lt;/span&gt;
        test: /&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;/&lt;span class="o"&gt;]&lt;/span&gt;node_modules&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;/&lt;span class="o"&gt;]&lt;/span&gt;/,
        name: &lt;span class="s1"&gt;&amp;#39;vendors&amp;#39;&lt;/span&gt;,
        chunks: &lt;span class="s1"&gt;&amp;#39;all&amp;#39;&lt;/span&gt;,
      &lt;span class="o"&gt;}&lt;/span&gt;,
    &lt;span class="o"&gt;}&lt;/span&gt;,
  &lt;span class="o"&gt;}&lt;/span&gt;,
&lt;span class="o"&gt;}&lt;/span&gt;,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, we need to use plugins as each &lt;code&gt;module.id&lt;/code&gt;  is incremented based on resolving order by default.&lt;/p&gt;
&lt;p&gt;当然，我们需要记住 一个插件，否则 每一次  &lt;code&gt;module.id&lt;/code&gt; 都会改变。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plugins: &lt;span class="o"&gt;[&lt;/span&gt;
  new webpack.HashedModuleIdsPlugin&lt;span class="o"&gt;()&lt;/span&gt;,
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="authoring-libraries"&gt;
&lt;h2&gt;10. &lt;a class="toc-backref" href="#id10"&gt;Authoring Libraries&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;创建一个 库。&lt;/p&gt;
&lt;p&gt;use library and library and externals.&lt;/p&gt;
&lt;p&gt;需要借助 library 和 externals 标签。&lt;/p&gt;
&lt;p&gt;TODO&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="shimming"&gt;
&lt;h2&gt;11. &lt;a class="toc-backref" href="#id11"&gt;Shimming&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Not recommended!  / 不推荐&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Shimming Globals / 全局变量&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plugins: &lt;span class="o"&gt;[&lt;/span&gt;
  new webpack.ProvidePlugin&lt;span class="o"&gt;({&lt;/span&gt;
  _: &lt;span class="s1"&gt;&amp;#39;lodash&amp;#39;&lt;/span&gt;
  &lt;span class="o"&gt;})&lt;/span&gt;,
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Global Exports / 全局导出&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Very useful for dated libs.&lt;/p&gt;
&lt;p&gt;当我们使用 一个过时的库时，会很实用。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;src/globals.js

var &lt;span class="nv"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;blah.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
var &lt;span class="nv"&gt;helpers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  test: &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; console.log&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;test something&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;,
  parse: &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; console.log&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;parse something&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What can we do about that?&lt;/p&gt;
&lt;p&gt;我们如何去使用这个库？&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;module: &lt;span class="o"&gt;{&lt;/span&gt;
  rules: &lt;span class="o"&gt;[&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
      test: require.resolve&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index.js&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;,
      use: &lt;span class="s1"&gt;&amp;#39;imports-loader?this=&amp;gt;window&amp;#39;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;,
    &lt;span class="o"&gt;{&lt;/span&gt;
      test: require.resolve&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;globals.js&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;,
      use: &lt;span class="s1"&gt;&amp;#39;exports-loader?file,parse=helpers.parse&amp;#39;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And now we can use &lt;code&gt;import { file, parse } from './globals.js';&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;现在我们可以使用  &lt;code&gt;import { file, parse } from './globals.js';&lt;/code&gt;  。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="progressive-web-application-web"&gt;
&lt;h2&gt;12. &lt;a class="toc-backref" href="#id12"&gt;Progressive Web Application / 渐进式Web应用&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A Service Worker ran at background, quite amazing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="type-script"&gt;
&lt;h2&gt;13. &lt;a class="toc-backref" href="#id13"&gt;Type Script&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Need a &lt;code&gt;tsconfig.json&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;需要额外的 配置文件 &lt;code&gt;tsconfig.json&lt;/code&gt; 。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;compilerOptions&amp;quot;&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;outDir&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;./dist/&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;sourceMap&amp;quot;&lt;/span&gt;: true,
    &lt;span class="s2"&gt;&amp;quot;noImplicitAny&amp;quot;&lt;/span&gt;: true,
    &lt;span class="s2"&gt;&amp;quot;module&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;es6&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;target&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;es5&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;jsx&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;react&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;allowJs&amp;quot;&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And add this / 并且添加上 规则:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;module: &lt;span class="o"&gt;{&lt;/span&gt;
  rules: &lt;span class="o"&gt;[&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
      test: /&lt;span class="se"&gt;\.&lt;/span&gt;tsx?$/,
      use: &lt;span class="s1"&gt;&amp;#39;ts-loader&amp;#39;&lt;/span&gt;,
      exclude: /node_modules/
    &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;,
resolve: &lt;span class="o"&gt;{&lt;/span&gt;
  extensions: &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.tsx&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;.ts&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;.js&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;,
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="sample"&gt;
&lt;h2&gt;14. &lt;a class="toc-backref" href="#id14"&gt;Sample / 示例&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="webpack-common-js"&gt;
&lt;h3&gt;14.1. &lt;a class="toc-backref" href="#id15"&gt;webpack.common.js&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;path&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
const &lt;span class="nv"&gt;HtmlWebpackPlugin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;html-webpack-plugin&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
const &lt;span class="nv"&gt;CleanWebpackPlugin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;clean-webpack-plugin&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
const &lt;span class="nv"&gt;webpack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;webpack&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

module.exports &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  entry: &lt;span class="o"&gt;{&lt;/span&gt;
    index: &lt;span class="s1"&gt;&amp;#39;./src/index.js&amp;#39;&lt;/span&gt;,
  &lt;span class="o"&gt;}&lt;/span&gt;,
  plugins: &lt;span class="o"&gt;[&lt;/span&gt;
    new CleanWebpackPlugin&lt;span class="o"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dist&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt;,
    new HtmlWebpackPlugin&lt;span class="o"&gt;({&lt;/span&gt;
      title: &lt;span class="s1"&gt;&amp;#39;Output01&amp;#39;&lt;/span&gt;
    &lt;span class="o"&gt;})&lt;/span&gt;,
    new webpack.HashedModuleIdsPlugin&lt;span class="o"&gt;()&lt;/span&gt;,
    new webpack.HotModuleReplacementPlugin&lt;span class="o"&gt;()&lt;/span&gt;,
    new webpack.ProvidePlugin&lt;span class="o"&gt;({&lt;/span&gt;
      _: &lt;span class="s1"&gt;&amp;#39;lodash&amp;#39;&lt;/span&gt;
    &lt;span class="o"&gt;})&lt;/span&gt;,
  &lt;span class="o"&gt;]&lt;/span&gt;,
  output: &lt;span class="o"&gt;{&lt;/span&gt;
    filename: &lt;span class="s1"&gt;&amp;#39;[name].[hash].js&amp;#39;&lt;/span&gt;,
    chunkFilename: &lt;span class="s1"&gt;&amp;#39;[name].[hash].js&amp;#39;&lt;/span&gt;,
    path: path.resolve&lt;span class="o"&gt;(&lt;/span&gt;__dirname, &lt;span class="s1"&gt;&amp;#39;dist&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;,
  module: &lt;span class="o"&gt;{&lt;/span&gt;
    rules: &lt;span class="o"&gt;[&lt;/span&gt;
      &lt;span class="o"&gt;{&lt;/span&gt;
        test: /&lt;span class="se"&gt;\.&lt;/span&gt;tsx?$/,
        use: &lt;span class="s1"&gt;&amp;#39;ts-loader&amp;#39;&lt;/span&gt;,
        exclude: /node_modules/
      &lt;span class="o"&gt;}&lt;/span&gt;,
      &lt;span class="o"&gt;{&lt;/span&gt;
        test: /&lt;span class="se"&gt;\.&lt;/span&gt;css$/,
        use: &lt;span class="o"&gt;[&lt;/span&gt;
          &lt;span class="s1"&gt;&amp;#39;style-loader&amp;#39;&lt;/span&gt;,
          &lt;span class="s1"&gt;&amp;#39;css-loader&amp;#39;&lt;/span&gt;,
        &lt;span class="o"&gt;]&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;,
      &lt;span class="o"&gt;{&lt;/span&gt;
        test: /&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;png&lt;span class="p"&gt;|&lt;/span&gt;svg&lt;span class="p"&gt;|&lt;/span&gt;jpg&lt;span class="p"&gt;|&lt;/span&gt;gif&lt;span class="o"&gt;)&lt;/span&gt;$/,
        use: &lt;span class="o"&gt;[&lt;/span&gt;
          &lt;span class="s1"&gt;&amp;#39;file-loader&amp;#39;&lt;/span&gt;,
        &lt;span class="o"&gt;]&lt;/span&gt;,
      &lt;span class="o"&gt;}&lt;/span&gt;,
      &lt;span class="o"&gt;{&lt;/span&gt;
        test: /&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;woff&lt;span class="p"&gt;|&lt;/span&gt;woff2&lt;span class="p"&gt;|&lt;/span&gt;eot&lt;span class="p"&gt;|&lt;/span&gt;ttf&lt;span class="p"&gt;|&lt;/span&gt;otf&lt;span class="o"&gt;)&lt;/span&gt;$/,
        use: &lt;span class="o"&gt;[&lt;/span&gt;
          &lt;span class="s1"&gt;&amp;#39;file-loader&amp;#39;&lt;/span&gt;
        &lt;span class="o"&gt;]&lt;/span&gt;,
      &lt;span class="o"&gt;}&lt;/span&gt;,
    &lt;span class="o"&gt;]&lt;/span&gt;,
  &lt;span class="o"&gt;}&lt;/span&gt;,
  resolve: &lt;span class="o"&gt;{&lt;/span&gt;
    extensions: &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.tsx&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;.ts&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;.js&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;,
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="webpack-dev-js"&gt;
&lt;h3&gt;14.2. &lt;a class="toc-backref" href="#id16"&gt;webpack.dev.js&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;merge&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;webpack-merge&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
const &lt;span class="nv"&gt;common&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./webpack.common.js&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

module.exports &lt;span class="o"&gt;=&lt;/span&gt; merge&lt;span class="o"&gt;(&lt;/span&gt;common, &lt;span class="o"&gt;{&lt;/span&gt;
  // mode: &lt;span class="s1"&gt;&amp;#39;production&amp;#39;&lt;/span&gt;,
  mode: &lt;span class="s1"&gt;&amp;#39;development&amp;#39;&lt;/span&gt;,
  devtool: &lt;span class="s1"&gt;&amp;#39;inline-source-map&amp;#39;&lt;/span&gt;,
  devServer: &lt;span class="o"&gt;{&lt;/span&gt;
    contentBase: &lt;span class="s1"&gt;&amp;#39;./dist&amp;#39;&lt;/span&gt;,
    hot: true,
  &lt;span class="o"&gt;}&lt;/span&gt;,
&lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="webpack-prod-js"&gt;
&lt;h3&gt;14.3. &lt;a class="toc-backref" href="#id17"&gt;webpack.prod.js&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;const &lt;span class="nv"&gt;merge&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;webpack-merge&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
const &lt;span class="nv"&gt;common&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; require&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./webpack.common.js&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

module.exports &lt;span class="o"&gt;=&lt;/span&gt; merge&lt;span class="o"&gt;(&lt;/span&gt;common, &lt;span class="o"&gt;{&lt;/span&gt;
  mode: &lt;span class="s1"&gt;&amp;#39;production&amp;#39;&lt;/span&gt;,
  devtool: &lt;span class="s1"&gt;&amp;#39;source-map&amp;#39;&lt;/span&gt;,
  optimization: &lt;span class="o"&gt;{&lt;/span&gt;
    usedExports: true,
    runtimeChunk: &lt;span class="s1"&gt;&amp;#39;single&amp;#39;&lt;/span&gt;,
    splitChunks: &lt;span class="o"&gt;{&lt;/span&gt;
      cacheGroups: &lt;span class="o"&gt;{&lt;/span&gt;
        vendor: &lt;span class="o"&gt;{&lt;/span&gt;
          test: /&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;/&lt;span class="o"&gt;]&lt;/span&gt;node_modules&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;/&lt;span class="o"&gt;]&lt;/span&gt;/,
          name: &lt;span class="s1"&gt;&amp;#39;vendors&amp;#39;&lt;/span&gt;,
          chunks: &lt;span class="s1"&gt;&amp;#39;all&amp;#39;&lt;/span&gt;,
        &lt;span class="o"&gt;}&lt;/span&gt;,
      &lt;span class="o"&gt;}&lt;/span&gt;,
    &lt;span class="o"&gt;}&lt;/span&gt;,
  &lt;span class="o"&gt;}&lt;/span&gt;,
&lt;span class="o"&gt;})&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="package-json"&gt;
&lt;h3&gt;14.4. &lt;a class="toc-backref" href="#id18"&gt;package.json&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;webpack-demo&amp;quot;&lt;/span&gt;,
  &lt;span class="s2"&gt;&amp;quot;version&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;1.0.0&amp;quot;&lt;/span&gt;,
  &lt;span class="s2"&gt;&amp;quot;description&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;,
  &lt;span class="s2"&gt;&amp;quot;private&amp;quot;&lt;/span&gt;: true,
  &lt;span class="s2"&gt;&amp;quot;scripts&amp;quot;&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;test&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;echo \&amp;quot;Error: no test specified\&amp;quot; &amp;amp;&amp;amp; exit 1&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;build&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;webpack --config webpack.prod.js&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;watch&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;webpack --watch&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;startHttp&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;http-server dist&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;start&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;webpack-dev-server --open --config webpack.dev.js&amp;quot;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;,
  &lt;span class="s2"&gt;&amp;quot;keywords&amp;quot;&lt;/span&gt;: &lt;span class="o"&gt;[]&lt;/span&gt;,
  &lt;span class="s2"&gt;&amp;quot;author&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;,
  &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;ISC&amp;quot;&lt;/span&gt;,
  &lt;span class="s2"&gt;&amp;quot;devDependencies&amp;quot;&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;clean-webpack-plugin&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^1.0.0&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;css-loader&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^2.0.1&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;express&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^4.16.4&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;file-loader&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^2.0.0&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;html-webpack-plugin&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^3.2.0&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;http-server&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^0.11.1&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;style-loader&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^0.23.1&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;ts-loader&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^5.3.1&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;typescript&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^3.2.2&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;webpack&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^4.27.1&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;webpack-cli&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^3.1.2&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;webpack-dev-middleware&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^3.4.0&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;webpack-dev-server&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^3.1.10&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;webpack-merge&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^4.1.5&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;workbox-webpack-plugin&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^3.6.3&amp;quot;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;,
  &lt;span class="s2"&gt;&amp;quot;dependencies&amp;quot;&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;lodash&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;^4.17.11&amp;quot;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;,
  &lt;span class="s2"&gt;&amp;quot;sideEffects&amp;quot;&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="tsconfig-json"&gt;
&lt;h3&gt;14.5. &lt;a class="toc-backref" href="#id19"&gt;tsconfig.json&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;compilerOptions&amp;quot;&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;outDir&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;./dist/&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;sourceMap&amp;quot;&lt;/span&gt;: true,
    &lt;span class="s2"&gt;&amp;quot;noImplicitAny&amp;quot;&lt;/span&gt;: true,
    &lt;span class="s2"&gt;&amp;quot;module&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;es6&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;target&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;es5&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;jsx&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;react&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;allowJs&amp;quot;&lt;/span&gt;: &lt;span class="nb"&gt;true&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="Node"></category></entry><entry><title>Mount disk to VG / 磁盘挂载到虚拟分区</title><link href="/Tools_mount_disk_to_vg.html" rel="alternate"></link><published>2018-11-24T00:00:00+08:00</published><updated>2018-11-24T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:None,2018-11-24:/Tools_mount_disk_to_vg.html</id><summary type="html">&lt;p class="first last"&gt;Tools - Mount Disk to VG&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;span id="mount-disk-to-vg-rst"&gt;&lt;/span&gt;&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#mount-a-new-disk" id="id1"&gt;Mount A New Disk / 挂载新的磁盘&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#env" id="id2"&gt;Env / 环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#add-a-disk" id="id3"&gt;Add a Disk / 添加一块磁盘&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#creating-linux-partitions-in-the-new-added-disk-linux" id="id4"&gt;Creating Linux Partitions in the new added disk / 在新加硬盘上创建 Linux 分区&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#creating-a-file-system" id="id5"&gt;Creating a File System / 创建文件系统&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#mount-it-to-linux-virtual-system-lvs-linux" id="id6"&gt;Mount it to Linux Virtual System (LVS) / 挂载到 Linux 虚拟分区&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#reference" id="id7"&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;All lines started with &lt;code&gt;#&lt;/code&gt; should be input. / 所有 &lt;code&gt;#&lt;/code&gt; 前缀的都是 输入的部分。&lt;/p&gt;
&lt;div class="section" id="mount-a-new-disk"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id1"&gt;Mount A New Disk / 挂载新的磁盘&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="env"&gt;
&lt;h3&gt;1.1. &lt;a class="toc-backref" href="#id2"&gt;Env / 环境&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Current, we have 100G Disk. / 当前我们有 100G 磁盘。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# lsblk&lt;/span&gt;

    NAME                          MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
    sda                             &lt;span class="m"&gt;8&lt;/span&gt;:0    &lt;span class="m"&gt;0&lt;/span&gt;  100G  &lt;span class="m"&gt;0&lt;/span&gt; disk
    ├─sda1                          &lt;span class="m"&gt;8&lt;/span&gt;:1    &lt;span class="m"&gt;0&lt;/span&gt;  500M  &lt;span class="m"&gt;0&lt;/span&gt; part /boot
    └─sda2                          &lt;span class="m"&gt;8&lt;/span&gt;:2    &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;99&lt;/span&gt;.5G  &lt;span class="m"&gt;0&lt;/span&gt; part
        ├─centos-root               &lt;span class="m"&gt;253&lt;/span&gt;:0    &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;92&lt;/span&gt;.5G  &lt;span class="m"&gt;0&lt;/span&gt; lvm  /
        ├─centos-swap               &lt;span class="m"&gt;253&lt;/span&gt;:1    &lt;span class="m"&gt;0&lt;/span&gt;    2G  &lt;span class="m"&gt;0&lt;/span&gt; lvm  &lt;span class="o"&gt;[&lt;/span&gt;SWAP&lt;span class="o"&gt;]&lt;/span&gt;
        └─centos-home               &lt;span class="m"&gt;253&lt;/span&gt;:2    &lt;span class="m"&gt;0&lt;/span&gt;    5G  &lt;span class="m"&gt;0&lt;/span&gt; lvm  /home
    sr0                            &lt;span class="m"&gt;11&lt;/span&gt;:0    &lt;span class="m"&gt;1&lt;/span&gt; 1024M  &lt;span class="m"&gt;0&lt;/span&gt; rom
    loop0                           &lt;span class="m"&gt;7&lt;/span&gt;:0    &lt;span class="m"&gt;0&lt;/span&gt;  100G  &lt;span class="m"&gt;0&lt;/span&gt; loop
    └─docker-253:0-134516294-pool &lt;span class="m"&gt;253&lt;/span&gt;:3    &lt;span class="m"&gt;0&lt;/span&gt;  100G  &lt;span class="m"&gt;0&lt;/span&gt; dm
    loop1                           &lt;span class="m"&gt;7&lt;/span&gt;:1    &lt;span class="m"&gt;0&lt;/span&gt;    2G  &lt;span class="m"&gt;0&lt;/span&gt; loop
    └─docker-253:0-134516294-pool &lt;span class="m"&gt;253&lt;/span&gt;:3    &lt;span class="m"&gt;0&lt;/span&gt;  100G  &lt;span class="m"&gt;0&lt;/span&gt; dm
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As we can see, all disks are assigned to root directory. / 所有的磁盘指定给了 根目录。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="add-a-disk"&gt;
&lt;h3&gt;1.2. &lt;a class="toc-backref" href="#id3"&gt;Add a Disk / 添加一块磁盘&lt;/a&gt;&lt;/h3&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/tools/mount_disk_01.png" /&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# ls /dev/sd*&lt;/span&gt;
    /dev/sda  /dev/sda1  /dev/sda2
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since we didn't restart the PC, OS wouldn't be able to detect the new disk. / 因为我们没有重启， 所有系统发现不了这个新的磁盘。&lt;/p&gt;
&lt;p&gt;To force OS reloading disk information, we can execute this: / 为了强制刷新磁盘信息， 我们可以执行以下命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# echo &amp;#39;- - -&amp;#39; &amp;gt; /sys/class/scsi_host/host0/scan&lt;/span&gt;
&lt;span class="c1"&gt;# ls /dev/sd*&lt;/span&gt;
    /dev/sda  /dev/sda1  /dev/sda2  /dev/sdb
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's see what happened: / 看看发生了什么。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# lsblk&lt;/span&gt;
    NAME                          MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
    sda                             &lt;span class="m"&gt;8&lt;/span&gt;:0    &lt;span class="m"&gt;0&lt;/span&gt;  100G  &lt;span class="m"&gt;0&lt;/span&gt; disk
    ├─sda1                          &lt;span class="m"&gt;8&lt;/span&gt;:1    &lt;span class="m"&gt;0&lt;/span&gt;  500M  &lt;span class="m"&gt;0&lt;/span&gt; part /boot
    └─sda2                          &lt;span class="m"&gt;8&lt;/span&gt;:2    &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;99&lt;/span&gt;.5G  &lt;span class="m"&gt;0&lt;/span&gt; part
        ├─centos-root               &lt;span class="m"&gt;253&lt;/span&gt;:0    &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;92&lt;/span&gt;.5G  &lt;span class="m"&gt;0&lt;/span&gt; lvm  /
        ├─centos-swap               &lt;span class="m"&gt;253&lt;/span&gt;:1    &lt;span class="m"&gt;0&lt;/span&gt;    2G  &lt;span class="m"&gt;0&lt;/span&gt; lvm  &lt;span class="o"&gt;[&lt;/span&gt;SWAP&lt;span class="o"&gt;]&lt;/span&gt;
        └─centos-home               &lt;span class="m"&gt;253&lt;/span&gt;:2    &lt;span class="m"&gt;0&lt;/span&gt;    5G  &lt;span class="m"&gt;0&lt;/span&gt; lvm  /home
    sdb                             &lt;span class="m"&gt;8&lt;/span&gt;:16   &lt;span class="m"&gt;0&lt;/span&gt;   16G  &lt;span class="m"&gt;0&lt;/span&gt; disk
    sr0                            &lt;span class="m"&gt;11&lt;/span&gt;:0    &lt;span class="m"&gt;1&lt;/span&gt; 1024M  &lt;span class="m"&gt;0&lt;/span&gt; rom
    loop0                           &lt;span class="m"&gt;7&lt;/span&gt;:0    &lt;span class="m"&gt;0&lt;/span&gt;  100G  &lt;span class="m"&gt;0&lt;/span&gt; loop
    └─docker-253:0-134516294-pool &lt;span class="m"&gt;253&lt;/span&gt;:3    &lt;span class="m"&gt;0&lt;/span&gt;  100G  &lt;span class="m"&gt;0&lt;/span&gt; dm
    loop1                           &lt;span class="m"&gt;7&lt;/span&gt;:1    &lt;span class="m"&gt;0&lt;/span&gt;    2G  &lt;span class="m"&gt;0&lt;/span&gt; loop
    └─docker-253:0-134516294-pool &lt;span class="m"&gt;253&lt;/span&gt;:3    &lt;span class="m"&gt;0&lt;/span&gt;  100G  &lt;span class="m"&gt;0&lt;/span&gt; dm
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we can see a new disk named &lt;code&gt;sdb&lt;/code&gt; in the disk information.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="creating-linux-partitions-in-the-new-added-disk-linux"&gt;
&lt;h3&gt;1.3. &lt;a class="toc-backref" href="#id4"&gt;Creating Linux Partitions in the new added disk / 在新加硬盘上创建 Linux 分区&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# fdisk /dev/sdb&lt;/span&gt;
    Welcome to fdisk &lt;span class="o"&gt;(&lt;/span&gt;util-linux &lt;span class="m"&gt;2&lt;/span&gt;.23.2&lt;span class="o"&gt;)&lt;/span&gt;.

    Changes will remain in memory only, &lt;span class="k"&gt;until&lt;/span&gt; you decide to write them.
    Be careful before using the write command.

    Device does not contain a recognized partition table
    Building a new DOS disklabel with disk identifier 0x111936e6.

&lt;span class="c1"&gt;# Command (m for help): c&lt;/span&gt;
    DOS Compatibility flag is &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;DEPRECATED!&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Command (m for help): u&lt;/span&gt;
    Changing display/entry units to cylinders &lt;span class="o"&gt;(&lt;/span&gt;DEPRECATED!&lt;span class="o"&gt;)&lt;/span&gt;.

&lt;span class="c1"&gt;# Command (m for help): p&lt;/span&gt;

    Disk /dev/sdb: &lt;span class="m"&gt;17&lt;/span&gt;.2 GB, &lt;span class="m"&gt;17179869184&lt;/span&gt; bytes, &lt;span class="m"&gt;33554432&lt;/span&gt; sectors
    &lt;span class="m"&gt;255&lt;/span&gt; heads, &lt;span class="m"&gt;63&lt;/span&gt; sectors/track, &lt;span class="m"&gt;2088&lt;/span&gt; cylinders
    &lt;span class="nv"&gt;Units&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; cylinders of &lt;span class="m"&gt;16065&lt;/span&gt; * &lt;span class="nv"&gt;512&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;8225280&lt;/span&gt; bytes
    Sector size &lt;span class="o"&gt;(&lt;/span&gt;logical/physical&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
    I/O size &lt;span class="o"&gt;(&lt;/span&gt;minimum/optimal&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
    Disk label type: dos
    Disk identifier: 0x111936e6

    Device Boot      Start         End      Blocks   Id  System

&lt;span class="c1"&gt;# Command (m for help): n&lt;/span&gt;
    Partition type:
    p   primary &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; primary, &lt;span class="m"&gt;0&lt;/span&gt; extended, &lt;span class="m"&gt;4&lt;/span&gt; free&lt;span class="o"&gt;)&lt;/span&gt;
    e   extended
&lt;span class="c1"&gt;# Select (default p): p&lt;/span&gt;
    Partition number &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;-4, default &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;:
    First cylinder &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;-2088, default &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;:
    Using default value &lt;span class="m"&gt;1&lt;/span&gt;
    Last cylinder, +cylinders or +size&lt;span class="o"&gt;{&lt;/span&gt;K,M,G&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;-2088, default &lt;span class="m"&gt;2088&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;:
    Using default value &lt;span class="m"&gt;2088&lt;/span&gt;
    Partition &lt;span class="m"&gt;1&lt;/span&gt; of &lt;span class="nb"&gt;type&lt;/span&gt; Linux and of size &lt;span class="m"&gt;16&lt;/span&gt; GiB is &lt;span class="nb"&gt;set&lt;/span&gt;

&lt;span class="c1"&gt;# Command (m for help): w&lt;/span&gt;
    The partition table has been altered!

    Calling ioctl&lt;span class="o"&gt;()&lt;/span&gt; to re-read partition table.
    Syncing disks.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="creating-a-file-system"&gt;
&lt;h3&gt;1.4. &lt;a class="toc-backref" href="#id5"&gt;Creating a File System / 创建文件系统&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Let's see what happened:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# lsblk&lt;/span&gt;
    NAME                          MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
    sda                             &lt;span class="m"&gt;8&lt;/span&gt;:0    &lt;span class="m"&gt;0&lt;/span&gt;  100G  &lt;span class="m"&gt;0&lt;/span&gt; disk
    ├─sda1                          &lt;span class="m"&gt;8&lt;/span&gt;:1    &lt;span class="m"&gt;0&lt;/span&gt;  500M  &lt;span class="m"&gt;0&lt;/span&gt; part /boot
    └─sda2                          &lt;span class="m"&gt;8&lt;/span&gt;:2    &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;99&lt;/span&gt;.5G  &lt;span class="m"&gt;0&lt;/span&gt; part
        ├─centos-root               &lt;span class="m"&gt;253&lt;/span&gt;:0    &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;92&lt;/span&gt;.5G  &lt;span class="m"&gt;0&lt;/span&gt; lvm  /
        ├─centos-swap               &lt;span class="m"&gt;253&lt;/span&gt;:1    &lt;span class="m"&gt;0&lt;/span&gt;    2G  &lt;span class="m"&gt;0&lt;/span&gt; lvm  &lt;span class="o"&gt;[&lt;/span&gt;SWAP&lt;span class="o"&gt;]&lt;/span&gt;
        └─centos-home               &lt;span class="m"&gt;253&lt;/span&gt;:2    &lt;span class="m"&gt;0&lt;/span&gt;    5G  &lt;span class="m"&gt;0&lt;/span&gt; lvm  /home
    sdb                             &lt;span class="m"&gt;8&lt;/span&gt;:16   &lt;span class="m"&gt;0&lt;/span&gt;   16G  &lt;span class="m"&gt;0&lt;/span&gt; disk
    └─sdb1                          &lt;span class="m"&gt;8&lt;/span&gt;:17   &lt;span class="m"&gt;0&lt;/span&gt;   16G  &lt;span class="m"&gt;0&lt;/span&gt; part
    sr0                            &lt;span class="m"&gt;11&lt;/span&gt;:0    &lt;span class="m"&gt;1&lt;/span&gt; 1024M  &lt;span class="m"&gt;0&lt;/span&gt; rom
    loop0                           &lt;span class="m"&gt;7&lt;/span&gt;:0    &lt;span class="m"&gt;0&lt;/span&gt;  100G  &lt;span class="m"&gt;0&lt;/span&gt; loop
    └─docker-253:0-134516294-pool &lt;span class="m"&gt;253&lt;/span&gt;:3    &lt;span class="m"&gt;0&lt;/span&gt;  100G  &lt;span class="m"&gt;0&lt;/span&gt; dm
    loop1                           &lt;span class="m"&gt;7&lt;/span&gt;:1    &lt;span class="m"&gt;0&lt;/span&gt;    2G  &lt;span class="m"&gt;0&lt;/span&gt; loop
    └─docker-253:0-134516294-pool &lt;span class="m"&gt;253&lt;/span&gt;:3    &lt;span class="m"&gt;0&lt;/span&gt;  100G  &lt;span class="m"&gt;0&lt;/span&gt; dm
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And now, we should format the partition. / 现在我们格式化这个分区。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# /sbin/mkfs.ext4 /dev/sdb1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="mount-it-to-linux-virtual-system-lvs-linux"&gt;
&lt;h3&gt;1.5. &lt;a class="toc-backref" href="#id6"&gt;Mount it to Linux Virtual System (LVS) / 挂载到 Linux 虚拟分区&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Let's check LVS. / 查看当前的 Linux 虚拟分区。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# lvs&lt;/span&gt;
    WARNING: Not using lvmetad with older version.
    LV   VG     Attr       LSize  Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
    home centos -wi-ao----  &lt;span class="m"&gt;5&lt;/span&gt;.00g
    root centos -wi-ao---- &lt;span class="m"&gt;92&lt;/span&gt;.50g
    swap centos -wi-ao----  &lt;span class="m"&gt;2&lt;/span&gt;.00g
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Remember the value of column &lt;code&gt;VG&lt;/code&gt; ( &lt;code&gt;centos&lt;/code&gt; ). / 记住 &lt;code&gt;VG&lt;/code&gt; 的值 ( &lt;code&gt;centos&lt;/code&gt; )。&lt;/p&gt;
&lt;p&gt;Now we create a new physical volume. / 现在我们创建一块物理盘。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# pvcreate /dev/sdb1&lt;/span&gt;
    WARNING: Not using lvmetad with older version.
&lt;span class="c1"&gt;# WARNING: ext4 signature detected on /dev/sdb1 at offset 1080. Wipe it? [y/n]: y&lt;/span&gt;
    Wiping ext4 signature on /dev/sdb1.
    Physical volume &lt;span class="s2"&gt;&amp;quot;/dev/sdb1&amp;quot;&lt;/span&gt; successfully created.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And extend it to &lt;code&gt;VG&lt;/code&gt;  &lt;code&gt;centos&lt;/code&gt; . / 并且将它拓展到 &lt;code&gt;VG&lt;/code&gt;  &lt;code&gt;centos&lt;/code&gt; 。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# vgextend centos /dev/sdb1&lt;/span&gt;
    WARNING: Not using lvmetad with older version.
    Volume group &lt;span class="s2"&gt;&amp;quot;centos&amp;quot;&lt;/span&gt; successfully extended
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Check whether it has been extended correctly: / 检查是否正确的被扩展了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# vgdisplay&lt;/span&gt;
    WARNING: Not using lvmetad with older version.
    --- Volume group ---
    VG Name               centos
    System ID
    Format                lvm2
    Metadata Areas        &lt;span class="m"&gt;2&lt;/span&gt;
    Metadata Sequence No  &lt;span class="m"&gt;6&lt;/span&gt;
    VG Access             read/write
    VG Status             resizable
    MAX LV                &lt;span class="m"&gt;0&lt;/span&gt;
    Cur LV                &lt;span class="m"&gt;3&lt;/span&gt;
    Open LV               &lt;span class="m"&gt;3&lt;/span&gt;
    Max PV                &lt;span class="m"&gt;0&lt;/span&gt;
    Cur PV                &lt;span class="m"&gt;2&lt;/span&gt;
    Act PV                &lt;span class="m"&gt;2&lt;/span&gt;
    VG Size               &amp;lt;&lt;span class="m"&gt;115&lt;/span&gt;.50 GiB
    PE Size               &lt;span class="m"&gt;4&lt;/span&gt;.00 MiB
    Total PE              &lt;span class="m"&gt;29567&lt;/span&gt;
    Alloc PE / Size       &lt;span class="m"&gt;25472&lt;/span&gt; / &lt;span class="m"&gt;99&lt;/span&gt;.50 GiB
    Free  PE / Size       &lt;span class="m"&gt;4095&lt;/span&gt; / &amp;lt;&lt;span class="m"&gt;16&lt;/span&gt;.00 GiB
    VG UUID               RVnCi9-U8gt-DbgA-lu11-pdeO-6o0o-cEfQkC
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice that there is a Free PE with 8G. So let's extend it logically. / 可以看到存在没有被用到的 PE 16GiB ， 所以是成功的。&lt;/p&gt;
&lt;p&gt;Now let's add the free PE to root. / 现在我们可以将这些空余的 PE 指定给根目录。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# lvextend -L +15.9G /dev/centos/root /dev/sdb1&lt;/span&gt;
    WARNING: Not using lvmetad with older version.
    Rounding size to boundary between physical extents: &lt;span class="m"&gt;15&lt;/span&gt;.90 GiB.
    Size of logical volume centos/root changed from &lt;span class="m"&gt;92&lt;/span&gt;.50 GiB &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;23680&lt;/span&gt; extents&lt;span class="o"&gt;)&lt;/span&gt; to &lt;span class="m"&gt;108&lt;/span&gt;.40 GiB &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;27751&lt;/span&gt; extents&lt;span class="o"&gt;)&lt;/span&gt;.
    Logical volume centos/root successfully resized.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;OK. Only 15.9 Can be added. / 请注意留 0.1G 的空余。&lt;/p&gt;
&lt;p&gt;Now the last step: tell OS  that the file system has been extended. / 最后一步就是告诉系统，文件系统被扩展了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# xfs_growfs /dev/centos/root&lt;/span&gt;
    meta-data&lt;span class="o"&gt;=&lt;/span&gt;/dev/mapper/centos-root &lt;span class="nv"&gt;isize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;256&lt;/span&gt;    &lt;span class="nv"&gt;agcount&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;, &lt;span class="nv"&gt;agsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;6062080&lt;/span&gt; &lt;span class="nv"&gt;blks&lt;/span&gt;
             &lt;span class="o"&gt;=&lt;/span&gt;                        &lt;span class="nv"&gt;sectsz&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;512&lt;/span&gt;   &lt;span class="nv"&gt;attr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;, &lt;span class="nv"&gt;projid32bit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;1&lt;/span&gt;
             &lt;span class="o"&gt;=&lt;/span&gt;                        &lt;span class="nv"&gt;crc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;        &lt;span class="nv"&gt;finobt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;spinodes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
    &lt;span class="nv"&gt;data&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt;                        &lt;span class="nv"&gt;bsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;4096&lt;/span&gt;   &lt;span class="nv"&gt;blocks&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;24248320&lt;/span&gt;, &lt;span class="nv"&gt;imaxpct&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;25&lt;/span&gt;
             &lt;span class="o"&gt;=&lt;/span&gt;                        &lt;span class="nv"&gt;sunit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;      &lt;span class="nv"&gt;swidth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; blks
    &lt;span class="nv"&gt;naming&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt;version &lt;span class="m"&gt;2&lt;/span&gt;               &lt;span class="nv"&gt;bsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;4096&lt;/span&gt;   ascii-ci&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;ftype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
    &lt;span class="nv"&gt;log&lt;/span&gt;      &lt;span class="o"&gt;=&lt;/span&gt;internal                &lt;span class="nv"&gt;bsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;4096&lt;/span&gt;   &lt;span class="nv"&gt;blocks&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;11840&lt;/span&gt;, &lt;span class="nv"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;2&lt;/span&gt;
             &lt;span class="o"&gt;=&lt;/span&gt;                        &lt;span class="nv"&gt;sectsz&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;512&lt;/span&gt;   &lt;span class="nv"&gt;sunit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; blks, lazy-count&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
    &lt;span class="nv"&gt;realtime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;none                    &lt;span class="nv"&gt;extsz&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;4096&lt;/span&gt;   &lt;span class="nv"&gt;blocks&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;, &lt;span class="nv"&gt;rtextents&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
    data blocks changed from &lt;span class="m"&gt;24248320&lt;/span&gt; to &lt;span class="m"&gt;28417024&lt;/span&gt;

&lt;span class="c1"&gt;#### Default installed, if not , type this:  yum install -y xfsprogs.x86_64&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And have a check: / 现在我们看下系统信息：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# df -hl&lt;/span&gt;
    Filesystem               Size  Used Avail Use% Mounted on
    /dev/mapper/centos-root  109G   17G   92G  &lt;span class="m"&gt;16&lt;/span&gt;% /
    devtmpfs                 910M     &lt;span class="m"&gt;0&lt;/span&gt;  910M   &lt;span class="m"&gt;0&lt;/span&gt;% /dev
    tmpfs                    921M     &lt;span class="m"&gt;0&lt;/span&gt;  921M   &lt;span class="m"&gt;0&lt;/span&gt;% /dev/shm
    tmpfs                    921M   17M  904M   &lt;span class="m"&gt;2&lt;/span&gt;% /run
    tmpfs                    921M     &lt;span class="m"&gt;0&lt;/span&gt;  921M   &lt;span class="m"&gt;0&lt;/span&gt;% /sys/fs/cgroup
    /dev/mapper/centos-home  &lt;span class="m"&gt;5&lt;/span&gt;.0G   33M  &lt;span class="m"&gt;5&lt;/span&gt;.0G   &lt;span class="m"&gt;1&lt;/span&gt;% /home
    /dev/sda1                497M  125M  373M  &lt;span class="m"&gt;26&lt;/span&gt;% /boot
    tmpfs                    185M  &lt;span class="m"&gt;4&lt;/span&gt;.0K  185M   &lt;span class="m"&gt;1&lt;/span&gt;% /run/user/0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It succeeds! / 完成了！&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="reference"&gt;
&lt;h3&gt;1.6. &lt;a class="toc-backref" href="#id7"&gt;Reference&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;CentOS6调整LVM SWAP分区大小 &lt;a class="reference external" href="https://www.haiyun.me/archives/centos6-change-lvm-swap.html"&gt;https://www.haiyun.me/archives/centos6-change-lvm-swap.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;resize2fs: Bad magic number in super-block while trying to open  &lt;a class="reference external" href="https://stackoverflow.com/questions/26305376/resize2fs-bad-magic-number-in-super-block-while-trying-to-open"&gt;https://stackoverflow.com/questions/26305376/resize2fs-bad-magic-number-in-super-block-while-trying-to-open&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;centos7 lvm管理 把/home空间转移给/ &lt;a class="reference external" href="https://www.2cto.com/os/201708/668992.html"&gt;https://www.2cto.com/os/201708/668992.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;实战：CentOS不重启，在线添加硬盘  &lt;a class="reference external" href="http://blog.51cto.com/skypegnu1/1429375"&gt;http://blog.51cto.com/skypegnu1/1429375&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.csdn.net/rainbow702/article/details/50761380"&gt;http://blog.csdn.net/rainbow702/article/details/50761380&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="Linux"></category><category term="CentOS7"></category><category term="LVM"></category><category term="Disk"></category></entry><entry><title>Node Task Queue Research / Node 任务队列学习</title><link href="/Node_Task_Queue_Research.html" rel="alternate"></link><published>2018-11-01T00:00:00+08:00</published><updated>2018-11-01T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:None,2018-11-01:/Node_Task_Queue_Research.html</id><summary type="html">&lt;p class="first last"&gt;Node Task Queue Research&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;span id="node-task-rst"&gt;&lt;/span&gt;&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#queue-based-on-node-node" id="id1"&gt;Queue based on Node / 基于 Node 的队列&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#comparison" id="id2"&gt;Comparison / 对比&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#my-opinion" id="id3"&gt;My opinion / 个人观点&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#other-queues" id="id4"&gt;Other Queues / 其他可选的队列&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#rabbitmq" id="id5"&gt;RabbitMQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#saas-aws-simple-queue-service-saas-aws" id="id6"&gt;Saas -  AWS Simple Queue Service / Saas AWS 简单队列服务&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#saas-azure-service-bus" id="id7"&gt;Saas - Azure Service Bus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#queues-i-have-encountered" id="id8"&gt;Queues I have encountered  / 我遇到的队列&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="queue-based-on-node-node"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id1"&gt;Queue based on Node / 基于 Node 的队列&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="comparison"&gt;
&lt;h3&gt;1.1. &lt;a class="toc-backref" href="#id2"&gt;Comparison / 对比&lt;/a&gt;&lt;/h3&gt;
&lt;table border="1" class="colwidths-given docutils"&gt;
&lt;colgroup&gt;
&lt;col width="28%" /&gt;
&lt;col width="18%" /&gt;
&lt;col width="18%" /&gt;
&lt;col width="18%" /&gt;
&lt;col width="18%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Feature  / 功能&lt;/th&gt;
&lt;th class="head"&gt;Bull ☆3885&lt;/th&gt;
&lt;th class="head"&gt;Kue  ☆8007&lt;/th&gt;
&lt;th class="head"&gt;Bee  ☆1141&lt;/th&gt;
&lt;th class="head"&gt;Agenda ☆4637&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Backend / 后台支持&lt;/td&gt;
&lt;td&gt;redis&lt;/td&gt;
&lt;td&gt;redis&lt;/td&gt;
&lt;td&gt;redis&lt;/td&gt;
&lt;td&gt;mongo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Priorities / 优先级支持&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Concurrency / 并行&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Delayed jobs / 延迟任务&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Global events / 全局事件&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Rate Limiter / 速度控制&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Pause/Resume / 停止/恢复&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Sandboxed worker / 沙箱工作节点&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Repeatable jobs / 重复任务&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Atomic ops / 原子性操作&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Persistence / 持久性&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;UI&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;REST API&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Optimized for / 优化&lt;/td&gt;
&lt;td&gt;Jobs / Messages&lt;/td&gt;
&lt;td&gt;Jobs&lt;/td&gt;
&lt;td&gt;Messages&lt;/td&gt;
&lt;td&gt;Jobs&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="my-opinion"&gt;
&lt;h3&gt;1.2. &lt;a class="toc-backref" href="#id3"&gt;My opinion / 个人观点&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;After I've reviewed their documents, I listed my own opinion.&lt;/p&gt;
&lt;p&gt;在查看过介绍 和 使用文档后，有一些自己的心得:&lt;/p&gt;
&lt;table border="1" class="colwidths-given docutils"&gt;
&lt;colgroup&gt;
&lt;col width="20%" /&gt;
&lt;col width="80%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Products  / 产品&lt;/th&gt;
&lt;th class="head"&gt;Descriptions / 描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Bull&lt;/td&gt;
&lt;td&gt;&lt;div class="first last line-block"&gt;
&lt;div class="line"&gt;Job and Queue:&lt;/div&gt;
&lt;div class="line"&gt;One queue can contain one kind of job.&lt;/div&gt;
&lt;div class="line"&gt;每一个队列包含一种任务&lt;/div&gt;
&lt;div class="line"&gt;Every queue has its own Redis connection except for more configuration.&lt;/div&gt;
&lt;div class="line"&gt;每个队列需要一个Redis连接， 需要额外的配置才可以共享&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;Advantages:  / 好处&lt;/div&gt;
&lt;div class="line"&gt;Quicker and full functional.&lt;/div&gt;
&lt;div class="line"&gt;队列任务消除 相对较快，功能全面&lt;/div&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Kue&lt;/td&gt;
&lt;td&gt;&lt;div class="first last line-block"&gt;
&lt;div class="line"&gt;Job and Queue:&lt;/div&gt;
&lt;div class="line"&gt;One queue can contain multiple kinds of jobs.&lt;/div&gt;
&lt;div class="line"&gt;一个队列 包含多种类型的任务&lt;/div&gt;
&lt;div class="line"&gt;So one queue is enough and only 1 redis connection is needed.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;Speed: But the speed of time-consuming is not that fast from the benchmark test from Bee.&lt;/div&gt;
&lt;div class="line"&gt;队列任务消除缓慢， 而且维护较少&lt;/div&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Bee&lt;/td&gt;
&lt;td&gt;&lt;div class="first last line-block"&gt;
&lt;div class="line"&gt;Job and Queue:&lt;/div&gt;
&lt;div class="line"&gt;One queue can contain multiple kinds of jobs.&lt;/div&gt;
&lt;div class="line"&gt;每一个队列包含一种任务&lt;/div&gt;
&lt;div class="line"&gt;Every queue has its own Redis connection.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;Quicker and lighter. / 更快 也更轻量级&lt;/div&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Agenda&lt;/td&gt;
&lt;td&gt;&lt;div class="first last line-block"&gt;
&lt;div class="line"&gt;Advantages:&lt;/div&gt;
&lt;div class="line"&gt;Designed for Scheduler and Repeat Jobs.&lt;/div&gt;
&lt;div class="line"&gt;更偏向于 定期/周期任务&lt;/div&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Recommendation: &lt;code&gt;Bull&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;推荐使用 &lt;code&gt;Bull&lt;/code&gt; .&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="other-queues"&gt;
&lt;h2&gt;2. &lt;a class="toc-backref" href="#id4"&gt;Other Queues / 其他可选的队列&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;However, queues based on Node can satisfy us if the volume is OK.&lt;/p&gt;
&lt;p&gt;But if the number soars, we should seek help for other real messages queues.&lt;/p&gt;
&lt;p&gt;如果我们的任务量比较小，整个架构也不复杂的话，基于 Node 的队列基本可以满足要求。&lt;/p&gt;
&lt;p&gt;但是如果任务量大，构架复杂， 我们需要依赖于一些专业的标准化的队列服务。&lt;/p&gt;
&lt;div class="section" id="rabbitmq"&gt;
&lt;h3&gt;2.1. &lt;a class="toc-backref" href="#id5"&gt;RabbitMQ&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Implementation of AMQP (Advanced Message Queuing Protocol),&lt;/p&gt;
&lt;p&gt;an open standard application layer protocol for message-oriented middleware.&lt;/p&gt;
&lt;p&gt;是 AMQP 的一种实现。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Standard Protocol / 标准协议&lt;/li&gt;
&lt;li&gt;No Language Limitation / 不是基于某种语言&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="saas-aws-simple-queue-service-saas-aws"&gt;
&lt;h3&gt;2.2. &lt;a class="toc-backref" href="#id6"&gt;Saas -  AWS Simple Queue Service / Saas AWS 简单队列服务&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Reference: &lt;a class="reference external" href="https://aws.amazon.com/sqs/"&gt;https://aws.amazon.com/sqs/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The fee of first 1 million messages per mon is free.
每个月首个一百万条消息是免费的...&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Standard Queues / 标准队列&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Unlimited Throughput&lt;/li&gt;
&lt;li&gt;At-Least-Once Delivery&lt;/li&gt;
&lt;li&gt;Best-Effort Ordering&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;FIFO Queues / 先进先出队列&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;High Throughput&lt;/li&gt;
&lt;li&gt;Exactly-Once Processing&lt;/li&gt;
&lt;li&gt;First-In-First-Out Delivery&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="saas-azure-service-bus"&gt;
&lt;h3&gt;2.3. &lt;a class="toc-backref" href="#id7"&gt;Saas - Azure Service Bus&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Reference: &lt;a class="reference external" href="https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-queues-topics-subscriptions"&gt;https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-queues-topics-subscriptions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The fee of first 1000 brokered connections (744,000 messages) /per mon is free . (&lt;a class="reference external" href="https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-pricing-billing"&gt;https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-pricing-billing&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;每个月首个 74 万消息是免费的。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Queues: One to one&lt;/li&gt;
&lt;li&gt;Topics and subscriptions: One to many&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="queues-i-have-encountered"&gt;
&lt;h2&gt;3. &lt;a class="toc-backref" href="#id8"&gt;Queues I have encountered  / 我遇到的队列&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In TM, I used to be a member of CAS, we use two kind types of queues:&lt;/p&gt;
&lt;p&gt;在 TM CAS 团队(Saas 产品), 我们使用了两种类型的队列:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Azure Message Queue: Quite expensive&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;Azure 的Service Bus，Hook Email 之后会将Email事件存放在Queue 中，顺序处理， 也可以作为监控指标&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Queue designed by ourselves: / 自行设计的 Queue&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first"&gt;MS SQL backed, and every task are record. And micro services will get and handle them periodically.&lt;/p&gt;
&lt;p class="last"&gt;基于 MS SQL，周期性任务会存在在 MSSQL 中 每一步会去更新状态， 直到最终完成。&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Celery + RabbitMQ + Python&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;Python Web Service 有一些长期的异步任务需要实现，使用的是 Celery (&lt;a class="reference external" href="http://www.celeryproject.org/"&gt;http://www.celeryproject.org/&lt;/a&gt;) , 基于 RabbitMQ。&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Node"></category></entry><entry><title>PDF To Word / PDF转Word格式</title><link href="/pdf_to_word.html" rel="alternate"></link><published>2018-09-13T00:00:00+08:00</published><updated>2018-09-13T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:None,2018-09-13:/pdf_to_word.html</id><summary type="html">&lt;p class="first last"&gt;PDF To Word&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;span id="pdf-to-word-rst"&gt;&lt;/span&gt;&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#intro" id="id1"&gt;Intro / 简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#success-libreoffice" id="id2"&gt;Success - LibreOffice&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#failure-attempts" id="id3"&gt;Failure Attempts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#failure-abiword" id="id4"&gt;Failure - abiword&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#failure-pandoc" id="id5"&gt;Failure - pandoc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="intro"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id1"&gt;Intro / 简介&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here is the situation. I met some clients and they need reports. A quite normal feature request. I generated report using PhantomJS and sent them PDF reports.&lt;/p&gt;
&lt;p&gt;一些客户需要产生报告，这是很正常的功能，我们可以通过 PhantomJS 产生PDF的报告。&lt;/p&gt;
&lt;p&gt;But they were not satisfied because they need other editable formats like MS Word so that they can modify the report and use it.&lt;/p&gt;
&lt;p&gt;但是客户并不满足与PDF的报告，他们还需要像Word这样的格式。&lt;/p&gt;
&lt;p&gt;Word Format is not a standard format actually. So I faced lots difficulties. And since I already have HTML and PDF version, I don't want to change code up and down, I wish them controllable. So I searched for solutions how I can convert html or PDF to doc.&lt;/p&gt;
&lt;p&gt;Word 并不是标准的格式，更不是面向代码的。这种情况下，既然有PDF 文档了，我更希望以最小的改动实现这个功能。&lt;/p&gt;
&lt;p&gt;PhantomJS cannot do this. There is little solutions. I tried following ones and finally chose the solution using LibreOffice because the basic format can be kept.&lt;/p&gt;
&lt;p&gt;PhantomJS 不能够完成这项任务。 解决方案很少。最终我是使用了LibreOffice 进行转换， 因为基本的格式都能够被保存下来。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="success-libreoffice"&gt;
&lt;h2&gt;2. &lt;a class="toc-backref" href="#id2"&gt;Success - LibreOffice&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Documents that generated by LibreOffice keeps most formats, and it looks almost like the PDF content. That's great!&lt;/p&gt;
&lt;p&gt;通过LibreOffice产生的文档基本保留了全部的格式，并且与PDF 有相同的渲染。非常棒。&lt;/p&gt;
&lt;p&gt;But I still have some concerns. For example, it costs disk and makes installation more complex. But after compared with other solutions listed behind, I think it is totally acceptable.&lt;/p&gt;
&lt;p&gt;但这里仍然会有一些疑虑，比方说，LibreOffice会使得安装过程更加的复杂，需要额外的磁盘等等。
但是比较完搜索到的方案，这些还是可以接受的。&lt;/p&gt;
&lt;p&gt;While installing LibreOffice in Ubuntu and CentOS is very easy, just remember to install &lt;code&gt;gtk2.0&lt;/code&gt; and so on because they are prerequisites.&lt;/p&gt;
&lt;p&gt;在 Ubuntu 和 CentOS上安装 LibreOffice是非常方便的，但是一定要记得先安装  &lt;code&gt;gtk2.0&lt;/code&gt; ， 因为这是前提。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-get update
apt-get install gtk2.0
apt-get install -y software-properties-common
&lt;span class="nb"&gt;cd&lt;/span&gt; /root/LibreOffice_5.3.6.1_Linux_x86-64_deb/
dpkg -i *.deb
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And use this &lt;code&gt;/opt/libreoffice5.3/program/soffice&lt;/code&gt; in command line.&lt;/p&gt;
&lt;p&gt;命令行中使用 &lt;code&gt;/opt/libreoffice5.3/program/soffice&lt;/code&gt;  调用。&lt;/p&gt;
&lt;p&gt;Convert &lt;code&gt;soffice --infilter=&amp;quot;writer_pdf_import&amp;quot; --convert-to doc file.pdf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;转换使用的命令： &lt;code&gt;soffice --infilter=&amp;quot;writer_pdf_import&amp;quot; --convert-to doc file.pdf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;See what happened:
转换完之后，我们看下PDF 和 Word的对比。&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/tools/pdf_to_word_01.png" /&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;But I met obstacles in Docker because docker is not equipped with many dependencies.
This is my Dockerfile: (I downloaded the 5.3.6 version and copied them to docker.)&lt;/p&gt;
&lt;p&gt;因为产品环境实在docker中运行的，安装还是有一些问题。
下面Dockerfile 文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;FROM node:6.14.0
ADD . Libre
RUN apt-get -y update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get install -y software-properties-common &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get -y install gtk2.0  &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; /Libre/LibreOffice_5.3.6.1_Linux_x86-64_deb/ &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; dpkg -i *.deb
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;when use this docker image and call LibreOffice, there are tips as docker environment has no display.&lt;/p&gt;
&lt;p&gt;在docker中使用 LibreOffice 时，会调用失败，如果不做特殊的设定的话。 因为docker环境默认是没有显示的。&lt;/p&gt;
&lt;p&gt;Here is how to solve it:&lt;/p&gt;
&lt;p&gt;可以 通过这样的方式解决：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;xxx:
  image: xxx
  container_name: xxx
  volumes:
    - /tmp/.X11-unix:/tmp/.X11-unix
  environment:
    - &lt;span class="nv"&gt;DISPLAY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;unix:0
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="failure-attempts"&gt;
&lt;h3&gt;2.1. &lt;a class="toc-backref" href="#id3"&gt;Failure Attempts&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;From LibreOffice official site (&lt;a class="reference external" href="https://www.libreoffice.org/get-help/system-requirements/"&gt;https://www.libreoffice.org/get-help/system-requirements/&lt;/a&gt;), there are some prerequisites:&lt;/p&gt;
&lt;p&gt;在 LibreOffice的官网中，提到了一些前提， 要注意选择性的安装，否则会导致安装失败。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;glibc2 version 2.5 or higher  (check)(ldd --version)&lt;/li&gt;
&lt;li&gt;apt-get install gtk2.0 (check)(dpkg -l libgtk2.0-0 libgtk-3-0)&lt;/li&gt;
&lt;li&gt;Gnome 2.16 or higher&lt;/li&gt;
&lt;li&gt;Instal from ppa&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;RUN awk &lt;span class="s1"&gt;&amp;#39;$1 ~ &amp;quot;^deb&amp;quot; { $3 = $3 &amp;quot;-backports&amp;quot;; print; exit }&amp;#39;&lt;/span&gt; /etc/apt/sources.list &amp;gt; /etc/apt/sources.list.d/backports.list
apt-get update
apt-get install -y software-properties-common
add-apt-repository -y ppa:libreoffice/ppa
apt-get install -y &lt;span class="nv"&gt;libreoffice&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;.3.6.1
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Install GNOME&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-get install task-gnome-desktop --no-install-recommends
sudo apt-get install ubuntu-gnome-desktop --no-install-recommends
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="failure-abiword"&gt;
&lt;h2&gt;3. &lt;a class="toc-backref" href="#id4"&gt;Failure - abiword&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-get -y update
apt-get -y install abiword
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The output document keeps nearly no cascading styles. So give up this one.&lt;/p&gt;
&lt;p&gt;abiword 导出的 Word 文件，基本是没有任何的 样式的。&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;Reference:&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://askubuntu.com/questions/37548/pdf-to-word-conversion-software"&gt;https://askubuntu.com/questions/37548/pdf-to-word-conversion-software&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="failure-pandoc"&gt;
&lt;h2&gt;4. &lt;a class="toc-backref" href="#id5"&gt;Failure - pandoc&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;code&gt;yum install pandoc&lt;/code&gt;&lt;/blockquote&gt;
&lt;p&gt;The output document only include basic text. Still give it up.&lt;/p&gt;
&lt;p&gt;pandoc 导出的文件也是没有格式的。&lt;/p&gt;
&lt;/div&gt;
</content><category term="Linux"></category><category term="Docker"></category><category term="LibreOffice"></category><category term="PDF"></category></entry><entry><title>Build RPM / 构建 RPM</title><link href="/Build_RPM.html" rel="alternate"></link><published>2018-07-16T00:00:00+08:00</published><updated>2018-07-16T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:None,2018-07-16:/Build_RPM.html</id><summary type="html">&lt;p class="first last"&gt;Build RPM&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;span id="build-rpm-rst"&gt;&lt;/span&gt;&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#why-i-need-rpm-packages-rpm" id="id1"&gt;Why I need RPM packages? / 为什么需要RPM包&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#how-to-set-env" id="id2"&gt;How to set Env / 搭建环境&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#preparations" id="id3"&gt;Preparations / 准备&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#needed-dev-and-build-environments" id="id4"&gt;Needed dev and build environments / 需要的开发环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#make-essential-directories" id="id5"&gt;Make Essential Directories / 创建必要的目录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#prepare-a-sample-file" id="id6"&gt;Prepare a sample file / 准备一个示例文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#define-a-spec-file-to-list-steps-spec" id="id7"&gt;Define a SPEC file to list steps / 定义SPEC文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#when-we-want-to-ignore-some-steps" id="id8"&gt;When we want to ignore some steps / 如果我们想忽略一些步骤的话&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#continue-with-our-sample" id="id9"&gt;Continue with our sample / 继续&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#concerns" id="id10"&gt;Concerns / 一些考量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#other-tips" id="id11"&gt;Other tips / 其他的技巧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#reference" id="id12"&gt;Reference:&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="why-i-need-rpm-packages-rpm"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id1"&gt;Why I need RPM packages? / 为什么需要RPM包&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here is the thing, I have to delivery my softwares to my customers. I developed it , deployed it and configured it. Everything works just perfect fine. But how should my customers use them, I cannot just gave it to them all the jar, js and shell packages. They need a packed executable binary and it would be more welcome if little configuration is needed.&lt;/p&gt;
&lt;p&gt;我需要向客户提交最终的安装软件。所有的事情在本地都是OK的，开发，部署 以及 配置。但是，客户们应该怎么使用他们？ 我不能将所有的开发编译文件直接发给客户，复杂的配置 会让客户失去耐心。他们需要的只是一个安装包，如果开箱即用 或者 根本不用配置的话，那么将会非常棒。&lt;/p&gt;
&lt;p&gt;Based on the situation, it is necessarily to give customers what they want, a RPM package.
However, it is either easy or difficult, but I have to say I spend a whole day in successfully building one.&lt;/p&gt;
&lt;p&gt;在这种情况下，最好是给出一个rpm安装包。 这项工作其实不简单 也 不困难，但是我实实在在用了一整天。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="how-to-set-env"&gt;
&lt;h2&gt;2. &lt;a class="toc-backref" href="#id2"&gt;How to set Env / 搭建环境&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="preparations"&gt;
&lt;h3&gt;2.1. &lt;a class="toc-backref" href="#id3"&gt;Preparations / 准备&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;CentOS 7 1511&lt;/li&gt;
&lt;li&gt;Minimal installation  / 最小化安装&lt;/li&gt;
&lt;li&gt;Network configured / 配置好网络&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="needed-dev-and-build-environments"&gt;
&lt;h3&gt;2.2. &lt;a class="toc-backref" href="#id4"&gt;Needed dev and build environments / 需要的开发环境&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;code&gt;sudo yum install rpmdevtools rpmlint -y&lt;/code&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="make-essential-directories"&gt;
&lt;h3&gt;2.3. &lt;a class="toc-backref" href="#id5"&gt;Make Essential Directories / 创建必要的目录&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Now go to home directory and make essential sub directories.&lt;/p&gt;
&lt;p&gt;去往 用户目录 并且创建他们。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~
rpmdev-setuptree
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's see what happened. ( &lt;code&gt;tree&lt;/code&gt; ) / 看看发生了什么。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rpmbuild/
├── BUILD     : All files will be put here during rpm building
├── RPMS      : Built packages will finally be in RPMS and SRPMS
├── SOURCES   : Source files you want to include or use in RPM
├── SPECS     : Instruction of how to build RPM
└── SRPMS     : Built packages will finally be in RPMS and SRPMS
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="prepare-a-sample-file"&gt;
&lt;h3&gt;2.4. &lt;a class="toc-backref" href="#id6"&gt;Prepare a sample file / 准备一个示例文件&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To avoid any complexities, we only build a rpm package including a bash command.&lt;/p&gt;
&lt;p&gt;为了避免复杂，我们开发一个只包含一个bash命令的rpm包。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir briansample-1.0
&lt;span class="nb"&gt;cd&lt;/span&gt; briansample-1.0/
vi briansample.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the shell file, the content is &lt;code&gt;echo &amp;quot;Brian Sample&amp;quot;&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;shell文件的内容是： &lt;code&gt;echo &amp;quot;Brian Sample&amp;quot;&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;And we compress them into a tar file. &lt;code&gt;tar -cf briansample.tar briansample-1.0/&lt;/code&gt; .
Remember the folder name &lt;code&gt;briansample-1.0&lt;/code&gt; (name-version) because it will usually be used in somewhere else.&lt;/p&gt;
&lt;p&gt;将这个文件放入tar包。
记住，这个文件夹的名字是 &lt;code&gt;briansample-1.0&lt;/code&gt; ， 也就是 是 名字 + 版本号。 这会在其他地方用到。 而且名字版本号的匹配至关重要。&lt;/p&gt;
&lt;p&gt;Copy the tar file to &lt;code&gt;SOURCE&lt;/code&gt; directory.
将这个源文件 tar 包 拷贝到 &lt;code&gt;SOURCE&lt;/code&gt; 目录下。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="define-a-spec-file-to-list-steps-spec"&gt;
&lt;h3&gt;2.5. &lt;a class="toc-backref" href="#id7"&gt;Define a SPEC file to list steps / 定义SPEC文件&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; rpmbuild/SPECS/
rpmdev-newspec
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This command will create a SPEC file under the directory. ( &lt;code&gt;tree&lt;/code&gt; )&lt;/p&gt;
&lt;p&gt;上一条命令将会创建一个 SPEC 规范文件。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;.
└── newpackage.spec
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See what it contains ( &lt;code&gt;cat newpackage.spec&lt;/code&gt; ) :&lt;/p&gt;
&lt;p&gt;看看里面的内容。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Name:
Version:
Release:        &lt;span class="m"&gt;1&lt;/span&gt;%&lt;span class="o"&gt;{&lt;/span&gt;?dist&lt;span class="o"&gt;}&lt;/span&gt;
Summary:

License:
URL:
Source0:

BuildRequires:
Requires:

%description


%prep
%setup -q


%build
%configure
make %&lt;span class="o"&gt;{&lt;/span&gt;?_smp_mflags&lt;span class="o"&gt;}&lt;/span&gt;


%install
rm -rf &lt;span class="nv"&gt;$RPM_BUILD_ROOT&lt;/span&gt;
%make_install


%files
%doc



%changelog
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is very clear that it consists of two many parts:&lt;/p&gt;
&lt;p&gt;非常直观，其实包括两个部分：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Basic descriptions / 基本描述&lt;/li&gt;
&lt;li&gt;RPM steps / RPM 编译步骤&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Definitions / 一些定义:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;code&gt;%description&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A full description of the software packaged in the RPM. This description can span multiple lines and can be broken into paragraphs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;code&gt;%prep&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Command or series of commands to prepare the software to be built, for example, unpacking the archive in Source0. This directive can contain a shell script.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;code&gt;%build&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Command or series of commands for actually building the software into machine code (for compiled languages) or byte code (for some interpreted languages).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;code&gt;%install&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Command or series of commands for copying the desired build artifacts from the %builddir (where the build happens) to the %buildroot directory (which contains the directory structure with the files to be packaged). This usually means copying files from ~/rpmbuild/BUILD to ~/rpmbuild/BUILDROOT and creating the necessary directories in ~/rpmbuild/BUILDROOT. This is only run when creating a package, not when the end-user installs the package. See Working with SPEC files for details.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;code&gt;%check&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Command or series of commands to test the software. This normally includes things such as unit tests.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;code&gt;%files&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The list of files that will be installed in the end user’s system.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;code&gt;%changelog&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A record of changes that have happened to the package between different Version or Release builds.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="when-we-want-to-ignore-some-steps"&gt;
&lt;h3&gt;2.6. &lt;a class="toc-backref" href="#id8"&gt;When we want to ignore some steps / 如果我们想忽略一些步骤的话&lt;/a&gt;&lt;/h3&gt;
&lt;div class="admonition warning"&gt;
&lt;p class="first admonition-title"&gt;Warning&lt;/p&gt;
&lt;p&gt;When I wanted to ignore some steps, I like to comment out them. For example, NodeJS and Python programs do not need build step.&lt;/p&gt;
&lt;p&gt;当我想要忽略这些步骤的时候，本能的反映是 注释掉他们。 比方说 NodeJS 或者Python 程序，就不需要 build 步骤。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;%build
with
&lt;span class="c1"&gt;#%build&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But !!!!!!! This doesn't actually comment it out. and it will still run.
So deleting &lt;code&gt;%build&lt;/code&gt; and &lt;code&gt;%configure&lt;/code&gt; makes things work as expected.&lt;/p&gt;
&lt;p class="last"&gt;但是！！！ 这并不会阻止这些程序继续运行。需要去删除这些步骤 才能工作正常。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="continue-with-our-sample"&gt;
&lt;h3&gt;2.7. &lt;a class="toc-backref" href="#id9"&gt;Continue with our sample / 继续&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Copy our project tar files to &lt;code&gt;rpmbuild/SOURCES/&lt;/code&gt; by code:&lt;/p&gt;
&lt;p&gt;将整个工程拷贝至 &lt;code&gt;rpmbuild/SOURCES/&lt;/code&gt; 。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~
cp briansample.tar rpmbuild/SOURCES/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now edit our SPEC file: / 现在我们来更改SPEC 文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Name:           briansample  &lt;span class="c1"&gt;#####watch the name  注意名称&lt;/span&gt;
Version:        &lt;span class="m"&gt;1&lt;/span&gt;.0          &lt;span class="c1"&gt;#####watch the version 注意版本&lt;/span&gt;
Release:        &lt;span class="m"&gt;1&lt;/span&gt;%&lt;span class="o"&gt;{&lt;/span&gt;?dist&lt;span class="o"&gt;}&lt;/span&gt;
Summary:        sample

License:        GPL
Source0:        briansample.tar


%description

%prep
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;BrianSample Prepare&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# this Step will unpack the tar file briansample.tar&lt;/span&gt;
%setup -q

%install
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;BrianSample Install&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# this Step will enter ./briansample-1.0 , just like the name and Version&lt;/span&gt;
&lt;span class="c1"&gt;# And then you can execute commands here&lt;/span&gt;
&lt;span class="c1"&gt;# So we copy file (ths bash file) to virtual directory %{buildroot}/usr/briansample&lt;/span&gt;
mkdir -p %&lt;span class="o"&gt;{&lt;/span&gt;buildroot&lt;span class="o"&gt;}&lt;/span&gt;/usr/briansample
&lt;span class="nb"&gt;pwd&lt;/span&gt;
cp -rf ./* %&lt;span class="o"&gt;{&lt;/span&gt;buildroot&lt;span class="o"&gt;}&lt;/span&gt;/usr/briansample

%post
&lt;span class="c1"&gt;# execute when installed in the real machine&lt;/span&gt;

%files
%doc
&lt;span class="c1"&gt;# files will in teh virtual directory will be copied here in teh real machine&lt;/span&gt;
/usr/briansample/*

%changelog
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And we can now build our RPM package. / 现在我们可以去编译 RPM 包了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;code&gt;rpmbuild -ba newpackage.spec&lt;/code&gt;&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rpmbuild -ba newpackage.spec
    Executing&lt;span class="o"&gt;(&lt;/span&gt;%prep&lt;span class="o"&gt;)&lt;/span&gt;: /bin/sh -e /var/tmp/rpm-tmp.h7l5eo
    + &lt;span class="nb"&gt;umask&lt;/span&gt; &lt;span class="m"&gt;022&lt;/span&gt;
    + &lt;span class="nb"&gt;cd&lt;/span&gt; /home/admin/rpmbuild/BUILD
    + &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;BrianSample Prepare&amp;#39;&lt;/span&gt;
    BrianSample Prepare
    + &lt;span class="nb"&gt;cd&lt;/span&gt; /home/admin/rpmbuild/BUILD
    + rm -rf briansample-1.0
    + /usr/bin/tar -xf /home/admin/rpmbuild/SOURCES/briansample.tar
    + &lt;span class="nb"&gt;cd&lt;/span&gt; briansample-1.0
    + /usr/bin/chmod -Rf a+rX,u+w,g-w,o-w .
    + &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
    Executing&lt;span class="o"&gt;(&lt;/span&gt;%install&lt;span class="o"&gt;)&lt;/span&gt;: /bin/sh -e /var/tmp/rpm-tmp.HEqZg2
    + &lt;span class="nb"&gt;umask&lt;/span&gt; &lt;span class="m"&gt;022&lt;/span&gt;
    + &lt;span class="nb"&gt;cd&lt;/span&gt; /home/admin/rpmbuild/BUILD
    + &lt;span class="s1"&gt;&amp;#39;[&amp;#39;&lt;/span&gt; /home/admin/rpmbuild/BUILDROOT/briansample-1.0-1.el7.centos.x86_64 &lt;span class="s1"&gt;&amp;#39;!=&amp;#39;&lt;/span&gt; / &lt;span class="s1"&gt;&amp;#39;]&amp;#39;&lt;/span&gt;
    + rm -rf /home/admin/rpmbuild/BUILDROOT/briansample-1.0-1.el7.centos.x86_64
    ++ dirname /home/admin/rpmbuild/BUILDROOT/briansample-1.0-1.el7.centos.x86_64
    + mkdir -p /home/admin/rpmbuild/BUILDROOT
    + mkdir /home/admin/rpmbuild/BUILDROOT/briansample-1.0-1.el7.centos.x86_64
    + &lt;span class="nb"&gt;cd&lt;/span&gt; briansample-1.0
    + &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;BrianSample Install&amp;#39;&lt;/span&gt;
    BrianSample Install
    + mkdir -p /home/admin/rpmbuild/BUILDROOT/briansample-1.0-1.el7.centos.x86_64/usr/briansample
    + &lt;span class="nb"&gt;pwd&lt;/span&gt;
    /home/admin/rpmbuild/BUILD/briansample-1.0
    + cp -rf ./briansample.sh ./briansample.tar /home/admin/rpmbuild/BUILDROOT/briansample-1.0-1.el7.centos.x86_64/usr/briansample
    + &lt;span class="s1"&gt;&amp;#39;[&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%{buildarch}&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; noarch &lt;span class="s1"&gt;&amp;#39;]&amp;#39;&lt;/span&gt;
    + &lt;span class="nv"&gt;QA_CHECK_RPATHS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
    + &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;QA_CHECK_RPATHS&lt;/span&gt;&lt;span class="k"&gt;:-&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; in
    + /usr/lib/rpm/check-rpaths
    + /usr/lib/rpm/check-buildroot
    + /usr/lib/rpm/redhat/brp-compress
    + /usr/lib/rpm/redhat/brp-strip /usr/bin/strip
    + /usr/lib/rpm/redhat/brp-strip-comment-note /usr/bin/strip /usr/bin/objdump
    + /usr/lib/rpm/redhat/brp-strip-static-archive /usr/bin/strip
    + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python &lt;span class="m"&gt;1&lt;/span&gt;
    + /usr/lib/rpm/redhat/brp-python-hardlink
    + /usr/lib/rpm/redhat/brp-java-repack-jars
    Processing files: briansample-1.0-1.el7.centos.x86_64
    Provides: &lt;span class="nv"&gt;briansample&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;.0-1.el7.centos briansample&lt;span class="o"&gt;(&lt;/span&gt;x86-64&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;.0-1.el7.centos
    Requires&lt;span class="o"&gt;(&lt;/span&gt;interp&lt;span class="o"&gt;)&lt;/span&gt;: /bin/sh
    Requires&lt;span class="o"&gt;(&lt;/span&gt;rpmlib&lt;span class="o"&gt;)&lt;/span&gt;: rpmlib&lt;span class="o"&gt;(&lt;/span&gt;CompressedFileNames&lt;span class="o"&gt;)&lt;/span&gt; &amp;lt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;.0.4-1 rpmlib&lt;span class="o"&gt;(&lt;/span&gt;FileDigests&lt;span class="o"&gt;)&lt;/span&gt; &amp;lt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;.6.0-1 rpmlib&lt;span class="o"&gt;(&lt;/span&gt;PayloadFilesHavePrefix&lt;span class="o"&gt;)&lt;/span&gt; &amp;lt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;.0-1
    Requires&lt;span class="o"&gt;(&lt;/span&gt;post&lt;span class="o"&gt;)&lt;/span&gt;: /bin/sh
    Checking &lt;span class="k"&gt;for&lt;/span&gt; unpackaged file&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt;: /usr/lib/rpm/check-files /home/admin/rpmbuild/BUILDROOT/briansample-1.0-1.el7.centos.x86_64
    Wrote: /home/admin/rpmbuild/SRPMS/briansample-1.0-1.el7.centos.src.rpm
    Wrote: /home/admin/rpmbuild/RPMS/x86_64/briansample-1.0-1.el7.centos.x86_64.rpm
    Executing&lt;span class="o"&gt;(&lt;/span&gt;%clean&lt;span class="o"&gt;)&lt;/span&gt;: /bin/sh -e /var/tmp/rpm-tmp.UhdYZ0
    + &lt;span class="nb"&gt;umask&lt;/span&gt; &lt;span class="m"&gt;022&lt;/span&gt;
    + &lt;span class="nb"&gt;cd&lt;/span&gt; /home/admin/rpmbuild/BUILD
    + &lt;span class="nb"&gt;cd&lt;/span&gt; briansample-1.0
    + /usr/bin/rm -rf /home/admin/rpmbuild/BUILDROOT/briansample-1.0-1.el7.centos.x86_64
    + &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now let's see what had been generated :code:` tree /home/admin/rpmbuild/`
现在看看生成了什么！&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/home/admin/rpmbuild/
├── BUILD
│   └── briansample-1.0
│       ├── briansample.sh
│       └── briansample.tar
├── BUILDROOT
├── RPMS
│   └── x86_64
│       └── briansample-1.0-1.el7.centos.x86_64.rpm
├── SOURCES
│   └── briansample.tar
├── SPECS
│   └── newpackage.spec
└── SRPMS
    └── briansample-1.0-1.el7.centos.src.rpm
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And we can just install the package:
我们可以去安装这个 RPM 包。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo yum install ./briansample-1.0-1.el7.centos.x86_64.rpm&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And after installation, let's see what happened. Do all files copied to the destination?
安装完毕后，看看是否执行正确。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tree /usr/briansample/
/usr/briansample/
├── briansample.sh
└── briansample.tar
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yes, now our work is done.
是的，工作完成&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="concerns"&gt;
&lt;h2&gt;3. &lt;a class="toc-backref" href="#id10"&gt;Concerns / 一些考量&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;How can I install other packages during the installation.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果我有一些 依赖的 rpm 包应该怎么办？&lt;/p&gt;
&lt;p&gt;For example, I also want to install some helper tools like &lt;code&gt;vim&lt;/code&gt; and I have the rpm packages. But we cannot do this, because yum will lock DB during installation, you will get DB locked error in the &lt;code&gt;%post&lt;/code&gt; section.&lt;/p&gt;
&lt;p&gt;比方说，我需要安装一些辅助的工具，比如 &lt;code&gt;vim&lt;/code&gt; ， 并且我能下载这些rpm包。其实很难做到这一点。因为 yum 在安装过程中会将 DB 锁住。 如果我们在 &lt;code&gt;%post&lt;/code&gt;  安装其他rpm 包的时候，会得到一个 DB 锁无法获取的错误。&lt;/p&gt;
&lt;p&gt;One solution is to  remove the lock &lt;code&gt;rm -rf /var/lib/rpm/.rpm.lock&lt;/code&gt; . However, this is not recommended.&lt;/p&gt;
&lt;p&gt;有一个解决方法是 ， 移除这个锁，但是并不推荐。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;What about un-installation?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;What about patch?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="other-tips"&gt;
&lt;h2&gt;4. &lt;a class="toc-backref" href="#id11"&gt;Other tips / 其他的技巧&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Unpack the rpm file / 如何解压一个 rpm 包&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In Windows, you can use 7z software todo this.
Windows 下可以使用 7z 这样的软件。&lt;/p&gt;
&lt;p&gt;In Linux: &lt;code&gt;rpm2cpio ./packagecloud-test-1.1-1.x86_64.rpm | cpio -idmv&lt;/code&gt;
Linux 下使用这个命令工具； rpm2cpio 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;How to force to install packages / 如何强制安装软件包&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If your rpm database is destroyed, it is much difficult to restore it.
The only way that I found is to download in the same machine and install it then.&lt;/p&gt;
&lt;p&gt;如果 rpm 元数据库被损坏的话，非常难去恢复。
一个办法就是 去同样环境的机器上 下载，强制安装软件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rpm -Uvh /usr/uap/repo/*rpm --nodeps --scripts --force
-i install packages
-v provide more details
-h print &lt;span class="nb"&gt;hash&lt;/span&gt; marks to show progress
--nodepes:  don&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;t verify package dependencies
--scripts: list install/erase scriptlets from package&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt;
--force:
    --replacefiles                   ignore file conflicts between packages
    --replacepkgs                    reinstall &lt;span class="k"&gt;if&lt;/span&gt; the package is already present

rpm -ivh ./*rpm --justdb --nodeps --scripts --force
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="reference"&gt;
&lt;h2&gt;5. &lt;a class="toc-backref" href="#id12"&gt;Reference:&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Set Up an RPM Build Environment under CentOS : &lt;a class="reference external" href="https://wiki.centos.org/HowTos/SetupRpmBuildEnvironment"&gt;https://wiki.centos.org/HowTos/SetupRpmBuildEnvironment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Rpmbuild Tutorial &lt;a class="reference external" href="https://rpmbuildtut.wordpress.com/"&gt;https://rpmbuildtut.wordpress.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;RPM Packaging Guide &lt;a class="reference external" href="https://rpm-packaging-guide.github.io/"&gt;https://rpm-packaging-guide.github.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
</content><category term="Linux"></category><category term="CentOS7"></category><category term="RPM"></category></entry><entry><title>Local Yum Repo (CentOS 7) / 本地Yum源</title><link href="/local_yum_repo.html" rel="alternate"></link><published>2017-11-14T00:00:00+08:00</published><updated>2017-11-14T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:None,2017-11-14:/local_yum_repo.html</id><summary type="html">&lt;p class="first last"&gt;Local Yum Repo&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;span id="local-yum-repo-rst"&gt;&lt;/span&gt;&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#intro" id="id1"&gt;Intro 简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#prepare-the-packages" id="id2"&gt;Prepare the packages / 准备安装包&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#use-your-own-repo-yum" id="id3"&gt;Use your own REPO / 使用这个Yum源&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#installation" id="id4"&gt;Installation / 安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#reference" id="id5"&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="intro"&gt;
&lt;h2&gt;1. &lt;a class="toc-backref" href="#id1"&gt;Intro 简介&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This article is sampled by installing Java.&lt;/p&gt;
&lt;p&gt;基于JAVA介绍如何使用本地Yum源。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="prepare-the-packages"&gt;
&lt;h2&gt;2. &lt;a class="toc-backref" href="#id2"&gt;Prepare the packages / 准备安装包&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Find a clean CentOS with network available.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;找一个干净的 CentOS 环境，并且接通网络。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Download Software Packages 下载软件包&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To download software and their dependencies, you can just use native &lt;code&gt;yum&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;只需要使用 &lt;code&gt;yum&lt;/code&gt; 就可以下载并且解析依赖包。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Create a folder / 创建文件夹&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir ais_repo
&lt;span class="nb"&gt;cd&lt;/span&gt; ais_repo
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Download OpenJDK / 下载 OpenJDK&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo yum install --downloadonly --downloaddir ./ java-1.8.0-openjdk-headless.x86_64
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/tools/local_repo_01.png" /&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Make Local Repo / 制作本地 Yum 库&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It seems quite hard to create your own repo, since there are lots of package information to create and add.
But actually it is quite simple, and you can just make repo with simple commands.&lt;/p&gt;
&lt;p&gt;看起来很是复杂，因为有很多的依赖关系，但实际上，只需要很简单的命令就可以。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Install &lt;code&gt;createrepo&lt;/code&gt; / 安装 &lt;code&gt;createrepo&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;sudo yum install createrepo&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;create a directory to put packages and then make repo in that folder&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;创建一个目录来保存这些安装包。并且，制作安装包的元文件信息。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo mkdir /usr/share/ais_repo
sudo mv ./* /usr/share/ais_repo
sudo createrepo -v /usr/share/ais_repo
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's see what happened: / 看看发生了什么&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/tools/local_repo_02.png" /&gt;
&lt;/div&gt;
&lt;p&gt;As you can notice, there is an extra folder &lt;code&gt;repodata&lt;/code&gt; . Now, this is a local repo.&lt;/p&gt;
&lt;p&gt;可以看出来，文件夹中多了一个 &lt;code&gt;repodata&lt;/code&gt; 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="use-your-own-repo-yum"&gt;
&lt;h2&gt;3. &lt;a class="toc-backref" href="#id3"&gt;Use your own REPO / 使用这个Yum源&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Backup all the repo files. / 备份已经存在的 Yum 源配置文件&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /etc/yum.repos.d/
sudo mkdir bak
sudo mv *.repo ./bak
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Create local repo source file &lt;code&gt;/etc/yum.repos.d/local.repo&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为本地的Yum源添加配置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#name&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;local_server&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;#description&lt;/span&gt;
&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Thisis a &lt;span class="nb"&gt;local&lt;/span&gt; repo
&lt;span class="c1"&gt;#yum source&lt;/span&gt;
&lt;span class="nv"&gt;baseurl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;file:///usr/share/ais_repo
&lt;span class="nv"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="c1"&gt;#check GPG-KEY&lt;/span&gt;
&lt;span class="nv"&gt;gpgcheck&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Make local yum source, clear cache and start cache. 清除缓存，开始使用本地Yum源。&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo yum clean all
sudo yum makecache
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="installation"&gt;
&lt;h2&gt;4. &lt;a class="toc-backref" href="#id4"&gt;Installation / 安装&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /usr/share/ais_repo/
sudo yum install java-1.8.0-openjdk-headless-1.8.0.144-0.b01.el7_4.x86_64.rpm
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="reference"&gt;
&lt;h2&gt;5. &lt;a class="toc-backref" href="#id5"&gt;Reference&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://yq.aliyun.com/ziliao/97558/"&gt;https://yq.aliyun.com/ziliao/97558/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Linux"></category><category term="CentOS"></category></entry><entry><title>Sphinx And RST</title><link href="/Sphinx_And_RST.html" rel="alternate"></link><published>2017-11-08T00:00:00+08:00</published><updated>2017-11-08T00:00:00+08:00</updated><author><name>Brian Shen</name></author><id>tag:None,2017-11-08:/Sphinx_And_RST.html</id><summary type="html">&lt;p class="first last"&gt;Sphinx And RST&lt;/p&gt;
</summary><content type="html">&lt;div class="contents topic" id="contents"&gt;
&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#what-is-sphinx-sphinx" id="id3"&gt;What is &lt;code&gt;Sphinx&lt;/code&gt; / 什么是 &lt;code&gt;Sphinx&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#how-to-install-sphinx" id="id4"&gt;How to install &lt;code&gt;Sphinx&lt;/code&gt; / 怎么安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#best-practice" id="id5"&gt;Best Practice / 最佳实践&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#rst-language-rst" id="id6"&gt;RST Language / RST 语言简介&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#section" id="id7"&gt;Section / 章节&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#words-style" id="id8"&gt;Words Style / 样式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#list" id="id9"&gt;List / 清单&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#reference-link" id="id10"&gt;Reference Link / 参考链接&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#codes" id="id11"&gt;Codes / 代码段&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#pictures" id="id12"&gt;Pictures / 图片&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#tables" id="id13"&gt;Tables / 表格&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="what-is-sphinx-sphinx"&gt;
&lt;span id="id1"&gt;&lt;/span&gt;&lt;h2&gt;1. &lt;a class="toc-backref" href="#id3"&gt;What is &lt;code&gt;Sphinx&lt;/code&gt; / 什么是 &lt;code&gt;Sphinx&lt;/code&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Reference : &lt;a class="reference external" href="http://www.sphinx-doc.org/en/stable/"&gt;Official Page&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sphinx is a tool that makes it easy to create intelligent and beautiful documentation.&lt;/p&gt;
&lt;p&gt;Sphinx 可以让你轻松地创建只能而漂亮的文档。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="how-to-install-sphinx"&gt;
&lt;h2&gt;2. &lt;a class="toc-backref" href="#id4"&gt;How to install &lt;code&gt;Sphinx&lt;/code&gt; / 怎么安装&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Prerequisite / 前提:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;li&gt;Pip&lt;/li&gt;
&lt;/ul&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;Open cmd and execute:  / 打开命令行执行：&lt;/dt&gt;
&lt;dd&gt;&lt;code&gt;pip install sphinx&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;Usually, most people use a theme named &lt;code&gt;rtd&lt;/code&gt; , so install this theme: / 我们通常看到的主题的名字叫 &lt;code&gt;rtd&lt;/code&gt; ，可以这样安装：&lt;/dt&gt;
&lt;dd&gt;&lt;code&gt;pip install sphinx_rtd_theme&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;Create a folder, then run command: / 新建文件夹 并且运行命令：&lt;/dt&gt;
&lt;dd&gt;&lt;code&gt;sphinx-quickstart&lt;/code&gt; 。&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;After input some essential information, &lt;code&gt;sphinx&lt;/code&gt; has created some files.&lt;/p&gt;
&lt;p&gt;再输入一些必要的信息之后， &lt;code&gt;sphinx&lt;/code&gt; 以及自动的为你创建了一些文件。&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/tools/sphinx_02.png" /&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Sphinx
├── _build          &lt;span class="c1"&gt;# output&lt;/span&gt;
├── _static         &lt;span class="c1"&gt;# resource, like pictures and files&lt;/span&gt;
├── _templates      &lt;span class="c1"&gt;# ignore&lt;/span&gt;
├── conf.py         &lt;span class="c1"&gt;# Sphinx configuration file&lt;/span&gt;
├── index.rst       &lt;span class="c1"&gt;# entry&lt;/span&gt;
├── make.bat        &lt;span class="c1"&gt;# Window make file&lt;/span&gt;
├── Makefile        &lt;span class="c1"&gt;# Linux make file&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;index.rst&lt;/code&gt; is the entry file, &lt;code&gt;sphinx&lt;/code&gt; will use this file and include other files mentioned in it.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;index.rst&lt;/code&gt; 是主入口文件，&lt;code&gt;sphinx&lt;/code&gt; 创建的 文档会包含其中的所有的其他链接文件。&lt;/p&gt;
&lt;p&gt;Modify the configuration file &lt;code&gt;conf.py&lt;/code&gt; / 修改配置文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# sys.path.insert(0, os.path.abspath(&amp;#39;.&amp;#39;))&lt;/span&gt;
import sphinx_rtd_theme

&lt;span class="c1"&gt;# html_theme = &amp;#39;alabaster&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;html_theme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;sphinx_rtd_theme&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now run &lt;code&gt;.\make.bat html&lt;/code&gt; , it will automatically turn &lt;code&gt;rst&lt;/code&gt; into &lt;code&gt;html&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;现在，可以运行 &lt;code&gt;.\make.bat html&lt;/code&gt; ，这将会自动的将 &lt;code&gt;rst&lt;/code&gt; 转换为 &lt;code&gt;html&lt;/code&gt; 文件。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Sphinx
├── _build
│   ├── html
│   │    ├── index.html &lt;span class="o"&gt;(&lt;/span&gt;Open this&lt;span class="o"&gt;)&lt;/span&gt;
├── _static
├── _templates
├── conf.py
├── index.rst
├── make.bat
├── Makefile
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/tools/sphinx_03.png" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="best-practice"&gt;
&lt;h2&gt;3. &lt;a class="toc-backref" href="#id5"&gt;Best Practice / 最佳实践&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;No matter we use &lt;code&gt;Sphinx&lt;/code&gt; for personal documents or for team projects documents, there will be a lot of documents. So, how to organize them?&lt;/p&gt;
&lt;p&gt;无论是用 &lt;code&gt;Sphinx&lt;/code&gt; 来记录个人文档 还是 团队文档，毫无疑问都会慢慢积累大量的文档，所以，如何去组织他们呢？&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Create a folder named &lt;code&gt;_content&lt;/code&gt; for original documents, and include them in the main entry file &lt;code&gt;index.rst&lt;/code&gt; .&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;创建一个文件夹，叫 &lt;code&gt;_content&lt;/code&gt; 来存放原始的 rst 文件，并且 将需要的文档包括进 &lt;code&gt;index.rst&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;The content of &lt;code&gt;index.rst&lt;/code&gt; .&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Welcome to my documentation!
&lt;span class="o"&gt;==============================&lt;/span&gt;

.. toctree::
:maxdepth: &lt;span class="m"&gt;2&lt;/span&gt;
       :caption: Contents:

       ./_content/content_one.rst
       ./_content/content_two.rst
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The content of &lt;code&gt;content_one.rst&lt;/code&gt; / &lt;code&gt;content_one.rst&lt;/code&gt; 的内容：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Sphinx Content one
&lt;span class="c1"&gt;##################&lt;/span&gt;

RST Language one
^^^^^^^^^^^^^^^^

Header Sample One
*****************
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Compile and open in chrome: / 编译并且在 浏览器中打开：&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/tools/sphinx_04.png" /&gt;
&lt;/div&gt;
&lt;p&gt;If we need numbers, add &lt;code&gt;:numbered:&lt;/code&gt; in &lt;code&gt;index.rst&lt;/code&gt; .
如果我们需要序号的话，可以加上 &lt;code&gt;:numbered:&lt;/code&gt;  标志。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;.. toctree::
   :maxdepth: &lt;span class="m"&gt;2&lt;/span&gt;
   :numbered:
   :caption: Contents:
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Compile and open in chrome。 / 编译再次在浏览器中打开即可。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Multi Projects / 多个工程&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If we have two or projects, then how to organize?&lt;/p&gt;
&lt;p&gt;如果我们有多个工程的话，那么怎么组织文件结构呢？&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;index.rst
content/
├── Node
│   ├── NodeIndex.rst
│   └── Node_Scheduler.rst
├── Tools
│   ├── ToolIndex.rst
│   ├── Tools_DiskMount.rst
│   ├── Tools_LocalYumRepo.rst
│   └── Tools_PDFToWord.rst
└── images
    └── tools
        ├── local_repo_01.png
        ├── local_repo_02.png
        ├── mount_disk_01.png
        └── pdf_to_word_01.png
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The content of &lt;code&gt;index.rst&lt;/code&gt; .&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Welcome to my documentation!
&lt;span class="o"&gt;==============================&lt;/span&gt;

.. toctree::
:maxdepth: &lt;span class="m"&gt;2&lt;/span&gt;
       :caption: Contents:

       ./_content/Tools/ToolsIndex.rst
       ./_content/Node/NodeIndex.rst
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The content of &lt;code&gt;ToolsIndex.rst&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Project &lt;span class="nv"&gt;Tools&lt;/span&gt;
&lt;span class="o"&gt;==============&lt;/span&gt;

.. toctree::
:maxdepth: &lt;span class="m"&gt;2&lt;/span&gt;
       :caption: Contents:

       ./Tools_DiskMount.rst
       ./Tools_LocalYumRepo.rst
       ./Tools_PDFToWord.rst
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this way, every folder can become a project and the main entry &lt;code&gt;index.rst&lt;/code&gt; doesn't need to care about the structure of sub directory..&lt;/p&gt;
&lt;p&gt;这样的结构， 每一个文件夹就是一个工程，并且 顶层 不需要关心 子目录的结构。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="rst-language-rst"&gt;
&lt;h2&gt;4. &lt;a class="toc-backref" href="#id6"&gt;RST Language / RST 语言简介&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Reference : &lt;a class="reference external" href="http://www.sphinx-doc.org/en/stable/rest.html#internal-links"&gt;RST reference&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="section"&gt;
&lt;h3&gt;4.1. &lt;a class="toc-backref" href="#id7"&gt;Section / 章节&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Header&lt;/span&gt;
Sphinx Introduction
&lt;span class="c1"&gt;###################&lt;/span&gt;

&lt;span class="c1"&gt;# Sub Header&lt;/span&gt;
RST Language
^^^^^^^^^^^^

&lt;span class="c1"&gt;# Small Header&lt;/span&gt;
Header Sample
*************
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Although official suggestion is the following, but use the previous one, it is compatible with many platforms.&lt;/p&gt;
&lt;p&gt;虽然官方推荐是以下的标志，但是还是推荐上面的格式，因为兼容性更好。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# with overline, for parts&lt;/span&gt;
* with overline, &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;chapters&lt;/span&gt;
&lt;span class="o"&gt;=&lt;/span&gt;, &lt;span class="k"&gt;for&lt;/span&gt; sections
-, &lt;span class="k"&gt;for&lt;/span&gt; subsections
^, &lt;span class="k"&gt;for&lt;/span&gt; subsubsections
&lt;span class="s2"&gt;&amp;quot;, for paragraphs&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="words-style"&gt;
&lt;h3&gt;4.2. &lt;a class="toc-backref" href="#id8"&gt;Words Style / 样式&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;emphasis – alternate spelling for &lt;em&gt;emphasis&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;strong – alternate spelling for &lt;strong&gt;strong&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;literal – alternate spelling for &lt;tt class="docutils literal"&gt;literal&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;subscript – subscript text&lt;/li&gt;
&lt;li&gt;superscript – superscript text&lt;/li&gt;
&lt;li&gt;title-reference – for titles of books, periodicals, and other materials&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;*emphasis* , **strong**,  &lt;span class="sb"&gt;``&lt;/span&gt;literal&lt;span class="sb"&gt;``&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sample / 示例 :&lt;/p&gt;
&lt;blockquote&gt;
&lt;em&gt;emphasis&lt;/em&gt; , &lt;strong&gt;strong&lt;/strong&gt;,  &lt;tt class="docutils literal"&gt;literal&lt;/tt&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="list"&gt;
&lt;h3&gt;4.3. &lt;a class="toc-backref" href="#id9"&gt;List / 清单&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;* This is a bulleted list.
* It has two items, the second
  item uses two lines.

&lt;span class="m"&gt;1&lt;/span&gt;. This is a numbered list.
&lt;span class="m"&gt;2&lt;/span&gt;. It has two items too.

&lt;span class="c1"&gt;#. This is a numbered list.&lt;/span&gt;
&lt;span class="c1"&gt;#. It has two items too.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Sample / 示例:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;This is a bulleted list.&lt;/li&gt;
&lt;li&gt;It has two items, the second
item uses two lines.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;This is a numbered list.&lt;/li&gt;
&lt;li&gt;It has two items too.&lt;/li&gt;
&lt;li&gt;This is a numbered list.&lt;/li&gt;
&lt;li&gt;It has two items too.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="reference-link"&gt;
&lt;h3&gt;4.4. &lt;a class="toc-backref" href="#id10"&gt;Reference Link / 参考链接&lt;/a&gt;&lt;/h3&gt;
&lt;ul id="sphinx-external"&gt;
&lt;li&gt;&lt;p class="first"&gt;External Link / 外部链接&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;Official Page &amp;lt;http://www.sphinx-doc.org/en/stable/&amp;gt;&lt;span class="sb"&gt;`&lt;/span&gt;_
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sample / 样例:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.sphinx-doc.org/en/stable/"&gt;Official Page&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Internal Link / 内部链接&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Add a link flag in document. / 在文档中添加一个连接标志&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;.. _sphinx-external:

- External Link
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To use this link: / 使用它：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:ref:&lt;span class="sb"&gt;`&lt;/span&gt;Go to External &amp;lt;sphinx-external&amp;gt;&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sample / 示例(Fail in pelican)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="codes"&gt;
&lt;h3&gt;4.5. &lt;a class="toc-backref" href="#id11"&gt;Codes / 代码段&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Simple Code / 示例代码&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;This is an introduction to :code:&lt;span class="sb"&gt;`&lt;/span&gt;Sphinx&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;Sample / 示例:&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;This is an introduction to &lt;code&gt;Sphinx&lt;/code&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Doc tree / 文档树&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;.. code-block:: bash

    storage_env
    ├── config
    ├── storage
    │   ├── provision  &lt;span class="o"&gt;(&lt;/span&gt;provision core codes&lt;span class="o"&gt;)&lt;/span&gt;
    │   │    ├── salesforce_provision.py
    │   │    ├── salesforce_sandbox_provision.py
    │   │    ├── salesforce_production_provision.py
    │   │    └── salesforce_utils
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sample / 示例:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;storage_env
├── config
├── storage
│   ├── provision  &lt;span class="o"&gt;(&lt;/span&gt;provision core codes&lt;span class="o"&gt;)&lt;/span&gt;
│   │    ├── salesforce_provision.py
│   │    ├── salesforce_sandbox_provision.py
│   │    ├── salesforce_production_provision.py
│   │    └── salesforce_utils
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Javascript / JS 代码&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;.. code-block:: javascript

    console.log&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Sphinx&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sample / 示例:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Sphinx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="pictures"&gt;
&lt;h3&gt;4.6. &lt;a class="toc-backref" href="#id12"&gt;Pictures / 图片&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;.. figure::  /images/tools/sphinx_01.png
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sample / 示例:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="figure"&gt;
&lt;img alt="" src="/images/tools/sphinx_01.png" /&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="tables"&gt;
&lt;h3&gt;4.7. &lt;a class="toc-backref" href="#id13"&gt;Tables / 表格&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;.. list-table::
    :widths: &lt;span class="m"&gt;25&lt;/span&gt; &lt;span class="m"&gt;25&lt;/span&gt; &lt;span class="m"&gt;50&lt;/span&gt;
    :header-rows: &lt;span class="m"&gt;1&lt;/span&gt;

    * - Heading row &lt;span class="m"&gt;1&lt;/span&gt;, column &lt;span class="m"&gt;1&lt;/span&gt;
      - Heading row &lt;span class="m"&gt;1&lt;/span&gt;, column &lt;span class="m"&gt;2&lt;/span&gt;
      - Heading row &lt;span class="m"&gt;1&lt;/span&gt;, column &lt;span class="m"&gt;3&lt;/span&gt;
    * - Row &lt;span class="m"&gt;1&lt;/span&gt;, column &lt;span class="m"&gt;1&lt;/span&gt;
      -
      - Row &lt;span class="m"&gt;1&lt;/span&gt;, column &lt;span class="m"&gt;3&lt;/span&gt;
    * - Row &lt;span class="m"&gt;2&lt;/span&gt;, column &lt;span class="m"&gt;1&lt;/span&gt;
      - Row &lt;span class="m"&gt;2&lt;/span&gt;, column &lt;span class="m"&gt;2&lt;/span&gt;
      - Row &lt;span class="m"&gt;2&lt;/span&gt;, column &lt;span class="m"&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Sample / 示例&lt;/li&gt;
&lt;/ul&gt;
&lt;table border="1" class="colwidths-given docutils"&gt;
&lt;colgroup&gt;
&lt;col width="25%" /&gt;
&lt;col width="25%" /&gt;
&lt;col width="50%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Heading row 1, column 1&lt;/th&gt;
&lt;th class="head"&gt;Heading row 1, column 2&lt;/th&gt;
&lt;th class="head"&gt;Heading row 1, column 3&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Row 1, column 1&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;Row 1, column 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Row 2, column 1&lt;/td&gt;
&lt;td&gt;Row 2, column 2&lt;/td&gt;
&lt;td&gt;Row 2, column 3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="Sphinx"></category><category term="RST"></category></entry></feed>